unit uPSI_JvImageDrawThread;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_JvImageDrawThread = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TJvImageDrawThread(CL: TPSPascalCompiler);
procedure SIRegister_JvImageDrawThread(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TJvImageDrawThread(CL: TPSRuntimeClassImporter);
procedure RIRegister_JvImageDrawThread(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   JvImageDrawThread
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_JvImageDrawThread]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TJvImageDrawThread(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TThread', 'TJvImageDrawThread') do
  with CL.AddClassN(CL.FindClass('TThread'),'TJvImageDrawThread') do
  begin
    RegisterProperty('Tag', 'Integer', iptrw);
    RegisterProperty('Delay', 'Cardinal', iptrw);
    RegisterProperty('OnDraw', 'TNotifyEvent', iptrw);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_JvImageDrawThread(CL: TPSPascalCompiler);
begin
  SIRegister_TJvImageDrawThread(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure TJvImageDrawThreadOnDraw_W(Self: TJvImageDrawThread; const T: TNotifyEvent);
begin Self.OnDraw := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvImageDrawThreadOnDraw_R(Self: TJvImageDrawThread; var T: TNotifyEvent);
begin T := Self.OnDraw; end;

(*----------------------------------------------------------------------------*)
procedure TJvImageDrawThreadDelay_W(Self: TJvImageDrawThread; const T: Cardinal);
begin Self.Delay := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvImageDrawThreadDelay_R(Self: TJvImageDrawThread; var T: Cardinal);
begin T := Self.Delay; end;

(*----------------------------------------------------------------------------*)
procedure TJvImageDrawThreadTag_W(Self: TJvImageDrawThread; const T: Integer);
begin Self.Tag := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvImageDrawThreadTag_R(Self: TJvImageDrawThread; var T: Integer);
begin T := Self.Tag; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TJvImageDrawThread(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TJvImageDrawThread) do
  begin
    RegisterPropertyHelper(@TJvImageDrawThreadTag_R,@TJvImageDrawThreadTag_W,'Tag');
    RegisterPropertyHelper(@TJvImageDrawThreadDelay_R,@TJvImageDrawThreadDelay_W,'Delay');
    RegisterPropertyHelper(@TJvImageDrawThreadOnDraw_R,@TJvImageDrawThreadOnDraw_W,'OnDraw');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_JvImageDrawThread(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TJvImageDrawThread(CL);
end;

 
 
{ TPSImport_JvImageDrawThread }
(*----------------------------------------------------------------------------*)
procedure TPSImport_JvImageDrawThread.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_JvImageDrawThread(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_JvImageDrawThread.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_JvImageDrawThread(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
