unit uPSI_synamisc;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_synamisc = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_synamisc(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_synamisc_Routines(S: TPSExec);

procedure Register;

implementation


uses
   synautil
  ,blcksock
  //,Libc
  ,Windows
  ,synamisc
  ;


procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_synamisc]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_synamisc(CL: TPSPascalCompiler);
begin
  CL.AddTypeS('TProxySetting', 'record Host : string; Port : string; Bypass : string; end');
 CL.AddDelphiFunction('Procedure WakeOnLan( MAC, IP : string)');
 CL.AddDelphiFunction('Function GetDNS : string');
 CL.AddDelphiFunction('Function GetIEProxy( protocol : string) : TProxySetting');
 CL.AddDelphiFunction('Function GetLocalIPs : string');
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_synamisc_Routines(S: TPSExec);
begin
 S.RegisterDelphiFunction(@WakeOnLan, 'WakeOnLan', cdRegister);
 S.RegisterDelphiFunction(@GetDNS, 'GetDNS', cdRegister);
 S.RegisterDelphiFunction(@GetIEProxy, 'GetIEProxy', cdRegister);
 S.RegisterDelphiFunction(@GetLocalIPs, 'GetLocalIPs', cdRegister);
end;



{ TPSImport_synamisc }
(*----------------------------------------------------------------------------*)
procedure TPSImport_synamisc.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_synamisc(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_synamisc.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  //RIRegister_synamisc(ri);
  RIRegister_synamisc_Routines(CompExec.Exec); // comment it if no routines
end;
(*----------------------------------------------------------------------------*)
 
 
end.
