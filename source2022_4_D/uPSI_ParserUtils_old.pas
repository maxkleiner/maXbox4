unit uPSI_ParserUtils;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 

 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_ParserUtils = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_ParserUtils(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_ParserUtils_Routines(S: TPSExec);

procedure Register;

implementation


uses
   uPSUtils
  ,ParserUtils
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_ParserUtils]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_ParserUtils(CL: TPSPascalCompiler);
begin
 CL.AddConstantN('version','String').SetString( 'v0.7');
 CL.AddDelphiFunction('Procedure RaiseError( const errormsg : string; row, col : integer)');
 CL.AddDelphiFunction('Function GetLicence : string');
 CL.AddDelphiFunction('Function GetUsedUnitList( list : Tstringlist) : string');
 CL.AddDelphiFunction('Function GetTokenName( TokenID : TPSPasToken) : string');
 CL.AddConstantN('NewLine','String').SetString( #13#10);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_ParserUtils_Routines(S: TPSExec);
begin
 S.RegisterDelphiFunction(@RaiseError, 'RaiseError', cdRegister);
 S.RegisterDelphiFunction(@GetLicence, 'GetLicence', cdRegister);
 S.RegisterDelphiFunction(@GetUsedUnitList, 'GetUsedUnitList', cdRegister);
 S.RegisterDelphiFunction(@GetTokenName, 'GetTokenName', cdRegister);
end;

 
 
{ TPSImport_ParserUtils }
(*----------------------------------------------------------------------------*)
procedure TPSImport_ParserUtils.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_ParserUtils(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_ParserUtils.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_ParserUtils_Routines(CompExec.Exec); // comment it if no routines
end;
(*----------------------------------------------------------------------------*)
 
 
end.
