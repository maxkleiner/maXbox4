unit uPSI_IdCoderUUE;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_IdCoderUUE = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TIdEncoderUUE(CL: TPSPascalCompiler);
procedure SIRegister_TIdEncoderUUEBase(CL: TPSPascalCompiler);
procedure SIRegister_TIdDecoderUUE(CL: TPSPascalCompiler);
procedure SIRegister_TIdDecoderUUEBase(CL: TPSPascalCompiler);
procedure SIRegister_IdCoderUUE(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TIdEncoderUUE(CL: TPSRuntimeClassImporter);
procedure RIRegister_TIdEncoderUUEBase(CL: TPSRuntimeClassImporter);
procedure RIRegister_TIdDecoderUUE(CL: TPSRuntimeClassImporter);
procedure RIRegister_TIdDecoderUUEBase(CL: TPSRuntimeClassImporter);
procedure RIRegister_IdCoderUUE(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   IdCoder3to4
  ,IdCoderUUE
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_IdCoderUUE]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TIdEncoderUUE(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TIdEncoderUUEBase', 'TIdEncoderUUE') do
  with CL.AddClassN(CL.FindClass('TIdEncoderUUEBase'),'TIdEncoderUUE') do
  begin
    RegisterMethod('Constructor Create( AOwner : TComponent)');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_TIdEncoderUUEBase(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TIdEncoder3to4', 'TIdEncoderUUEBase') do
  with CL.AddClassN(CL.FindClass('TIdEncoder3to4'),'TIdEncoderUUEBase') do
  begin
    RegisterMethod('Function Encode( ASrcStream : TStream; const ABytes : integer) : string');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_TIdDecoderUUE(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TIdDecoderUUEBase', 'TIdDecoderUUE') do
  with CL.AddClassN(CL.FindClass('TIdDecoderUUEBase'),'TIdDecoderUUE') do
  begin
    RegisterMethod('Constructor Create( AOwner : TComponent)');
    RegisterMethod('Procedure DecodeToStream( AIn : string; ADest : TStream)');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_TIdDecoderUUEBase(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TIdDecoder4to3', 'TIdDecoderUUEBase') do
  with CL.AddClassN(CL.FindClass('TIdDecoder4to3'),'TIdDecoderUUEBase') do
  begin
    RegisterMethod('Procedure DecodeToStream( AIn : string; ADest : TStream)');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_IdCoderUUE(CL: TPSPascalCompiler);
begin
  SIRegister_TIdDecoderUUEBase(CL);
  SIRegister_TIdDecoderUUE(CL);
  SIRegister_TIdEncoderUUEBase(CL);
  SIRegister_TIdEncoderUUE(CL);
 CL.AddConstantN('GUUECodeTable','string').SetString( '`!"#$%&''()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_');
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_TIdEncoderUUE(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TIdEncoderUUE) do
  begin
    RegisterConstructor(@TIdEncoderUUE.Create, 'Create');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TIdEncoderUUEBase(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TIdEncoderUUEBase) do
  begin
    RegisterMethod(@TIdEncoderUUEBase.Encode, 'Encode');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TIdDecoderUUE(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TIdDecoderUUE) do
  begin
    RegisterConstructor(@TIdDecoderUUE.Create, 'Create');
    RegisterMethod(@TIdDecoderUUE.DecodeToStream, 'DecodeToStream');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TIdDecoderUUEBase(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TIdDecoderUUEBase) do
  begin
    RegisterMethod(@TIdDecoderUUEBase.DecodeToStream, 'DecodeToStream');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_IdCoderUUE(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TIdDecoderUUEBase(CL);
  RIRegister_TIdDecoderUUE(CL);
  RIRegister_TIdEncoderUUEBase(CL);
  RIRegister_TIdEncoderUUE(CL);
end;

 
 
{ TPSImport_IdCoderUUE }
(*----------------------------------------------------------------------------*)
procedure TPSImport_IdCoderUUE.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_IdCoderUUE(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_IdCoderUUE.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_IdCoderUUE(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
