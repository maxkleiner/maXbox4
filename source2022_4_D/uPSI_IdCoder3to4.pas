unit uPSI_IdCoder3to4;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_IdCoder3to4 = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TIdDecoder4to3(CL: TPSPascalCompiler);
procedure SIRegister_TIdEncoder3to4(CL: TPSPascalCompiler);
procedure SIRegister_IdCoder3to4(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TIdDecoder4to3(CL: TPSRuntimeClassImporter);
procedure RIRegister_TIdEncoder3to4(CL: TPSRuntimeClassImporter);
procedure RIRegister_IdCoder3to4(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   IdCoder
  ,IdCoder3to4
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_IdCoder3to4]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TIdDecoder4to3(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TIdDecoder', 'TIdDecoder4to3') do
  with CL.AddClassN(CL.FindClass('TIdDecoder'),'TIdDecoder4to3') do
  begin
    RegisterMethod('Procedure ConstructDecodeTable( const ACodingTable : string; var ADecodeArray : TIdDecodeTable)');
    RegisterMethod('Procedure DecodeToStream( AIn : string; ADest : TStream)');
    RegisterMethod('Procedure DecodeUnit( AIn : Cardinal; var VOut1, VOut2, VOut3 : Byte)');
    RegisterProperty('FillChar', 'Char', iptrw);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_TIdEncoder3to4(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TIdEncoder', 'TIdEncoder3to4') do
  with CL.AddClassN(CL.FindClass('TIdEncoder'),'TIdEncoder3to4') do
  begin
    RegisterMethod('Function Encode1( ASrcStream : TStream; const ABytes : Integer) : string');
    RegisterMethod('Procedure EncodeUnit( const AIn1, AIn2, AIn3 : Byte; var VOut : Cardinal)');
    RegisterProperty('CodingTable', 'string', iptr);
    RegisterProperty('FillChar', 'Char', iptrw);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_IdCoder3to4(CL: TPSPascalCompiler);
begin
  SIRegister_TIdEncoder3to4(CL);
  //CL.AddTypeS('TIdEncoder3to4Class', 'class of TIdEncoder3to4');
  SIRegister_TIdDecoder4to3(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure TIdDecoder4to3FillChar_W(Self: TIdDecoder4to3; const T: Char);
begin Self.FillChar := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdDecoder4to3FillChar_R(Self: TIdDecoder4to3; var T: Char);
begin T := Self.FillChar; end;

(*----------------------------------------------------------------------------*)
procedure TIdEncoder3to4FillChar_W(Self: TIdEncoder3to4; const T: Char);
begin Self.FillChar := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdEncoder3to4FillChar_R(Self: TIdEncoder3to4; var T: Char);
begin T := Self.FillChar; end;

(*----------------------------------------------------------------------------*)
procedure TIdEncoder3to4CodingTable_R(Self: TIdEncoder3to4; var T: string);
begin T := Self.CodingTable; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TIdDecoder4to3(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TIdDecoder4to3) do
  begin
    RegisterMethod(@TIdDecoder4to3.ConstructDecodeTable, 'ConstructDecodeTable');
    RegisterMethod(@TIdDecoder4to3.DecodeToStream, 'DecodeToStream');
    RegisterMethod(@TIdDecoder4to3.DecodeUnit, 'DecodeUnit');
    RegisterPropertyHelper(@TIdDecoder4to3FillChar_R,@TIdDecoder4to3FillChar_W,'FillChar');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TIdEncoder3to4(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TIdEncoder3to4) do
  begin
    RegisterMethod(@TIdEncoder3to4.Encode, 'Encode1');
    RegisterMethod(@TIdEncoder3to4.EncodeUnit, 'EncodeUnit');
    RegisterPropertyHelper(@TIdEncoder3to4CodingTable_R,nil,'CodingTable');
    RegisterPropertyHelper(@TIdEncoder3to4FillChar_R,@TIdEncoder3to4FillChar_W,'FillChar');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_IdCoder3to4(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TIdEncoder3to4(CL);
  RIRegister_TIdDecoder4to3(CL);
end;

 
 
{ TPSImport_IdCoder3to4 }
(*----------------------------------------------------------------------------*)
procedure TPSImport_IdCoder3to4.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_IdCoder3to4(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_IdCoder3to4.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_IdCoder3to4(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
