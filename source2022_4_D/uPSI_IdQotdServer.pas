unit uPSI_IdQotdServer;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_IdQotdServer = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TIdQOTDServer(CL: TPSPascalCompiler);
procedure SIRegister_IdQotdServer(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TIdQOTDServer(CL: TPSRuntimeClassImporter);
procedure RIRegister_IdQotdServer(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   IdAssignedNumbers
  ,IdTCPServer
  ,IdQotdServer
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_IdQotdServer]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TIdQOTDServer(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TIdTCPServer', 'TIdQOTDServer') do
  with CL.AddClassN(CL.FindClass('TIdTCPServer'),'TIdQOTDServer') do
  begin
    RegisterMethod('Constructor Create( AOwner : TComponent)');
    RegisterProperty('OnCommandQOTD', 'TIdQOTDGetEvent', iptrw);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_IdQotdServer(CL: TPSPascalCompiler);
begin
  CL.AddTypeS('TIdQOTDGetEvent', 'Procedure ( Thread : TIdPeerThread)');
  SIRegister_TIdQOTDServer(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure TIdQOTDServerOnCommandQOTD_W(Self: TIdQOTDServer; const T: TIdQOTDGetEvent);
begin Self.OnCommandQOTD := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdQOTDServerOnCommandQOTD_R(Self: TIdQOTDServer; var T: TIdQOTDGetEvent);
begin T := Self.OnCommandQOTD; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TIdQOTDServer(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TIdQOTDServer) do
  begin
    RegisterConstructor(@TIdQOTDServer.Create, 'Create');
    RegisterPropertyHelper(@TIdQOTDServerOnCommandQOTD_R,@TIdQOTDServerOnCommandQOTD_W,'OnCommandQOTD');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_IdQotdServer(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TIdQOTDServer(CL);
end;

 
 
{ TPSImport_IdQotdServer }
(*----------------------------------------------------------------------------*)
procedure TPSImport_IdQotdServer.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_IdQotdServer(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_IdQotdServer.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_IdQotdServer(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
