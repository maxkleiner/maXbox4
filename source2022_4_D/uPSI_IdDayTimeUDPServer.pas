unit uPSI_IdDayTimeUDPServer;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_IdDayTimeUDPServer = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TIdDayTimeUDPServer(CL: TPSPascalCompiler);
procedure SIRegister_IdDayTimeUDPServer(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TIdDayTimeUDPServer(CL: TPSRuntimeClassImporter);
procedure RIRegister_IdDayTimeUDPServer(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   IdAssignedNumbers
  ,IdSocketHandle
  ,IdUDPBase
  ,IdUDPServer
  ,IdDayTimeUDPServer
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_IdDayTimeUDPServer]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TIdDayTimeUDPServer(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TIdUDPServer', 'TIdDayTimeUDPServer') do
  with CL.AddClassN(CL.FindClass('TIdUDPServer'),'TIdDayTimeUDPServer') do
  begin
    RegisterMethod('Constructor Create( axOwner : TComponent)');
    RegisterProperty('TimeZone', 'String', iptrw);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_IdDayTimeUDPServer(CL: TPSPascalCompiler);
begin
  SIRegister_TIdDayTimeUDPServer(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure TIdDayTimeUDPServerTimeZone_W(Self: TIdDayTimeUDPServer; const T: String);
begin Self.TimeZone := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdDayTimeUDPServerTimeZone_R(Self: TIdDayTimeUDPServer; var T: String);
begin T := Self.TimeZone; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TIdDayTimeUDPServer(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TIdDayTimeUDPServer) do
  begin
    RegisterConstructor(@TIdDayTimeUDPServer.Create, 'Create');
    RegisterPropertyHelper(@TIdDayTimeUDPServerTimeZone_R,@TIdDayTimeUDPServerTimeZone_W,'TimeZone');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_IdDayTimeUDPServer(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TIdDayTimeUDPServer(CL);
end;

 
 
{ TPSImport_IdDayTimeUDPServer }
(*----------------------------------------------------------------------------*)
procedure TPSImport_IdDayTimeUDPServer.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_IdDayTimeUDPServer(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_IdDayTimeUDPServer.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_IdDayTimeUDPServer(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
