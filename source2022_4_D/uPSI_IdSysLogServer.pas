unit uPSI_IdSysLogServer;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_IdSysLogServer = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TIdSyslogServer(CL: TPSPascalCompiler);
procedure SIRegister_IdSysLogServer(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TIdSyslogServer(CL: TPSRuntimeClassImporter);
procedure RIRegister_IdSysLogServer(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   IdAssignedNumbers
  ,IdBaseComponent
  ,IdComponent
  ,IdException
  ,IdGlobal
  ,IdSocketHandle
  ,IdStackConsts
  ,IdThread
  ,IdUDPBase
  ,IdUDPServer
  ,IdSysLogMessage
  ,IdSysLog
  ,IdSysLogServer
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_IdSysLogServer]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TIdSyslogServer(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TIdUDPServer', 'TIdSyslogServer') do
  with CL.AddClassN(CL.FindClass('TIdUDPServer'),'TIdSyslogServer') do
  begin
    RegisterMethod('Constructor Create( AOwner : TComponent)');
    RegisterProperty('OnSyslog', 'TOnSyslogEvent', iptrw);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_IdSysLogServer(CL: TPSPascalCompiler);
begin
  CL.AddTypeS('TOnSyslogEvent', 'Procedure ( Sender : TObject; ASysLogMessage :'
   +' TIdSysLogMessage; ABinding : TIdSocketHandle)');
  SIRegister_TIdSyslogServer(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure TIdSyslogServerOnSyslog_W(Self: TIdSyslogServer; const T: TOnSyslogEvent);
begin Self.OnSyslog := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdSyslogServerOnSyslog_R(Self: TIdSyslogServer; var T: TOnSyslogEvent);
begin T := Self.OnSyslog; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TIdSyslogServer(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TIdSyslogServer) do
  begin
    RegisterConstructor(@TIdSyslogServer.Create, 'Create');
    RegisterPropertyHelper(@TIdSyslogServerOnSyslog_R,@TIdSyslogServerOnSyslog_W,'OnSyslog');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_IdSysLogServer(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TIdSyslogServer(CL);
end;

 
 
{ TPSImport_IdSysLogServer }
(*----------------------------------------------------------------------------*)
procedure TPSImport_IdSysLogServer.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_IdSysLogServer(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_IdSysLogServer.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_IdSysLogServer(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
