unit uPSI_IdTimeServer;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_IdTimeServer = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TIdTimeServer(CL: TPSPascalCompiler);
procedure SIRegister_IdTimeServer(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TIdTimeServer(CL: TPSRuntimeClassImporter);
procedure RIRegister_IdTimeServer(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   IdAssignedNumbers
  ,IdTCPServer
  ,IdTimeServer
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_IdTimeServer]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TIdTimeServer(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TIdTCPServer', 'TIdTimeServer') do
  with CL.AddClassN(CL.FindClass('TIdTCPServer'),'TIdTimeServer') do
  begin
    RegisterMethod('Constructor Create( AOwner : TComponent)');
    RegisterProperty('BaseDate', 'TDateTime', iptrw);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_IdTimeServer(CL: TPSPascalCompiler);
begin
 CL.AddConstantN('TIME_DEFBASEDATE','LongInt').SetInt( 2);
  SIRegister_TIdTimeServer(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure TIdTimeServerBaseDate_W(Self: TIdTimeServer; const T: TDateTime);
begin Self.BaseDate := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdTimeServerBaseDate_R(Self: TIdTimeServer; var T: TDateTime);
begin T := Self.BaseDate; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TIdTimeServer(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TIdTimeServer) do
  begin
    RegisterConstructor(@TIdTimeServer.Create, 'Create');
    RegisterPropertyHelper(@TIdTimeServerBaseDate_R,@TIdTimeServerBaseDate_W,'BaseDate');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_IdTimeServer(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TIdTimeServer(CL);
end;

 
 
{ TPSImport_IdTimeServer }
(*----------------------------------------------------------------------------*)
procedure TPSImport_IdTimeServer.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_IdTimeServer(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_IdTimeServer.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_IdTimeServer(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
