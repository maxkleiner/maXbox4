unit uPSI_StreamWrap1;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_StreamWrap1 = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_StreamWrap1(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_StreamWrap1_Routines(S: TPSExec);

procedure Register;

implementation


uses
   StreamWrap1
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_StreamWrap1]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_StreamWrap1(CL: TPSPascalCompiler);
begin
 CL.AddDelphiFunction('Procedure StrToStream( s : String; strm : TMemoryStream)');
 CL.AddDelphiFunction('Function StrLoadStream( strm : TStream) : String');
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_StreamWrap1_Routines(S: TPSExec);
begin
 S.RegisterDelphiFunction(@StrToStream, 'StrToStream', cdRegister);
 S.RegisterDelphiFunction(@StrLoadStream, 'StrLoadStream', cdRegister);
end;

 
 
{ TPSImport_StreamWrap1 }
(*----------------------------------------------------------------------------*)
procedure TPSImport_StreamWrap1.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_StreamWrap1(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_StreamWrap1.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_StreamWrap1(ri);
  RIRegister_StreamWrap1_Routines(CompExec.Exec); // comment it if no routines
end;
(*----------------------------------------------------------------------------*)
 
 
end.
