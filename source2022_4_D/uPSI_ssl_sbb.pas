unit uPSI_ssl_sbb;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_ssl_sbb = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TSSLSBB(CL: TPSPascalCompiler);
procedure SIRegister_ssl_sbb(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TSSLSBB(CL: TPSRuntimeClassImporter);
procedure RIRegister_ssl_sbb(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   Windows
  ,blcksock
  ,synsock
  ,synautil
  ,synacode
  ,SBClient
  ,SBServer
  ,SBX509
  ,SBWinCertStorage
  ,SBCustomCertStorage
  ,SBUtils
  ,SBConstants
  ,SBSessionPool
  ,ssl_sbb
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_ssl_sbb]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TSSLSBB(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TCustomSSL', 'TSSLSBB') do
  with CL.AddClassN(CL.FindClass('TCustomSSL'),'TSSLSBB') do
  begin
    RegisterProperty('ElSecureClient', 'TElSecureClient', iptrw);
    RegisterProperty('ElSecureServer', 'TElSecureServer', iptrw);
    RegisterProperty('CipherSuites', 'TBits', iptrw);
    RegisterProperty('CipherSuite', 'Integer', iptr);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_ssl_sbb(CL: TPSPascalCompiler);
begin
 CL.AddConstantN('DEFAULT_RECV_BUFFER','LongInt').SetInt( 32768);
  SIRegister_TSSLSBB(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure TSSLSBBCipherSuite_R(Self: TSSLSBB; var T: Integer);
begin T := Self.CipherSuite; end;

(*----------------------------------------------------------------------------*)
procedure TSSLSBBCipherSuites_W(Self: TSSLSBB; const T: TBits);
begin Self.CipherSuites := T; end;

(*----------------------------------------------------------------------------*)
procedure TSSLSBBCipherSuites_R(Self: TSSLSBB; var T: TBits);
begin T := Self.CipherSuites; end;

(*----------------------------------------------------------------------------*)
procedure TSSLSBBElSecureServer_W(Self: TSSLSBB; const T: TElSecureServer);
begin Self.ElSecureServer := T; end;

(*----------------------------------------------------------------------------*)
procedure TSSLSBBElSecureServer_R(Self: TSSLSBB; var T: TElSecureServer);
begin T := Self.ElSecureServer; end;

(*----------------------------------------------------------------------------*)
procedure TSSLSBBElSecureClient_W(Self: TSSLSBB; const T: TElSecureClient);
begin Self.ElSecureClient := T; end;

(*----------------------------------------------------------------------------*)
procedure TSSLSBBElSecureClient_R(Self: TSSLSBB; var T: TElSecureClient);
begin T := Self.ElSecureClient; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TSSLSBB(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TSSLSBB) do
  begin
    RegisterPropertyHelper(@TSSLSBBElSecureClient_R,@TSSLSBBElSecureClient_W,'ElSecureClient');
    RegisterPropertyHelper(@TSSLSBBElSecureServer_R,@TSSLSBBElSecureServer_W,'ElSecureServer');
    RegisterPropertyHelper(@TSSLSBBCipherSuites_R,@TSSLSBBCipherSuites_W,'CipherSuites');
    RegisterPropertyHelper(@TSSLSBBCipherSuite_R,nil,'CipherSuite');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_ssl_sbb(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TSSLSBB(CL);
end;

 
 
{ TPSImport_ssl_sbb }
(*----------------------------------------------------------------------------*)
procedure TPSImport_ssl_sbb.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_ssl_sbb(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_ssl_sbb.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_ssl_sbb(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
