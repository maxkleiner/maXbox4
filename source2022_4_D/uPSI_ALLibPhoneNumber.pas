unit uPSI_ALLibPhoneNumber;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 

 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_ALLibPhoneNumber = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_ALLibPhoneNumber(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_ALLibPhoneNumber_Routines(S: TPSExec);

procedure Register;

implementation


uses
   ALLibPhoneNumber
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_ALLibPhoneNumber]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_ALLibPhoneNumber(CL: TPSPascalCompiler);
begin
 CL.AddDelphiFunction('Function ALStrPhoneNumberToInt64( const PhoneNumber, CountryCode : AnsiString) : Int64;');
 CL.AddDelphiFunction('Function ALStrPhoneNumberToInt641( PhoneNumber : AnsiString) : Int64;');
 CL.AddDelphiFunction('Function ALInt64PhoneNumberToStr( PhoneNumber : Int64) : AnsiString');
 CL.AddDelphiFunction('Function ALGetPhoneNumberType( PhoneNumber : Int64) : integer');
 CL.AddConstantN('cALFixedLine','LongInt').SetInt( 0);
 CL.AddConstantN('cALMobile','LongInt').SetInt( 1);
 CL.AddConstantN('cALFixedLineOrMobil','LongInt').SetInt( 2);
 CL.AddConstantN('cALTollFree','LongInt').SetInt( 3);
 CL.AddConstantN('cALPremiumRate','LongInt').SetInt( 4);
 CL.AddConstantN('cALSharedCost','LongInt').SetInt( 5);
 CL.AddConstantN('cALVoIP','LongInt').SetInt( 6);
 CL.AddConstantN('cALPersonalNumber','LongInt').SetInt( 7);
 CL.AddConstantN('cALPager','LongInt').SetInt( 8);
 CL.AddConstantN('cALUAN','LongInt').SetInt( 9);
 CL.AddConstantN('cALVoiceMail','LongInt').SetInt( 10);
 CL.AddConstantN('cALUnknown','LongInt').SetInt( 11);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
Function ALStrPhoneNumberToInt641_P( PhoneNumber : AnsiString) : Int64;
Begin Result := ALLibPhoneNumber.ALStrPhoneNumberToInt64(PhoneNumber); END;

(*----------------------------------------------------------------------------*)
Function ALStrPhoneNumberToInt64_P( const PhoneNumber, CountryCode : AnsiString) : Int64;
Begin Result := ALLibPhoneNumber.ALStrPhoneNumberToInt64(PhoneNumber, CountryCode); END;

(*----------------------------------------------------------------------------*)
procedure RIRegister_ALLibPhoneNumber_Routines(S: TPSExec);
begin
 S.RegisterDelphiFunction(@ALStrPhoneNumberToInt64, 'ALStrPhoneNumberToInt64', cdRegister);
 S.RegisterDelphiFunction(@ALStrPhoneNumberToInt641, 'ALStrPhoneNumberToInt641', cdRegister);
 S.RegisterDelphiFunction(@ALInt64PhoneNumberToStr, 'ALInt64PhoneNumberToStr', cdRegister);
 S.RegisterDelphiFunction(@ALGetPhoneNumberType, 'ALGetPhoneNumberType', cdRegister);
end;

 
 
{ TPSImport_ALLibPhoneNumber }
(*----------------------------------------------------------------------------*)
procedure TPSImport_ALLibPhoneNumber.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_ALLibPhoneNumber(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_ALLibPhoneNumber.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_ALLibPhoneNumber_Routines(CompExec.Exec); // comment it if no routines
end;
(*----------------------------------------------------------------------------*)
 
 
end.
