unit uPSI_ovccolor;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_ovccolor = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TOvcColors(CL: TPSPascalCompiler);
procedure SIRegister_ovccolor(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TOvcColors(CL: TPSRuntimeClassImporter);
procedure RIRegister_ovccolor(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   Windows
  ,Graphics
  ,ovccolor
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_ovccolor]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TOvcColors(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TPersistent', 'TOvcColors') do
  with CL.AddClassN(CL.FindClass('TPersistent'),'TOvcColors') do
  begin
    RegisterMethod('Procedure Assign( Source : TPersistent)');
    RegisterMethod('Constructor Create( FG, BG : TColor)');
    RegisterProperty('OnColorChange', 'TNotifyEvent', iptrw);
    RegisterProperty('BackColor', 'TColor', iptrw);
    RegisterProperty('TextColor', 'TColor', iptrw);
    RegisterProperty('UseDefault', 'Boolean', iptrw);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_ovccolor(CL: TPSPascalCompiler);
begin
  SIRegister_TOvcColors(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure TOvcColorsUseDefault_W(Self: TOvcColors; const T: Boolean);
begin Self.UseDefault := T; end;

(*----------------------------------------------------------------------------*)
procedure TOvcColorsUseDefault_R(Self: TOvcColors; var T: Boolean);
begin T := Self.UseDefault; end;

(*----------------------------------------------------------------------------*)
procedure TOvcColorsTextColor_W(Self: TOvcColors; const T: TColor);
begin Self.TextColor := T; end;

(*----------------------------------------------------------------------------*)
procedure TOvcColorsTextColor_R(Self: TOvcColors; var T: TColor);
begin T := Self.TextColor; end;

(*----------------------------------------------------------------------------*)
procedure TOvcColorsBackColor_W(Self: TOvcColors; const T: TColor);
begin Self.BackColor := T; end;

(*----------------------------------------------------------------------------*)
procedure TOvcColorsBackColor_R(Self: TOvcColors; var T: TColor);
begin T := Self.BackColor; end;

(*----------------------------------------------------------------------------*)
procedure TOvcColorsOnColorChange_W(Self: TOvcColors; const T: TNotifyEvent);
begin Self.OnColorChange := T; end;

(*----------------------------------------------------------------------------*)
procedure TOvcColorsOnColorChange_R(Self: TOvcColors; var T: TNotifyEvent);
begin T := Self.OnColorChange; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TOvcColors(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TOvcColors) do
  begin
    RegisterMethod(@TOvcColors.Assign, 'Assign');
    RegisterConstructor(@TOvcColors.Create, 'Create');
    RegisterPropertyHelper(@TOvcColorsOnColorChange_R,@TOvcColorsOnColorChange_W,'OnColorChange');
    RegisterPropertyHelper(@TOvcColorsBackColor_R,@TOvcColorsBackColor_W,'BackColor');
    RegisterPropertyHelper(@TOvcColorsTextColor_R,@TOvcColorsTextColor_W,'TextColor');
    RegisterPropertyHelper(@TOvcColorsUseDefault_R,@TOvcColorsUseDefault_W,'UseDefault');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_ovccolor(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TOvcColors(CL);
end;

 
 
{ TPSImport_ovccolor }
(*----------------------------------------------------------------------------*)
procedure TPSImport_ovccolor.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_ovccolor(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_ovccolor.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_ovccolor(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
