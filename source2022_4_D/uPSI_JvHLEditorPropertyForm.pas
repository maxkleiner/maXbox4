unit uPSI_JvHLEditorPropertyForm;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_JvHLEditorPropertyForm = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TJvHLEdPropDlg(CL: TPSPascalCompiler);
procedure SIRegister_TJvHLEditorParamsForm(CL: TPSPascalCompiler);
procedure SIRegister_JvHLEditorPropertyForm(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TJvHLEdPropDlg(CL: TPSRuntimeClassImporter);
procedure RIRegister_TJvHLEditorParamsForm(CL: TPSRuntimeClassImporter);
procedure RIRegister_JvHLEditorPropertyForm(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   JclUnitVersioning
  ,Windows
  ,Messages
  ,Graphics
  ,ComCtrls
  ,Controls
  ,Forms
  ,StdCtrls
  ,ExtCtrls
  ,JvFormPlacement
  ,JvEditorCommon
  ,JvComponent
  ,JvHLEditor
  ,JvHLEditorPropertyForm
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_JvHLEditorPropertyForm]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TJvHLEdPropDlg(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TComponent', 'TJvHLEdPropDlg') do
  with CL.AddClassN(CL.FindClass('TComponent'),'TJvHLEdPropDlg') do
  begin
    RegisterMethod('Constructor Create( AOwner : TComponent)');
    RegisterMethod('Procedure Save');
    RegisterMethod('Procedure Restore');
    RegisterMethod('Procedure LoadHighlighterColors( AJvHLEditor : TJvCustomEditorBase; AHighlighter : TJvHighlighter)');
    RegisterMethod('Procedure SaveHighlighterColors( AJvHLEditor : TJvCustomEditorBase; AHighlighter : TJvHighlighter)');
    RegisterMethod('Function Execute : Boolean');
    RegisterMethod('Procedure LoadCurrentHighlighterColors');
    RegisterMethod('Procedure SaveCurrentHighlighterColors');
    RegisterProperty('JvHLEditor', 'TJvCustomEditorBase', iptrw);
    RegisterProperty('Storage', 'TJvFormStorage', iptrw);
    RegisterProperty('ColorSamples', 'TStrings', iptrw);
    RegisterProperty('HighlighterCombo', 'Boolean', iptrw);
    RegisterProperty('ActivePage', 'TJvHLEdActivePage', iptrw);
    RegisterProperty('ReadFrom', 'TJvHLEdReadFrom', iptrw);
    RegisterProperty('Pages', 'TJvHLEdPages', iptrw);
    RegisterProperty('StorageSection', 'string', iptrw);
    RegisterProperty('OnDialogPopup', 'TOnDialogPopup', iptrw);
    RegisterProperty('OnDialogClosed', 'TOnDialogClosed', iptrw);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_TJvHLEditorParamsForm(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TJvForm', 'TJvHLEditorParamsForm') do
  with CL.AddClassN(CL.FindClass('TJvForm'),'TJvHLEditorParamsForm') do
  begin
    RegisterProperty('Pages', 'TPageControl', iptrw);
    RegisterProperty('bCancel', 'TButton', iptrw);
    RegisterProperty('bOK', 'TButton', iptrw);
    RegisterProperty('tsEditor', 'TTabSheet', iptrw);
    RegisterProperty('lblEditorSpeedSettings', 'TLabel', iptrw);
    RegisterProperty('cbKeyboardLayout', 'TComboBox', iptrw);
    RegisterProperty('gbEditor', 'TGroupBox', iptrw);
    RegisterProperty('cbUndoAfterSave', 'TCheckBox', iptrw);
    RegisterProperty('cbDoubleClickLine', 'TCheckBox', iptrw);
    RegisterProperty('cbKeepTrailingBlanks', 'TCheckBox', iptrw);
    RegisterProperty('cbSytaxHighlighting', 'TCheckBox', iptrw);
    RegisterProperty('cbAutoIndent', 'TCheckBox', iptrw);
    RegisterProperty('cbSmartTab', 'TCheckBox', iptrw);
    RegisterProperty('cbBackspaceUnindents', 'TCheckBox', iptrw);
    RegisterProperty('cbGroupUndo', 'TCheckBox', iptrw);
    RegisterProperty('cbCursorBeyondEOF', 'TCheckBox', iptrw);
    RegisterProperty('eTabStops', 'TEdit', iptrw);
    RegisterProperty('lblTabStops', 'TLabel', iptrw);
    RegisterProperty('tsColors', 'TTabSheet', iptrw);
    RegisterProperty('lblColorSpeedSettingsFor', 'TLabel', iptrw);
    RegisterProperty('cbColorSettings', 'TComboBox', iptrw);
    RegisterProperty('lblElement', 'TLabel', iptrw);
    RegisterProperty('lbElements', 'TListBox', iptrw);
    RegisterProperty('lblColor', 'TLabel', iptrw);
    RegisterProperty('gbTextAttributes', 'TGroupBox', iptrw);
    RegisterProperty('cbBold', 'TCheckBox', iptrw);
    RegisterProperty('cbItalic', 'TCheckBox', iptrw);
    RegisterProperty('cbUnderline', 'TCheckBox', iptrw);
    RegisterProperty('gbUseDefaultsFor', 'TGroupBox', iptrw);
    RegisterProperty('cbDefForeground', 'TCheckBox', iptrw);
    RegisterProperty('cbDefBackground', 'TCheckBox', iptrw);
    RegisterProperty('Label6', 'TLabel', iptrw);
    RegisterProperty('Panel1', 'TPanel', iptrw);
    RegisterProperty('Cell0', 'TPanel', iptrw);
    RegisterProperty('Cell4', 'TPanel', iptrw);
    RegisterProperty('Cell8', 'TPanel', iptrw);
    RegisterProperty('Cell12', 'TPanel', iptrw);
    RegisterProperty('Cell1', 'TPanel', iptrw);
    RegisterProperty('Cell5', 'TPanel', iptrw);
    RegisterProperty('Cell9', 'TPanel', iptrw);
    RegisterProperty('Cell13', 'TPanel', iptrw);
    RegisterProperty('Cell2', 'TPanel', iptrw);
    RegisterProperty('Cell6', 'TPanel', iptrw);
    RegisterProperty('Cell10', 'TPanel', iptrw);
    RegisterProperty('Cell14', 'TPanel', iptrw);
    RegisterProperty('Cell3', 'TPanel', iptrw);
    RegisterProperty('Cell7', 'TPanel', iptrw);
    RegisterProperty('Cell11', 'TPanel', iptrw);
    RegisterProperty('Cell15', 'TPanel', iptrw);
    RegisterProperty('cbCursorBeyondEOL', 'TCheckBox', iptrw);
    RegisterMethod('Procedure FormCreate( Sender : TObject)');
    RegisterMethod('Procedure NotImplemented( Sender : TObject)');
    RegisterMethod('Procedure lbElementsClick( Sender : TObject)');
    RegisterMethod('Procedure lbElementsDrawItem( Control : TWinControl; Index : Integer; Rect : TRect; State : TOwnerDrawState)');
    RegisterMethod('Procedure ColorChange( Sender : TObject)');
    RegisterMethod('Procedure cbColorSettingsChange( Sender : TObject)');
    RegisterMethod('Procedure DefClick( Sender : TObject)');
    RegisterMethod('Procedure CellMouseDown( Sender : TObject; Button : TMouseButton; Shift : TShiftState; X, Y : Integer)');
    RegisterMethod('Constructor Create( AOwner : TComponent)');
    RegisterMethod('Procedure ParamsToControls');
    RegisterMethod('Procedure ControlsToParams');
    RegisterProperty('ColorSamples', 'TStrings', iptrw);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_JvHLEditorPropertyForm(CL: TPSPascalCompiler);
begin
  CL.AddClassN(CL.FindClass('TOBJECT'),'TJvHLEdPropDlg');
  SIRegister_TJvHLEditorParamsForm(CL);
  CL.AddTypeS('TJvHLEdActivePage', 'Integer');
  CL.AddTypeS('TJvHLEdReadFrom', '( rfStorage, rfHLEditor )');
  CL.AddTypeS('TJvHLEdPages', 'set of ( epEditor, epColors )');
  CL.AddTypeS('TOnDialogPopup', 'Procedure ( Sender : TObject; Form : TForm)');
  CL.AddTypeS('TOnDialogClosed', 'Procedure ( Sender : TObject; Form : TForm; A'
   +'pply : Boolean)');
  SIRegister_TJvHLEdPropDlg(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure TJvHLEdPropDlgOnDialogClosed_W(Self: TJvHLEdPropDlg; const T: TOnDialogClosed);
begin Self.OnDialogClosed := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEdPropDlgOnDialogClosed_R(Self: TJvHLEdPropDlg; var T: TOnDialogClosed);
begin T := Self.OnDialogClosed; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEdPropDlgOnDialogPopup_W(Self: TJvHLEdPropDlg; const T: TOnDialogPopup);
begin Self.OnDialogPopup := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEdPropDlgOnDialogPopup_R(Self: TJvHLEdPropDlg; var T: TOnDialogPopup);
begin T := Self.OnDialogPopup; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEdPropDlgStorageSection_W(Self: TJvHLEdPropDlg; const T: string);
begin Self.StorageSection := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEdPropDlgStorageSection_R(Self: TJvHLEdPropDlg; var T: string);
begin T := Self.StorageSection; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEdPropDlgPages_W(Self: TJvHLEdPropDlg; const T: TJvHLEdPages);
begin Self.Pages := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEdPropDlgPages_R(Self: TJvHLEdPropDlg; var T: TJvHLEdPages);
begin T := Self.Pages; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEdPropDlgReadFrom_W(Self: TJvHLEdPropDlg; const T: TJvHLEdReadFrom);
begin Self.ReadFrom := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEdPropDlgReadFrom_R(Self: TJvHLEdPropDlg; var T: TJvHLEdReadFrom);
begin T := Self.ReadFrom; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEdPropDlgActivePage_W(Self: TJvHLEdPropDlg; const T: TJvHLEdActivePage);
begin Self.ActivePage := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEdPropDlgActivePage_R(Self: TJvHLEdPropDlg; var T: TJvHLEdActivePage);
begin T := Self.ActivePage; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEdPropDlgHighlighterCombo_W(Self: TJvHLEdPropDlg; const T: Boolean);
begin Self.HighlighterCombo := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEdPropDlgHighlighterCombo_R(Self: TJvHLEdPropDlg; var T: Boolean);
begin T := Self.HighlighterCombo; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEdPropDlgColorSamples_W(Self: TJvHLEdPropDlg; const T: TStrings);
begin Self.ColorSamples := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEdPropDlgColorSamples_R(Self: TJvHLEdPropDlg; var T: TStrings);
begin T := Self.ColorSamples; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEdPropDlgStorage_W(Self: TJvHLEdPropDlg; const T: TJvFormStorage);
begin Self.Storage := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEdPropDlgStorage_R(Self: TJvHLEdPropDlg; var T: TJvFormStorage);
begin T := Self.Storage; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEdPropDlgJvHLEditor_W(Self: TJvHLEdPropDlg; const T: TJvCustomEditorBase);
begin Self.JvHLEditor := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEdPropDlgJvHLEditor_R(Self: TJvHLEdPropDlg; var T: TJvCustomEditorBase);
begin T := Self.JvHLEditor; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormColorSamples_W(Self: TJvHLEditorParamsForm; const T: TStrings);
begin Self.ColorSamples := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormColorSamples_R(Self: TJvHLEditorParamsForm; var T: TStrings);
begin T := Self.ColorSamples; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbCursorBeyondEOL_W(Self: TJvHLEditorParamsForm; const T: TCheckBox);
Begin Self.cbCursorBeyondEOL := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbCursorBeyondEOL_R(Self: TJvHLEditorParamsForm; var T: TCheckBox);
Begin T := Self.cbCursorBeyondEOL; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell15_W(Self: TJvHLEditorParamsForm; const T: TPanel);
Begin Self.Cell15 := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell15_R(Self: TJvHLEditorParamsForm; var T: TPanel);
Begin T := Self.Cell15; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell11_W(Self: TJvHLEditorParamsForm; const T: TPanel);
Begin Self.Cell11 := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell11_R(Self: TJvHLEditorParamsForm; var T: TPanel);
Begin T := Self.Cell11; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell7_W(Self: TJvHLEditorParamsForm; const T: TPanel);
Begin Self.Cell7 := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell7_R(Self: TJvHLEditorParamsForm; var T: TPanel);
Begin T := Self.Cell7; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell3_W(Self: TJvHLEditorParamsForm; const T: TPanel);
Begin Self.Cell3 := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell3_R(Self: TJvHLEditorParamsForm; var T: TPanel);
Begin T := Self.Cell3; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell14_W(Self: TJvHLEditorParamsForm; const T: TPanel);
Begin Self.Cell14 := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell14_R(Self: TJvHLEditorParamsForm; var T: TPanel);
Begin T := Self.Cell14; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell10_W(Self: TJvHLEditorParamsForm; const T: TPanel);
Begin Self.Cell10 := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell10_R(Self: TJvHLEditorParamsForm; var T: TPanel);
Begin T := Self.Cell10; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell6_W(Self: TJvHLEditorParamsForm; const T: TPanel);
Begin Self.Cell6 := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell6_R(Self: TJvHLEditorParamsForm; var T: TPanel);
Begin T := Self.Cell6; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell2_W(Self: TJvHLEditorParamsForm; const T: TPanel);
Begin Self.Cell2 := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell2_R(Self: TJvHLEditorParamsForm; var T: TPanel);
Begin T := Self.Cell2; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell13_W(Self: TJvHLEditorParamsForm; const T: TPanel);
Begin Self.Cell13 := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell13_R(Self: TJvHLEditorParamsForm; var T: TPanel);
Begin T := Self.Cell13; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell9_W(Self: TJvHLEditorParamsForm; const T: TPanel);
Begin Self.Cell9 := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell9_R(Self: TJvHLEditorParamsForm; var T: TPanel);
Begin T := Self.Cell9; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell5_W(Self: TJvHLEditorParamsForm; const T: TPanel);
Begin Self.Cell5 := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell5_R(Self: TJvHLEditorParamsForm; var T: TPanel);
Begin T := Self.Cell5; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell1_W(Self: TJvHLEditorParamsForm; const T: TPanel);
Begin Self.Cell1 := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell1_R(Self: TJvHLEditorParamsForm; var T: TPanel);
Begin T := Self.Cell1; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell12_W(Self: TJvHLEditorParamsForm; const T: TPanel);
Begin Self.Cell12 := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell12_R(Self: TJvHLEditorParamsForm; var T: TPanel);
Begin T := Self.Cell12; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell8_W(Self: TJvHLEditorParamsForm; const T: TPanel);
Begin Self.Cell8 := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell8_R(Self: TJvHLEditorParamsForm; var T: TPanel);
Begin T := Self.Cell8; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell4_W(Self: TJvHLEditorParamsForm; const T: TPanel);
Begin Self.Cell4 := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell4_R(Self: TJvHLEditorParamsForm; var T: TPanel);
Begin T := Self.Cell4; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell0_W(Self: TJvHLEditorParamsForm; const T: TPanel);
Begin Self.Cell0 := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormCell0_R(Self: TJvHLEditorParamsForm; var T: TPanel);
Begin T := Self.Cell0; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormPanel1_W(Self: TJvHLEditorParamsForm; const T: TPanel);
Begin Self.Panel1 := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormPanel1_R(Self: TJvHLEditorParamsForm; var T: TPanel);
Begin T := Self.Panel1; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormLabel6_W(Self: TJvHLEditorParamsForm; const T: TLabel);
Begin Self.Label6 := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormLabel6_R(Self: TJvHLEditorParamsForm; var T: TLabel);
Begin T := Self.Label6; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbDefBackground_W(Self: TJvHLEditorParamsForm; const T: TCheckBox);
Begin Self.cbDefBackground := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbDefBackground_R(Self: TJvHLEditorParamsForm; var T: TCheckBox);
Begin T := Self.cbDefBackground; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbDefForeground_W(Self: TJvHLEditorParamsForm; const T: TCheckBox);
Begin Self.cbDefForeground := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbDefForeground_R(Self: TJvHLEditorParamsForm; var T: TCheckBox);
Begin T := Self.cbDefForeground; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormgbUseDefaultsFor_W(Self: TJvHLEditorParamsForm; const T: TGroupBox);
Begin Self.gbUseDefaultsFor := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormgbUseDefaultsFor_R(Self: TJvHLEditorParamsForm; var T: TGroupBox);
Begin T := Self.gbUseDefaultsFor; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbUnderline_W(Self: TJvHLEditorParamsForm; const T: TCheckBox);
Begin Self.cbUnderline := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbUnderline_R(Self: TJvHLEditorParamsForm; var T: TCheckBox);
Begin T := Self.cbUnderline; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbItalic_W(Self: TJvHLEditorParamsForm; const T: TCheckBox);
Begin Self.cbItalic := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbItalic_R(Self: TJvHLEditorParamsForm; var T: TCheckBox);
Begin T := Self.cbItalic; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbBold_W(Self: TJvHLEditorParamsForm; const T: TCheckBox);
Begin Self.cbBold := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbBold_R(Self: TJvHLEditorParamsForm; var T: TCheckBox);
Begin T := Self.cbBold; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormgbTextAttributes_W(Self: TJvHLEditorParamsForm; const T: TGroupBox);
Begin Self.gbTextAttributes := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormgbTextAttributes_R(Self: TJvHLEditorParamsForm; var T: TGroupBox);
Begin T := Self.gbTextAttributes; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormlblColor_W(Self: TJvHLEditorParamsForm; const T: TLabel);
Begin Self.lblColor := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormlblColor_R(Self: TJvHLEditorParamsForm; var T: TLabel);
Begin T := Self.lblColor; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormlbElements_W(Self: TJvHLEditorParamsForm; const T: TListBox);
Begin Self.lbElements := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormlbElements_R(Self: TJvHLEditorParamsForm; var T: TListBox);
Begin T := Self.lbElements; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormlblElement_W(Self: TJvHLEditorParamsForm; const T: TLabel);
Begin Self.lblElement := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormlblElement_R(Self: TJvHLEditorParamsForm; var T: TLabel);
Begin T := Self.lblElement; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbColorSettings_W(Self: TJvHLEditorParamsForm; const T: TComboBox);
Begin Self.cbColorSettings := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbColorSettings_R(Self: TJvHLEditorParamsForm; var T: TComboBox);
Begin T := Self.cbColorSettings; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormlblColorSpeedSettingsFor_W(Self: TJvHLEditorParamsForm; const T: TLabel);
Begin Self.lblColorSpeedSettingsFor := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormlblColorSpeedSettingsFor_R(Self: TJvHLEditorParamsForm; var T: TLabel);
Begin T := Self.lblColorSpeedSettingsFor; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormtsColors_W(Self: TJvHLEditorParamsForm; const T: TTabSheet);
Begin Self.tsColors := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormtsColors_R(Self: TJvHLEditorParamsForm; var T: TTabSheet);
Begin T := Self.tsColors; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormlblTabStops_W(Self: TJvHLEditorParamsForm; const T: TLabel);
Begin Self.lblTabStops := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormlblTabStops_R(Self: TJvHLEditorParamsForm; var T: TLabel);
Begin T := Self.lblTabStops; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormeTabStops_W(Self: TJvHLEditorParamsForm; const T: TEdit);
Begin Self.eTabStops := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormeTabStops_R(Self: TJvHLEditorParamsForm; var T: TEdit);
Begin T := Self.eTabStops; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbCursorBeyondEOF_W(Self: TJvHLEditorParamsForm; const T: TCheckBox);
Begin Self.cbCursorBeyondEOF := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbCursorBeyondEOF_R(Self: TJvHLEditorParamsForm; var T: TCheckBox);
Begin T := Self.cbCursorBeyondEOF; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbGroupUndo_W(Self: TJvHLEditorParamsForm; const T: TCheckBox);
Begin Self.cbGroupUndo := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbGroupUndo_R(Self: TJvHLEditorParamsForm; var T: TCheckBox);
Begin T := Self.cbGroupUndo; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbBackspaceUnindents_W(Self: TJvHLEditorParamsForm; const T: TCheckBox);
Begin Self.cbBackspaceUnindents := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbBackspaceUnindents_R(Self: TJvHLEditorParamsForm; var T: TCheckBox);
Begin T := Self.cbBackspaceUnindents; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbSmartTab_W(Self: TJvHLEditorParamsForm; const T: TCheckBox);
Begin Self.cbSmartTab := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbSmartTab_R(Self: TJvHLEditorParamsForm; var T: TCheckBox);
Begin T := Self.cbSmartTab; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbAutoIndent_W(Self: TJvHLEditorParamsForm; const T: TCheckBox);
Begin Self.cbAutoIndent := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbAutoIndent_R(Self: TJvHLEditorParamsForm; var T: TCheckBox);
Begin T := Self.cbAutoIndent; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbSytaxHighlighting_W(Self: TJvHLEditorParamsForm; const T: TCheckBox);
Begin Self.cbSytaxHighlighting := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbSytaxHighlighting_R(Self: TJvHLEditorParamsForm; var T: TCheckBox);
Begin T := Self.cbSytaxHighlighting; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbKeepTrailingBlanks_W(Self: TJvHLEditorParamsForm; const T: TCheckBox);
Begin Self.cbKeepTrailingBlanks := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbKeepTrailingBlanks_R(Self: TJvHLEditorParamsForm; var T: TCheckBox);
Begin T := Self.cbKeepTrailingBlanks; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbDoubleClickLine_W(Self: TJvHLEditorParamsForm; const T: TCheckBox);
Begin Self.cbDoubleClickLine := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbDoubleClickLine_R(Self: TJvHLEditorParamsForm; var T: TCheckBox);
Begin T := Self.cbDoubleClickLine; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbUndoAfterSave_W(Self: TJvHLEditorParamsForm; const T: TCheckBox);
Begin Self.cbUndoAfterSave := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbUndoAfterSave_R(Self: TJvHLEditorParamsForm; var T: TCheckBox);
Begin T := Self.cbUndoAfterSave; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormgbEditor_W(Self: TJvHLEditorParamsForm; const T: TGroupBox);
Begin Self.gbEditor := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormgbEditor_R(Self: TJvHLEditorParamsForm; var T: TGroupBox);
Begin T := Self.gbEditor; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbKeyboardLayout_W(Self: TJvHLEditorParamsForm; const T: TComboBox);
Begin Self.cbKeyboardLayout := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormcbKeyboardLayout_R(Self: TJvHLEditorParamsForm; var T: TComboBox);
Begin T := Self.cbKeyboardLayout; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormlblEditorSpeedSettings_W(Self: TJvHLEditorParamsForm; const T: TLabel);
Begin Self.lblEditorSpeedSettings := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormlblEditorSpeedSettings_R(Self: TJvHLEditorParamsForm; var T: TLabel);
Begin T := Self.lblEditorSpeedSettings; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormtsEditor_W(Self: TJvHLEditorParamsForm; const T: TTabSheet);
Begin Self.tsEditor := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormtsEditor_R(Self: TJvHLEditorParamsForm; var T: TTabSheet);
Begin T := Self.tsEditor; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormbOK_W(Self: TJvHLEditorParamsForm; const T: TButton);
Begin Self.bOK := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormbOK_R(Self: TJvHLEditorParamsForm; var T: TButton);
Begin T := Self.bOK; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormbCancel_W(Self: TJvHLEditorParamsForm; const T: TButton);
Begin Self.bCancel := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormbCancel_R(Self: TJvHLEditorParamsForm; var T: TButton);
Begin T := Self.bCancel; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormPages_W(Self: TJvHLEditorParamsForm; const T: TPageControl);
Begin Self.Pages := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvHLEditorParamsFormPages_R(Self: TJvHLEditorParamsForm; var T: TPageControl);
Begin T := Self.Pages; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TJvHLEdPropDlg(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TJvHLEdPropDlg) do
  begin
    RegisterConstructor(@TJvHLEdPropDlg.Create, 'Create');
    RegisterMethod(@TJvHLEdPropDlg.Save, 'Save');
    RegisterMethod(@TJvHLEdPropDlg.Restore, 'Restore');
    RegisterMethod(@TJvHLEdPropDlg.LoadHighlighterColors, 'LoadHighlighterColors');
    RegisterMethod(@TJvHLEdPropDlg.SaveHighlighterColors, 'SaveHighlighterColors');
    RegisterMethod(@TJvHLEdPropDlg.Execute, 'Execute');
    RegisterMethod(@TJvHLEdPropDlg.LoadCurrentHighlighterColors, 'LoadCurrentHighlighterColors');
    RegisterMethod(@TJvHLEdPropDlg.SaveCurrentHighlighterColors, 'SaveCurrentHighlighterColors');
    RegisterPropertyHelper(@TJvHLEdPropDlgJvHLEditor_R,@TJvHLEdPropDlgJvHLEditor_W,'JvHLEditor');
    RegisterPropertyHelper(@TJvHLEdPropDlgStorage_R,@TJvHLEdPropDlgStorage_W,'Storage');
    RegisterPropertyHelper(@TJvHLEdPropDlgColorSamples_R,@TJvHLEdPropDlgColorSamples_W,'ColorSamples');
    RegisterPropertyHelper(@TJvHLEdPropDlgHighlighterCombo_R,@TJvHLEdPropDlgHighlighterCombo_W,'HighlighterCombo');
    RegisterPropertyHelper(@TJvHLEdPropDlgActivePage_R,@TJvHLEdPropDlgActivePage_W,'ActivePage');
    RegisterPropertyHelper(@TJvHLEdPropDlgReadFrom_R,@TJvHLEdPropDlgReadFrom_W,'ReadFrom');
    RegisterPropertyHelper(@TJvHLEdPropDlgPages_R,@TJvHLEdPropDlgPages_W,'Pages');
    RegisterPropertyHelper(@TJvHLEdPropDlgStorageSection_R,@TJvHLEdPropDlgStorageSection_W,'StorageSection');
    RegisterPropertyHelper(@TJvHLEdPropDlgOnDialogPopup_R,@TJvHLEdPropDlgOnDialogPopup_W,'OnDialogPopup');
    RegisterPropertyHelper(@TJvHLEdPropDlgOnDialogClosed_R,@TJvHLEdPropDlgOnDialogClosed_W,'OnDialogClosed');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TJvHLEditorParamsForm(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TJvHLEditorParamsForm) do
  begin
    RegisterPropertyHelper(@TJvHLEditorParamsFormPages_R,@TJvHLEditorParamsFormPages_W,'Pages');
    RegisterPropertyHelper(@TJvHLEditorParamsFormbCancel_R,@TJvHLEditorParamsFormbCancel_W,'bCancel');
    RegisterPropertyHelper(@TJvHLEditorParamsFormbOK_R,@TJvHLEditorParamsFormbOK_W,'bOK');
    RegisterPropertyHelper(@TJvHLEditorParamsFormtsEditor_R,@TJvHLEditorParamsFormtsEditor_W,'tsEditor');
    RegisterPropertyHelper(@TJvHLEditorParamsFormlblEditorSpeedSettings_R,@TJvHLEditorParamsFormlblEditorSpeedSettings_W,'lblEditorSpeedSettings');
    RegisterPropertyHelper(@TJvHLEditorParamsFormcbKeyboardLayout_R,@TJvHLEditorParamsFormcbKeyboardLayout_W,'cbKeyboardLayout');
    RegisterPropertyHelper(@TJvHLEditorParamsFormgbEditor_R,@TJvHLEditorParamsFormgbEditor_W,'gbEditor');
    RegisterPropertyHelper(@TJvHLEditorParamsFormcbUndoAfterSave_R,@TJvHLEditorParamsFormcbUndoAfterSave_W,'cbUndoAfterSave');
    RegisterPropertyHelper(@TJvHLEditorParamsFormcbDoubleClickLine_R,@TJvHLEditorParamsFormcbDoubleClickLine_W,'cbDoubleClickLine');
    RegisterPropertyHelper(@TJvHLEditorParamsFormcbKeepTrailingBlanks_R,@TJvHLEditorParamsFormcbKeepTrailingBlanks_W,'cbKeepTrailingBlanks');
    RegisterPropertyHelper(@TJvHLEditorParamsFormcbSytaxHighlighting_R,@TJvHLEditorParamsFormcbSytaxHighlighting_W,'cbSytaxHighlighting');
    RegisterPropertyHelper(@TJvHLEditorParamsFormcbAutoIndent_R,@TJvHLEditorParamsFormcbAutoIndent_W,'cbAutoIndent');
    RegisterPropertyHelper(@TJvHLEditorParamsFormcbSmartTab_R,@TJvHLEditorParamsFormcbSmartTab_W,'cbSmartTab');
    RegisterPropertyHelper(@TJvHLEditorParamsFormcbBackspaceUnindents_R,@TJvHLEditorParamsFormcbBackspaceUnindents_W,'cbBackspaceUnindents');
    RegisterPropertyHelper(@TJvHLEditorParamsFormcbGroupUndo_R,@TJvHLEditorParamsFormcbGroupUndo_W,'cbGroupUndo');
    RegisterPropertyHelper(@TJvHLEditorParamsFormcbCursorBeyondEOF_R,@TJvHLEditorParamsFormcbCursorBeyondEOF_W,'cbCursorBeyondEOF');
    RegisterPropertyHelper(@TJvHLEditorParamsFormeTabStops_R,@TJvHLEditorParamsFormeTabStops_W,'eTabStops');
    RegisterPropertyHelper(@TJvHLEditorParamsFormlblTabStops_R,@TJvHLEditorParamsFormlblTabStops_W,'lblTabStops');
    RegisterPropertyHelper(@TJvHLEditorParamsFormtsColors_R,@TJvHLEditorParamsFormtsColors_W,'tsColors');
    RegisterPropertyHelper(@TJvHLEditorParamsFormlblColorSpeedSettingsFor_R,@TJvHLEditorParamsFormlblColorSpeedSettingsFor_W,'lblColorSpeedSettingsFor');
    RegisterPropertyHelper(@TJvHLEditorParamsFormcbColorSettings_R,@TJvHLEditorParamsFormcbColorSettings_W,'cbColorSettings');
    RegisterPropertyHelper(@TJvHLEditorParamsFormlblElement_R,@TJvHLEditorParamsFormlblElement_W,'lblElement');
    RegisterPropertyHelper(@TJvHLEditorParamsFormlbElements_R,@TJvHLEditorParamsFormlbElements_W,'lbElements');
    RegisterPropertyHelper(@TJvHLEditorParamsFormlblColor_R,@TJvHLEditorParamsFormlblColor_W,'lblColor');
    RegisterPropertyHelper(@TJvHLEditorParamsFormgbTextAttributes_R,@TJvHLEditorParamsFormgbTextAttributes_W,'gbTextAttributes');
    RegisterPropertyHelper(@TJvHLEditorParamsFormcbBold_R,@TJvHLEditorParamsFormcbBold_W,'cbBold');
    RegisterPropertyHelper(@TJvHLEditorParamsFormcbItalic_R,@TJvHLEditorParamsFormcbItalic_W,'cbItalic');
    RegisterPropertyHelper(@TJvHLEditorParamsFormcbUnderline_R,@TJvHLEditorParamsFormcbUnderline_W,'cbUnderline');
    RegisterPropertyHelper(@TJvHLEditorParamsFormgbUseDefaultsFor_R,@TJvHLEditorParamsFormgbUseDefaultsFor_W,'gbUseDefaultsFor');
    RegisterPropertyHelper(@TJvHLEditorParamsFormcbDefForeground_R,@TJvHLEditorParamsFormcbDefForeground_W,'cbDefForeground');
    RegisterPropertyHelper(@TJvHLEditorParamsFormcbDefBackground_R,@TJvHLEditorParamsFormcbDefBackground_W,'cbDefBackground');
    RegisterPropertyHelper(@TJvHLEditorParamsFormLabel6_R,@TJvHLEditorParamsFormLabel6_W,'Label6');
    RegisterPropertyHelper(@TJvHLEditorParamsFormPanel1_R,@TJvHLEditorParamsFormPanel1_W,'Panel1');
    RegisterPropertyHelper(@TJvHLEditorParamsFormCell0_R,@TJvHLEditorParamsFormCell0_W,'Cell0');
    RegisterPropertyHelper(@TJvHLEditorParamsFormCell4_R,@TJvHLEditorParamsFormCell4_W,'Cell4');
    RegisterPropertyHelper(@TJvHLEditorParamsFormCell8_R,@TJvHLEditorParamsFormCell8_W,'Cell8');
    RegisterPropertyHelper(@TJvHLEditorParamsFormCell12_R,@TJvHLEditorParamsFormCell12_W,'Cell12');
    RegisterPropertyHelper(@TJvHLEditorParamsFormCell1_R,@TJvHLEditorParamsFormCell1_W,'Cell1');
    RegisterPropertyHelper(@TJvHLEditorParamsFormCell5_R,@TJvHLEditorParamsFormCell5_W,'Cell5');
    RegisterPropertyHelper(@TJvHLEditorParamsFormCell9_R,@TJvHLEditorParamsFormCell9_W,'Cell9');
    RegisterPropertyHelper(@TJvHLEditorParamsFormCell13_R,@TJvHLEditorParamsFormCell13_W,'Cell13');
    RegisterPropertyHelper(@TJvHLEditorParamsFormCell2_R,@TJvHLEditorParamsFormCell2_W,'Cell2');
    RegisterPropertyHelper(@TJvHLEditorParamsFormCell6_R,@TJvHLEditorParamsFormCell6_W,'Cell6');
    RegisterPropertyHelper(@TJvHLEditorParamsFormCell10_R,@TJvHLEditorParamsFormCell10_W,'Cell10');
    RegisterPropertyHelper(@TJvHLEditorParamsFormCell14_R,@TJvHLEditorParamsFormCell14_W,'Cell14');
    RegisterPropertyHelper(@TJvHLEditorParamsFormCell3_R,@TJvHLEditorParamsFormCell3_W,'Cell3');
    RegisterPropertyHelper(@TJvHLEditorParamsFormCell7_R,@TJvHLEditorParamsFormCell7_W,'Cell7');
    RegisterPropertyHelper(@TJvHLEditorParamsFormCell11_R,@TJvHLEditorParamsFormCell11_W,'Cell11');
    RegisterPropertyHelper(@TJvHLEditorParamsFormCell15_R,@TJvHLEditorParamsFormCell15_W,'Cell15');
    RegisterPropertyHelper(@TJvHLEditorParamsFormcbCursorBeyondEOL_R,@TJvHLEditorParamsFormcbCursorBeyondEOL_W,'cbCursorBeyondEOL');
    RegisterMethod(@TJvHLEditorParamsForm.FormCreate, 'FormCreate');
    RegisterMethod(@TJvHLEditorParamsForm.NotImplemented, 'NotImplemented');
    RegisterMethod(@TJvHLEditorParamsForm.lbElementsClick, 'lbElementsClick');
    RegisterMethod(@TJvHLEditorParamsForm.lbElementsDrawItem, 'lbElementsDrawItem');
    RegisterMethod(@TJvHLEditorParamsForm.ColorChange, 'ColorChange');
    RegisterMethod(@TJvHLEditorParamsForm.cbColorSettingsChange, 'cbColorSettingsChange');
    RegisterMethod(@TJvHLEditorParamsForm.DefClick, 'DefClick');
    RegisterMethod(@TJvHLEditorParamsForm.CellMouseDown, 'CellMouseDown');
    RegisterConstructor(@TJvHLEditorParamsForm.Create, 'Create');
    RegisterMethod(@TJvHLEditorParamsForm.ParamsToControls, 'ParamsToControls');
    RegisterMethod(@TJvHLEditorParamsForm.ControlsToParams, 'ControlsToParams');
    RegisterPropertyHelper(@TJvHLEditorParamsFormColorSamples_R,@TJvHLEditorParamsFormColorSamples_W,'ColorSamples');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_JvHLEditorPropertyForm(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TJvHLEdPropDlg) do
  RIRegister_TJvHLEditorParamsForm(CL);
  RIRegister_TJvHLEdPropDlg(CL);
end;

 
 
{ TPSImport_JvHLEditorPropertyForm }
(*----------------------------------------------------------------------------*)
procedure TPSImport_JvHLEditorPropertyForm.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_JvHLEditorPropertyForm(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_JvHLEditorPropertyForm.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_JvHLEditorPropertyForm(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
