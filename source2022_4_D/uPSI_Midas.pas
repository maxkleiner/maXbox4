unit uPSI_Midas;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 

 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_Midas = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_IAppServer(CL: TPSPascalCompiler);
procedure SIRegister_Midas(CL: TPSPascalCompiler);

{ run-time registration functions }

procedure Register;

implementation


uses
   ActiveX
  ,Midas
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_Midas]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_IAppServer(CL: TPSPascalCompiler);
begin
  //with RegInterfaceS(CL,'IDispatch', 'IAppServer') do
  with CL.AddInterface(CL.FindInterface('IDispatch'),IAppServer, 'IAppServer') do
  begin
    RegisterMethod('Function AS_ApplyUpdates( const ProviderName : WideString; Delta : OleVariant; MaxErrors : Integer; out ErrorCount : Integer; var OwnerData : OleVariant) : OleVariant', CdStdCall);
    RegisterMethod('Function AS_GetRecords( const ProviderName : WideString; Count : Integer; out RecsOut : Integer; Options : Integer; const CommandText : WideString; var Params : OleVariant; var OwnerData : OleVariant)' +
      ' : OleVariant', CdStdCall);
    RegisterMethod('Function AS_DataRequest( const ProviderName : WideString; Data : OleVariant) : OleVariant', CdStdCall);
    RegisterMethod('Function AS_GetProviderNames : OleVariant', CdStdCall);
    RegisterMethod('Function AS_GetParams( const ProviderName : WideString; var OwnerData : OleVariant) : OleVariant', CdStdCall);
    RegisterMethod('Function AS_RowRequest( const ProviderName : WideString; Row : OleVariant; RequestType : Integer; var OwnerData : OleVariant) : OleVariant', CdStdCall);
    RegisterMethod('Procedure AS_Execute( const ProviderName : WideString; const CommandText : WideString; var Params : OleVariant; var OwnerData : OleVariant)', CdStdCall);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_Midas(CL: TPSPascalCompiler);
begin
 CL.AddConstantN('LIBID_Midas','string').SetString( '{83F57D68-CA9A-11D2-9088-00C04FA35CFA}');
 CL.AddConstantN('IID_IAppServer','string').SetString( '{1AEFCC20-7A24-11D2-98B0-C69BEB4B5B6D}');
  SIRegister_IAppServer(CL);
end;

(* === run-time registration functions === *)
 
 
{ TPSImport_Midas }
(*----------------------------------------------------------------------------*)
procedure TPSImport_Midas.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_Midas(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_Midas.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
end;
(*----------------------------------------------------------------------------*)
 
 
end.
