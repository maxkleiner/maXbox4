unit uPSI_u_c_find_memo;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 

 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_u_c_find_memo = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_c_find_memo(CL: TPSPascalCompiler);
procedure SIRegister_u_c_find_memo(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_c_find_memo(CL: TPSRuntimeClassImporter);
procedure RIRegister_u_c_find_memo(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   Graphics
  ,Controls
  ,StdCtrls
  ,ComCtrls
  ,ExtCtrls
  ,u_c_basic_object
  ,u_c_find_memo
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_u_c_find_memo]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_c_find_memo(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'c_basic_object', 'c_find_memo') do
  with CL.AddClassN(CL.FindClass('c_basic_object'),'c_find_memo') do
  begin
    RegisterProperty('m_c_parent_component_ref', 'tWinControl', iptrw);
    RegisterProperty('m_save_path', 'String', iptrw);
    RegisterProperty('m_do_hilite_result', 'Boolean', iptrw);
    RegisterProperty('m_c_panel', 'tPanel', iptrw);
    RegisterProperty('m_c_text_length_label', 'tLabel', iptrw);
    RegisterProperty('m_c_text_line_count_label', 'tLabel', iptrw);
    RegisterProperty('m_c_find_edit', 'tEdit', iptrw);
    RegisterProperty('m_c_find_button', 'tButton', iptrw);
    RegisterProperty('m_c_next_button', 'tButton', iptrw);
    RegisterProperty('m_c_sort_button', 'tButton', iptrw);
    RegisterProperty('m_c_save_edit', 'tEdit', iptrw);
    RegisterProperty('m_c_memo', 'tMemo', iptrw);
    RegisterProperty('m_find_string', 'String', iptrw);
    RegisterProperty('m_find_length', 'Integer', iptrw);
    RegisterProperty('m_text', 'String', iptrw);
    RegisterProperty('m_text_index', 'Integer', iptrw);
    RegisterProperty('m_text_length', 'Integer', iptrw);
    RegisterProperty('m_did_hit_control', 'Boolean', iptrw);
    RegisterMethod('Constructor create_find_memo( p_name : String; p_c_parent_component_ref : tWinControl; p_save_path : String)');
    RegisterMethod('Procedure set_panel_color( p_color : Integer)');
    RegisterMethod('Function f_memo_line_of_index( p_text_index : Integer) : Integer');
    RegisterMethod('Procedure set_memo_top_line_index( p_top_line_index : Integer)');
    RegisterMethod('Procedure find_next_occurence');
    RegisterMethod('Procedure handle_find_edit_keypress( p_c_sender : TObject; var pv_key : Char)');
    RegisterMethod('Procedure handle_memo_and_find_edit_keydown( p_c_sender : TObject; var pv_scan_code : Word; p_shift_state : TShiftState)');
    RegisterMethod('Procedure handle_next_click( p_c_sender : tObject)');
    RegisterMethod('Procedure handle_sort_click( p_c_sender : tObject)');
    RegisterMethod('Procedure handle_memo_change( p_c_sender : tObject)');
    RegisterMethod('Procedure handle_save_edit_keypress( p_c_sender : TObject; var pv_key : Char)');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_u_c_find_memo(CL: TPSPascalCompiler);
begin
  SIRegister_c_find_memo(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure c_find_memom_did_hit_control_W(Self: c_find_memo; const T: Boolean);
Begin Self.m_did_hit_control := T; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_did_hit_control_R(Self: c_find_memo; var T: Boolean);
Begin T := Self.m_did_hit_control; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_text_length_W(Self: c_find_memo; const T: Integer);
Begin Self.m_text_length := T; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_text_length_R(Self: c_find_memo; var T: Integer);
Begin T := Self.m_text_length; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_text_index_W(Self: c_find_memo; const T: Integer);
Begin Self.m_text_index := T; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_text_index_R(Self: c_find_memo; var T: Integer);
Begin T := Self.m_text_index; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_text_W(Self: c_find_memo; const T: String);
Begin Self.m_text := T; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_text_R(Self: c_find_memo; var T: String);
Begin T := Self.m_text; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_find_length_W(Self: c_find_memo; const T: Integer);
Begin Self.m_find_length := T; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_find_length_R(Self: c_find_memo; var T: Integer);
Begin T := Self.m_find_length; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_find_string_W(Self: c_find_memo; const T: String);
Begin Self.m_find_string := T; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_find_string_R(Self: c_find_memo; var T: String);
Begin T := Self.m_find_string; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_c_memo_W(Self: c_find_memo; const T: tMemo);
Begin Self.m_c_memo := T; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_c_memo_R(Self: c_find_memo; var T: tMemo);
Begin T := Self.m_c_memo; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_c_save_edit_W(Self: c_find_memo; const T: tEdit);
Begin Self.m_c_save_edit := T; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_c_save_edit_R(Self: c_find_memo; var T: tEdit);
Begin T := Self.m_c_save_edit; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_c_sort_button_W(Self: c_find_memo; const T: tButton);
Begin Self.m_c_sort_button := T; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_c_sort_button_R(Self: c_find_memo; var T: tButton);
Begin T := Self.m_c_sort_button; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_c_next_button_W(Self: c_find_memo; const T: tButton);
Begin Self.m_c_next_button := T; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_c_next_button_R(Self: c_find_memo; var T: tButton);
Begin T := Self.m_c_next_button; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_c_find_button_W(Self: c_find_memo; const T: tButton);
Begin Self.m_c_find_button := T; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_c_find_button_R(Self: c_find_memo; var T: tButton);
Begin T := Self.m_c_find_button; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_c_find_edit_W(Self: c_find_memo; const T: tEdit);
Begin Self.m_c_find_edit := T; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_c_find_edit_R(Self: c_find_memo; var T: tEdit);
Begin T := Self.m_c_find_edit; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_c_text_line_count_label_W(Self: c_find_memo; const T: tLabel);
Begin Self.m_c_text_line_count_label := T; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_c_text_line_count_label_R(Self: c_find_memo; var T: tLabel);
Begin T := Self.m_c_text_line_count_label; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_c_text_length_label_W(Self: c_find_memo; const T: tLabel);
Begin Self.m_c_text_length_label := T; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_c_text_length_label_R(Self: c_find_memo; var T: tLabel);
Begin T := Self.m_c_text_length_label; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_c_panel_W(Self: c_find_memo; const T: tPanel);
Begin Self.m_c_panel := T; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_c_panel_R(Self: c_find_memo; var T: tPanel);
Begin T := Self.m_c_panel; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_do_hilite_result_W(Self: c_find_memo; const T: Boolean);
Begin Self.m_do_hilite_result := T; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_do_hilite_result_R(Self: c_find_memo; var T: Boolean);
Begin T := Self.m_do_hilite_result; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_save_path_W(Self: c_find_memo; const T: String);
Begin Self.m_save_path := T; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_save_path_R(Self: c_find_memo; var T: String);
Begin T := Self.m_save_path; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_c_parent_component_ref_W(Self: c_find_memo; const T: tWinControl);
Begin Self.m_c_parent_component_ref := T; end;

(*----------------------------------------------------------------------------*)
procedure c_find_memom_c_parent_component_ref_R(Self: c_find_memo; var T: tWinControl);
Begin T := Self.m_c_parent_component_ref; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_c_find_memo(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(c_find_memo) do
  begin
    RegisterPropertyHelper(@c_find_memom_c_parent_component_ref_R,@c_find_memom_c_parent_component_ref_W,'m_c_parent_component_ref');
    RegisterPropertyHelper(@c_find_memom_save_path_R,@c_find_memom_save_path_W,'m_save_path');
    RegisterPropertyHelper(@c_find_memom_do_hilite_result_R,@c_find_memom_do_hilite_result_W,'m_do_hilite_result');
    RegisterPropertyHelper(@c_find_memom_c_panel_R,@c_find_memom_c_panel_W,'m_c_panel');
    RegisterPropertyHelper(@c_find_memom_c_text_length_label_R,@c_find_memom_c_text_length_label_W,'m_c_text_length_label');
    RegisterPropertyHelper(@c_find_memom_c_text_line_count_label_R,@c_find_memom_c_text_line_count_label_W,'m_c_text_line_count_label');
    RegisterPropertyHelper(@c_find_memom_c_find_edit_R,@c_find_memom_c_find_edit_W,'m_c_find_edit');
    RegisterPropertyHelper(@c_find_memom_c_find_button_R,@c_find_memom_c_find_button_W,'m_c_find_button');
    RegisterPropertyHelper(@c_find_memom_c_next_button_R,@c_find_memom_c_next_button_W,'m_c_next_button');
    RegisterPropertyHelper(@c_find_memom_c_sort_button_R,@c_find_memom_c_sort_button_W,'m_c_sort_button');
    RegisterPropertyHelper(@c_find_memom_c_save_edit_R,@c_find_memom_c_save_edit_W,'m_c_save_edit');
    RegisterPropertyHelper(@c_find_memom_c_memo_R,@c_find_memom_c_memo_W,'m_c_memo');
    RegisterPropertyHelper(@c_find_memom_find_string_R,@c_find_memom_find_string_W,'m_find_string');
    RegisterPropertyHelper(@c_find_memom_find_length_R,@c_find_memom_find_length_W,'m_find_length');
    RegisterPropertyHelper(@c_find_memom_text_R,@c_find_memom_text_W,'m_text');
    RegisterPropertyHelper(@c_find_memom_text_index_R,@c_find_memom_text_index_W,'m_text_index');
    RegisterPropertyHelper(@c_find_memom_text_length_R,@c_find_memom_text_length_W,'m_text_length');
    RegisterPropertyHelper(@c_find_memom_did_hit_control_R,@c_find_memom_did_hit_control_W,'m_did_hit_control');
    RegisterConstructor(@c_find_memo.create_find_memo, 'create_find_memo');
    RegisterMethod(@c_find_memo.set_panel_color, 'set_panel_color');
    RegisterMethod(@c_find_memo.f_memo_line_of_index, 'f_memo_line_of_index');
    RegisterMethod(@c_find_memo.set_memo_top_line_index, 'set_memo_top_line_index');
    RegisterMethod(@c_find_memo.find_next_occurence, 'find_next_occurence');
    RegisterMethod(@c_find_memo.handle_find_edit_keypress, 'handle_find_edit_keypress');
    RegisterMethod(@c_find_memo.handle_memo_and_find_edit_keydown, 'handle_memo_and_find_edit_keydown');
    RegisterMethod(@c_find_memo.handle_next_click, 'handle_next_click');
    RegisterMethod(@c_find_memo.handle_sort_click, 'handle_sort_click');
    RegisterMethod(@c_find_memo.handle_memo_change, 'handle_memo_change');
    RegisterMethod(@c_find_memo.handle_save_edit_keypress, 'handle_save_edit_keypress');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_u_c_find_memo(CL: TPSRuntimeClassImporter);
begin
  RIRegister_c_find_memo(CL);
end;

 
 
{ TPSImport_u_c_find_memo }
(*----------------------------------------------------------------------------*)
procedure TPSImport_u_c_find_memo.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_u_c_find_memo(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_u_c_find_memo.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_u_c_find_memo(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
