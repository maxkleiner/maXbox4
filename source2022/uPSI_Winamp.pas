unit uPSI_Winamp;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_Winamp = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_Winamp(CL: TPSPascalCompiler);

{ run-time registration functions }

procedure Register;

implementation


uses
   Messages
  ,Winamp
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_Winamp]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_Winamp(CL: TPSPascalCompiler);
begin
 CL.AddConstantN('WM_WA_IPC','').SetString( WM_USER);
 CL.AddConstantN('IPC_GETVERSION','LongInt').SetInt( 0);
 CL.AddConstantN('IPC_DELETE','LongInt').SetInt( 101);
 CL.AddConstantN('IPC_STARTPLAY','LongInt').SetInt( 102);
 CL.AddConstantN('IPC_ISPLAYING','LongInt').SetInt( 104);
 CL.AddConstantN('IPC_GETOUTPUTTIME','LongInt').SetInt( 105);
 CL.AddConstantN('IPC_JUMPTOTIME','LongInt').SetInt( 106);
 CL.AddConstantN('IPC_WRITEPLAYLIST','LongInt').SetInt( 120);
 CL.AddConstantN('IPC_SETPLAYLISTPOS','LongInt').SetInt( 121);
 CL.AddConstantN('IPC_SETVOLUME','LongInt').SetInt( 122);
 CL.AddConstantN('IPC_SETPANNING','LongInt').SetInt( 123);
 CL.AddConstantN('IPC_GETLISTLENGTH','LongInt').SetInt( 124);
 CL.AddConstantN('IPC_SETSKIN','LongInt').SetInt( 200);
 CL.AddConstantN('IPC_GETSKIN','LongInt').SetInt( 201);
 CL.AddConstantN('IPC_EXECPLUG','LongInt').SetInt( 202);
 CL.AddConstantN('IPC_GETPLAYLISTFILE','LongInt').SetInt( 211);
 CL.AddConstantN('IPC_GETPLAYLISTTITLE','LongInt').SetInt( 212);
 CL.AddConstantN('IPC_GETLISTPOS','LongInt').SetInt( 125);
 CL.AddConstantN('IPC_GETINFO','LongInt').SetInt( 126);
 CL.AddConstantN('IPC_GETEQDATA','LongInt').SetInt( 127);
 CL.AddConstantN('IPC_SETEQDATA','LongInt').SetInt( 128);
 CL.AddConstantN('IPC_ADDBOOKMARK','LongInt').SetInt( 129);
 CL.AddConstantN('IPC_RESTARTWINAMP','LongInt').SetInt( 135);
 CL.AddConstantN('IPC_MBOPEN','LongInt').SetInt( 241);
 CL.AddConstantN('IPC_INETAVAILABLE','LongInt').SetInt( 242);
 CL.AddConstantN('IPC_UPDTITLE','LongInt').SetInt( 243);
 CL.AddConstantN('IPC_CHANGECURRENTFILE','LongInt').SetInt( 245);
 CL.AddConstantN('IPC_GETMBURL','LongInt').SetInt( 246);
 CL.AddConstantN('IPC_REFRESHPLCACHE','LongInt').SetInt( 247);
 CL.AddConstantN('IPC_MBBLOCK','LongInt').SetInt( 248);
 CL.AddConstantN('IPC_MBOPENREAL','LongInt').SetInt( 249);
 CL.AddConstantN('IPC_GET_SHUFFLE','LongInt').SetInt( 250);
 CL.AddConstantN('IPC_GET_REPEAT','LongInt').SetInt( 251);
 CL.AddConstantN('IPC_SET_SHUFFLE','LongInt').SetInt( 252);
 CL.AddConstantN('IPC_SET_REPEAT','LongInt').SetInt( 253);
 CL.AddConstantN('IPC_PLAYFILE','LongInt').SetInt( 100);
 CL.AddConstantN('IPC_CHDIR','LongInt').SetInt( 103);
 CL.AddConstantN('WINAMP_OPTIONS_EQ','LongInt').SetInt( 40036);
 CL.AddConstantN('WINAMP_OPTIONS_PLEDIT','LongInt').SetInt( 40040);
 CL.AddConstantN('WINAMP_VOLUMEUP','LongInt').SetInt( 40058);
 CL.AddConstantN('WINAMP_VOLUMEDOWN','LongInt').SetInt( 40059);
 CL.AddConstantN('WINAMP_FFWD5S','LongInt').SetInt( 40060);
 CL.AddConstantN('WINAMP_REW5S','LongInt').SetInt( 40061);
 CL.AddConstantN('WINAMP_BUTTON1','LongInt').SetInt( 40044);
 CL.AddConstantN('WINAMP_BUTTON2','LongInt').SetInt( 40045);
 CL.AddConstantN('WINAMP_BUTTON3','LongInt').SetInt( 40046);
 CL.AddConstantN('WINAMP_BUTTON4','LongInt').SetInt( 40047);
 CL.AddConstantN('WINAMP_BUTTON5','LongInt').SetInt( 40048);
 CL.AddConstantN('WINAMP_BUTTON1_SHIFT','LongInt').SetInt( 40144);
 CL.AddConstantN('WINAMP_BUTTON2_SHIFT','LongInt').SetInt( 40145);
 CL.AddConstantN('WINAMP_BUTTON3_SHIFT','LongInt').SetInt( 40146);
 CL.AddConstantN('WINAMP_BUTTON4_SHIFT','LongInt').SetInt( 40147);
 CL.AddConstantN('WINAMP_BUTTON5_SHIFT','LongInt').SetInt( 40148);
 CL.AddConstantN('WINAMP_BUTTON1_CTRL','LongInt').SetInt( 40154);
 CL.AddConstantN('WINAMP_BUTTON2_CTRL','LongInt').SetInt( 40155);
 CL.AddConstantN('WINAMP_BUTTON3_CTRL','LongInt').SetInt( 40156);
 CL.AddConstantN('WINAMP_BUTTON4_CTRL','LongInt').SetInt( 40157);
 CL.AddConstantN('WINAMP_BUTTON5_CTRL','LongInt').SetInt( 40158);
 CL.AddConstantN('WINAMP_FILE_PLAY','LongInt').SetInt( 40029);
 CL.AddConstantN('WINAMP_OPTIONS_PREFS','LongInt').SetInt( 40012);
 CL.AddConstantN('WINAMP_OPTIONS_AOT','LongInt').SetInt( 40019);
 CL.AddConstantN('WINAMP_HELP_ABOUT','LongInt').SetInt( 40041);
end;

(* === run-time registration functions === *)
 
 
{ TPSImport_Winamp }
(*----------------------------------------------------------------------------*)
procedure TPSImport_Winamp.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_Winamp(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_Winamp.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_Winamp(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
