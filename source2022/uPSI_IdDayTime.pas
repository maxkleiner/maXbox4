unit uPSI_IdDayTime;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_IdDayTime = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TIdDayTime(CL: TPSPascalCompiler);
procedure SIRegister_IdDayTime(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TIdDayTime(CL: TPSRuntimeClassImporter);
procedure RIRegister_IdDayTime(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   IdAssignedNumbers
  ,IdTCPClient
  ,IdDayTime
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_IdDayTime]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TIdDayTime(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TIdTCPClient', 'TIdDayTime') do
  with CL.AddClassN(CL.FindClass('TIdTCPClient'),'TIdDayTime') do
  begin
    RegisterMethod('Constructor Create( AOwner : TComponent)');
    RegisterProperty('Host', 'String', iptrw);
    RegisterProperty('UserName', 'String', iptrw);
    RegisterProperty('Password', 'String', iptrw);
    RegisterProperty('Port', 'Integer', iptrw);
    RegisterProperty('UserId', 'String', iptrw);
    //RegisterMethod('Procedure Connect');
    RegisterMethod('Procedure Disconnect');
    RegisterMethod('Procedure Free;');
    RegisterProperty('DayTimeStr', 'String', iptr);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_IdDayTime(CL: TPSPascalCompiler);
begin
  SIRegister_TIdDayTime(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure TIdDayTimeDayTimeStr_R(Self: TIdDayTime; var T: String);
begin T := Self.DayTimeStr; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TIdDayTime(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TIdDayTime) do
  begin
    RegisterConstructor(@TIdDayTime.Create, 'Create');
    RegisterMethod(@TIdDayTime.Destroy, 'Free');
    RegisterPropertyHelper(@TIdDayTimeDayTimeStr_R,nil,'DayTimeStr');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_IdDayTime(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TIdDayTime(CL);
end;

 
 
{ TPSImport_IdDayTime }
(*----------------------------------------------------------------------------*)
procedure TPSImport_IdDayTime.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_IdDayTime(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_IdDayTime.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_IdDayTime(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
