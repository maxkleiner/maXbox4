unit uPSI_IdDsnRegister;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_IdDsnRegister = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TIdPropEdBinding(CL: TPSPascalCompiler);
procedure SIRegister_IdDsnRegister(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_IdDsnRegister_Routines(S: TPSExec);
procedure RIRegister_TIdPropEdBinding(CL: TPSRuntimeClassImporter);
procedure RIRegister_IdDsnRegister(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   IdDsnRegister
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_IdDsnRegister]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TIdPropEdBinding(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TClassProperty', 'TIdPropEdBinding') do
  with CL.AddClassN(CL.FindClass('TClassProperty'),'TIdPropEdBinding') do
  begin
    RegisterMethod('Procedure Edit');
    RegisterMethod('Function GetAttributes : TPropertyAttributes');
    RegisterMethod('Function GetValue : string');
    RegisterMethod('Procedure SetValue( const Value : string)');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_IdDsnRegister(CL: TPSPascalCompiler);
begin
  SIRegister_TIdPropEdBinding(CL);
 CL.AddDelphiFunction('Procedure Register');
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_IdDsnRegister_Routines(S: TPSExec);
begin
 S.RegisterDelphiFunction(@Register, 'Register', cdRegister);
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TIdPropEdBinding(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TIdPropEdBinding) do
  begin
    RegisterMethod(@TIdPropEdBinding.Edit, 'Edit');
    RegisterMethod(@TIdPropEdBinding.GetAttributes, 'GetAttributes');
    RegisterMethod(@TIdPropEdBinding.GetValue, 'GetValue');
    RegisterMethod(@TIdPropEdBinding.SetValue, 'SetValue');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_IdDsnRegister(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TIdPropEdBinding(CL);
end;

 
 
{ TPSImport_IdDsnRegister }
(*----------------------------------------------------------------------------*)
procedure TPSImport_IdDsnRegister.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_IdDsnRegister(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_IdDsnRegister.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_IdDsnRegister(ri);
  RIRegister_IdDsnRegister_Routines(CompExec.Exec); // comment it if no routines
end;
(*----------------------------------------------------------------------------*)
 
 
end.
