unit uPSI_JvWin32;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_JvWin32 = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_JvWin32(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_JvWin32_Routines(S: TPSExec);

procedure Register;

implementation


uses
  // JclUnitVersioning
  CommCtrl
  ,Windows
  ,JvWin32
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_JvWin32]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_JvWin32(CL: TPSPascalCompiler);
begin
 CL.AddConstantN('SC_DRAGMOVE','LongWord').SetUInt( $F012);
 CL.AddConstantN('SPI_GETFLATMENU','LongWord').SetUInt( $1022);
 CL.AddConstantN('SM_XVIRTUALSCREEN','LongInt').SetInt( 76);
 CL.AddConstantN('SM_YVIRTUALSCREEN','LongInt').SetInt( 77);
 CL.AddConstantN('SM_CXVIRTUALSCREEN','LongInt').SetInt( 78);
 CL.AddConstantN('SM_CYVIRTUALSCREEN','LongInt').SetInt( 79);
 CL.AddConstantN('CS_DROPSHADOW','LongWord').SetUInt( $00020000);
 CL.AddConstantN('TVM_SETLINECOLOR','LongInt').SetInt( TV_FIRST + 40);
 CL.AddConstantN('TVM_GETLINECOLOR','LongInt').SetInt( TV_FIRST + 41);
 CL.AddConstantN('FILE_ATTRIBUTE_SPARSE_FILE','LongWord').SetUInt( $200);
 CL.AddConstantN('FILE_ATTRIBUTE_REPARSE_POINT','LongWord').SetUInt( $400);
 CL.AddConstantN('FILE_ATTRIBUTE_NOT_CONTENT_INDEXED','LongWord').SetUInt( $2000);
 CL.AddConstantN('FILE_ATTRIBUTE_ENCRYPTED','LongWord').SetUInt( $4000);
 CL.AddConstantN('FOF_NOCOPYSECURITYATTRIBS','LongWord').SetUInt( $800);
 CL.AddConstantN('FOF_NORECURSION','LongWord').SetUInt( $1000);
 CL.AddConstantN('FOF_NO_CONNECTED_ELEMENTS','LongWord').SetUInt( $2000);
 CL.AddConstantN('FOF_NORECURSEREPARSE','LongWord').SetUInt( $8000);
 CL.AddConstantN('FOF_WANTNUKEWARNING','LongWord').SetUInt( $4000);
 CL.AddConstantN('HSHELL_WINDOWCREATED','LongInt').SetInt( 1);
 CL.AddConstantN('HSHELL_WINDOWDESTROYED','LongInt').SetInt( 2);
 CL.AddConstantN('HSHELL_ACTIVATESHELLWINDOW','LongInt').SetInt( 3);
 CL.AddConstantN('HSHELL_WINDOWACTIVATED','LongInt').SetInt( 4);
 CL.AddConstantN('HSHELL_GETMINRECT','LongInt').SetInt( 5);
 CL.AddConstantN('HSHELL_REDRAW','LongInt').SetInt( 6);
 CL.AddConstantN('HSHELL_TASKMAN','LongInt').SetInt( 7);
 CL.AddConstantN('HSHELL_LANGUAGE','LongInt').SetInt( 8);
 CL.AddConstantN('HSHELL_SYSMENU','LongInt').SetInt( 9);
 CL.AddConstantN('HSHELL_ENDTASK','LongInt').SetInt( 10);
 CL.AddConstantN('HSHELL_ACCESSIBILITYSTATE','LongInt').SetInt( 11);
 CL.AddConstantN('HSHELL_APPCOMMAND','LongInt').SetInt( 12);
 CL.AddConstantN('HSHELL_WINDOWREPLACED','LongInt').SetInt( 13);
 CL.AddConstantN('HSHELL_WINDOWREPLACING','LongInt').SetInt( 14);
 CL.AddConstantN('HSHELL_HIGHBIT','LongWord').SetUInt( $8000);
 CL.AddConstantN('ACCESS_STICKYKEYS','LongWord').SetUInt( $0001);
 CL.AddConstantN('ACCESS_FILTERKEYS','LongWord').SetUInt( $0002);
 CL.AddConstantN('ACCESS_MOUSEKEYS','LongWord').SetUInt( $0003);
 CL.AddConstantN('APPCOMMAND_BROWSER_BACKWARD','LongInt').SetInt( 1);
 CL.AddConstantN('APPCOMMAND_BROWSER_FORWARD','LongInt').SetInt( 2);
 CL.AddConstantN('APPCOMMAND_BROWSER_REFRESH','LongInt').SetInt( 3);
 CL.AddConstantN('APPCOMMAND_BROWSER_STOP','LongInt').SetInt( 4);
 CL.AddConstantN('APPCOMMAND_BROWSER_SEARCH','LongInt').SetInt( 5);
 CL.AddConstantN('APPCOMMAND_BROWSER_FAVORITES','LongInt').SetInt( 6);
 CL.AddConstantN('APPCOMMAND_BROWSER_HOME','LongInt').SetInt( 7);
 CL.AddConstantN('APPCOMMAND_VOLUME_MUTE','LongInt').SetInt( 8);
 CL.AddConstantN('APPCOMMAND_VOLUME_DOWN','LongInt').SetInt( 9);
 CL.AddConstantN('APPCOMMAND_VOLUME_UP','LongInt').SetInt( 10);
 CL.AddConstantN('APPCOMMAND_MEDIA_NEXTTRACK','LongInt').SetInt( 11);
 CL.AddConstantN('APPCOMMAND_MEDIA_PREVIOUSTRACK','LongInt').SetInt( 12);
 CL.AddConstantN('APPCOMMAND_MEDIA_STOP','LongInt').SetInt( 13);
 CL.AddConstantN('APPCOMMAND_MEDIA_PLAY_PAUSE','LongInt').SetInt( 14);
 CL.AddConstantN('APPCOMMAND_LAUNCH_MAIL','LongInt').SetInt( 15);
 CL.AddConstantN('APPCOMMAND_LAUNCH_MEDIA_SELECT','LongInt').SetInt( 16);
 CL.AddConstantN('APPCOMMAND_LAUNCH_APP1','LongInt').SetInt( 17);
 CL.AddConstantN('APPCOMMAND_LAUNCH_APP2','LongInt').SetInt( 18);
 CL.AddConstantN('APPCOMMAND_BASS_DOWN','LongInt').SetInt( 19);
 CL.AddConstantN('APPCOMMAND_BASS_BOOST','LongInt').SetInt( 20);
 CL.AddConstantN('APPCOMMAND_BASS_UP','LongInt').SetInt( 21);
 CL.AddConstantN('APPCOMMAND_TREBLE_DOWN','LongInt').SetInt( 22);
 CL.AddConstantN('APPCOMMAND_TREBLE_UP','LongInt').SetInt( 23);
 CL.AddConstantN('APPCOMMAND_MICROPHONE_VOLUME_MUTE','LongInt').SetInt( 24);
 CL.AddConstantN('APPCOMMAND_MICROPHONE_VOLUME_DOWN','LongInt').SetInt( 25);
 CL.AddConstantN('APPCOMMAND_MICROPHONE_VOLUME_UP','LongInt').SetInt( 26);
 CL.AddConstantN('APPCOMMAND_HELP','LongInt').SetInt( 27);
 CL.AddConstantN('APPCOMMAND_FIND','LongInt').SetInt( 28);
 CL.AddConstantN('APPCOMMAND_NEW','LongInt').SetInt( 29);
 CL.AddConstantN('APPCOMMAND_OPEN','LongInt').SetInt( 30);
 CL.AddConstantN('APPCOMMAND_CLOSE','LongInt').SetInt( 31);
 CL.AddConstantN('APPCOMMAND_SAVE','LongInt').SetInt( 32);
 CL.AddConstantN('APPCOMMAND_PRINT','LongInt').SetInt( 33);
 CL.AddConstantN('APPCOMMAND_UNDO','LongInt').SetInt( 34);
 CL.AddConstantN('APPCOMMAND_REDO','LongInt').SetInt( 35);
 CL.AddConstantN('APPCOMMAND_COPY','LongInt').SetInt( 36);
 CL.AddConstantN('APPCOMMAND_CUT','LongInt').SetInt( 37);
 CL.AddConstantN('APPCOMMAND_PASTE','LongInt').SetInt( 38);
 CL.AddConstantN('APPCOMMAND_REPLY_TO_MAIL','LongInt').SetInt( 39);
 CL.AddConstantN('APPCOMMAND_FORWARD_MAIL','LongInt').SetInt( 40);
 CL.AddConstantN('APPCOMMAND_SEND_MAIL','LongInt').SetInt( 41);
 CL.AddConstantN('APPCOMMAND_SPELL_CHECK','LongInt').SetInt( 42);
 CL.AddConstantN('APPCOMMAND_DICTATE_OR_COMMAND_CONTROL_TOGGLE','LongInt').SetInt( 43);
 CL.AddConstantN('APPCOMMAND_MIC_ON_OFF_TOGGLE','LongInt').SetInt( 44);
 CL.AddConstantN('APPCOMMAND_CORRECTION_LIST','LongInt').SetInt( 45);
 CL.AddConstantN('APPCOMMAND_MEDIA_PLAY','LongInt').SetInt( 46);
 CL.AddConstantN('APPCOMMAND_MEDIA_PAUSE','LongInt').SetInt( 47);
 CL.AddConstantN('APPCOMMAND_MEDIA_RECORD','LongInt').SetInt( 48);
 CL.AddConstantN('APPCOMMAND_MEDIA_FAST_FORWARD','LongInt').SetInt( 49);
 CL.AddConstantN('APPCOMMAND_MEDIA_REWIND','LongInt').SetInt( 50);
 CL.AddConstantN('APPCOMMAND_MEDIA_CHANNEL_UP','LongInt').SetInt( 51);
 CL.AddConstantN('APPCOMMAND_MEDIA_CHANNEL_DOWN','LongInt').SetInt( 52);
 CL.AddConstantN('FAPPCOMMAND_MOUSE','LongWord').SetUInt( $8000);
 CL.AddConstantN('FAPPCOMMAND_KEY','LongInt').SetInt( 0);
 CL.AddConstantN('FAPPCOMMAND_OEM','LongWord').SetUInt( $1000);
 CL.AddConstantN('FAPPCOMMAND_MASK','LongWord').SetUInt( $F000);
 CL.AddDelphiFunction('Function GET_APPCOMMAND_LPARAM( lParam : Integer) : Word');
 CL.AddDelphiFunction('Function GET_DEVICE_LPARAM( lParam : Integer) : Word');
 CL.AddDelphiFunction('Function GET_MOUSEORKEY_LPARAM( lParam : Integer) : Integer');
 CL.AddDelphiFunction('Function GET_FLAGS_LPARAM( lParam : Integer) : Word');
 CL.AddDelphiFunction('Function GET_KEYSTATE_LPARAM( lParam : Integer) : Word');
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_JvWin32_Routines(S: TPSExec);
begin
 S.RegisterDelphiFunction(@GET_APPCOMMAND_LPARAM, 'GET_APPCOMMAND_LPARAM', cdRegister);
 S.RegisterDelphiFunction(@GET_DEVICE_LPARAM, 'GET_DEVICE_LPARAM', cdRegister);
 S.RegisterDelphiFunction(@GET_MOUSEORKEY_LPARAM, 'GET_MOUSEORKEY_LPARAM', cdRegister);
 S.RegisterDelphiFunction(@GET_FLAGS_LPARAM, 'GET_FLAGS_LPARAM', cdRegister);
 S.RegisterDelphiFunction(@GET_KEYSTATE_LPARAM, 'GET_KEYSTATE_LPARAM', cdRegister);
end;

 
 
{ TPSImport_JvWin32 }
(*----------------------------------------------------------------------------*)
procedure TPSImport_JvWin32.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_JvWin32(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_JvWin32.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  //RIRegister_JvWin32(ri);
  RIRegister_JvWin32_Routines(CompExec.Exec); // comment it if no routines
end;
(*----------------------------------------------------------------------------*)
 
 
end.
