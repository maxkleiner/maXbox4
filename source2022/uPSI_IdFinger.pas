unit uPSI_IdFinger;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_IdFinger = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TIdFinger(CL: TPSPascalCompiler);
procedure SIRegister_IdFinger(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TIdFinger(CL: TPSRuntimeClassImporter);
procedure RIRegister_IdFinger(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   IdAssignedNumbers
  ,IdTCPClient
  ,IdFinger
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_IdFinger]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TIdFinger(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TIdTCPClient', 'TIdFinger') do
  with CL.AddClassN(CL.FindClass('TIdTCPClient'),'TIdFinger') do
  begin
    RegisterMethod('Constructor Create( AOwner : TComponent)');
    RegisterMethod('Function Finger : String');
    RegisterProperty('Query', 'String', iptrw);
    RegisterProperty('CompleteQuery', 'String', iptrw);
    RegisterProperty('VerboseOutput', 'Boolean', iptrw);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_IdFinger(CL: TPSPascalCompiler);
begin
  SIRegister_TIdFinger(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure TIdFingerVerboseOutput_W(Self: TIdFinger; const T: Boolean);
begin Self.VerboseOutput := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdFingerVerboseOutput_R(Self: TIdFinger; var T: Boolean);
begin T := Self.VerboseOutput; end;

(*----------------------------------------------------------------------------*)
procedure TIdFingerCompleteQuery_W(Self: TIdFinger; const T: String);
begin Self.CompleteQuery := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdFingerCompleteQuery_R(Self: TIdFinger; var T: String);
begin T := Self.CompleteQuery; end;

(*----------------------------------------------------------------------------*)
procedure TIdFingerQuery_W(Self: TIdFinger; const T: String);
begin Self.Query := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdFingerQuery_R(Self: TIdFinger; var T: String);
begin T := Self.Query; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TIdFinger(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TIdFinger) do
  begin
    RegisterConstructor(@TIdFinger.Create, 'Create');
    RegisterMethod(@TIdFinger.Finger, 'Finger');
    RegisterPropertyHelper(@TIdFingerQuery_R,@TIdFingerQuery_W,'Query');
    RegisterPropertyHelper(@TIdFingerCompleteQuery_R,@TIdFingerCompleteQuery_W,'CompleteQuery');
    RegisterPropertyHelper(@TIdFingerVerboseOutput_R,@TIdFingerVerboseOutput_W,'VerboseOutput');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_IdFinger(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TIdFinger(CL);
end;

 
 
{ TPSImport_IdFinger }
(*----------------------------------------------------------------------------*)
procedure TPSImport_IdFinger.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_IdFinger(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_IdFinger.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_IdFinger(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
