unit uPSI_IdMailBox;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_IdMailBox = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TIdMailBox(CL: TPSPascalCompiler);
procedure SIRegister_IdMailBox(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TIdMailBox(CL: TPSRuntimeClassImporter);
procedure RIRegister_IdMailBox(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   IdBaseComponent
  ,IdException
  ,IdMessage
  ,IdMessageCollection
  ,IdMailBox
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_IdMailBox]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TIdMailBox(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TIdBaseComponent', 'TIdMailBox') do
  with CL.AddClassN(CL.FindClass('TIdBaseComponent'),'TIdMailBox') do
  begin
    RegisterProperty('DeletedMsgs', 'TLongIntArray', iptrw);
    RegisterProperty('SearchResult', 'TLongIntArray', iptrw);
    RegisterProperty('Attributes', 'TIdMailBoxAttributes', iptrw);
    RegisterProperty('ChangeableFlags', 'TIdMessageFlagsSet', iptrw);
    RegisterProperty('FirstUnseenMsg', 'LongInt', iptrw);
    RegisterProperty('Flags', 'TIdMessageFlagsSet', iptrw);
    RegisterProperty('Name', 'String', iptrw);
    RegisterProperty('MessageList', 'TIdMessageCollection', iptrw);
    RegisterProperty('RecentMsgs', 'LongInt', iptrw);
    RegisterProperty('State', 'TIdMailBoxState', iptrw);
    RegisterProperty('TotalMsgs', 'LongInt', iptrw);
    RegisterProperty('UIDNext', 'String', iptrw);
    RegisterProperty('UIDValidity', 'String', iptrw);
    RegisterProperty('UnseenMsgs', 'LongInt', iptrw);
    RegisterMethod('Procedure Clear');
    RegisterMethod('Constructor Create( AOwner : TComponent)');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_IdMailBox(CL: TPSPascalCompiler);
begin
  CL.AddTypeS('TIdMailBoxState', '( msReadWrite, msReadOnly )');
  CL.AddTypeS('TIdMailBoxAttributes', '( maNoinferiors, maNoselect, maMarked, m'
   +'aUnmarked )');
  CL.AddTypeS('TIdMailBoxAttributesSet', 'set of TIdMailBoxAttributes');
  CL.AddTypeS('TLongIntArray', 'array of LongInt');
  SIRegister_TIdMailBox(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure TIdMailBoxUnseenMsgs_W(Self: TIdMailBox; const T: LongInt);
begin Self.UnseenMsgs := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxUnseenMsgs_R(Self: TIdMailBox; var T: LongInt);
begin T := Self.UnseenMsgs; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxUIDValidity_W(Self: TIdMailBox; const T: String);
begin Self.UIDValidity := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxUIDValidity_R(Self: TIdMailBox; var T: String);
begin T := Self.UIDValidity; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxUIDNext_W(Self: TIdMailBox; const T: String);
begin Self.UIDNext := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxUIDNext_R(Self: TIdMailBox; var T: String);
begin T := Self.UIDNext; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxTotalMsgs_W(Self: TIdMailBox; const T: LongInt);
begin Self.TotalMsgs := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxTotalMsgs_R(Self: TIdMailBox; var T: LongInt);
begin T := Self.TotalMsgs; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxState_W(Self: TIdMailBox; const T: TIdMailBoxState);
begin Self.State := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxState_R(Self: TIdMailBox; var T: TIdMailBoxState);
begin T := Self.State; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxRecentMsgs_W(Self: TIdMailBox; const T: LongInt);
begin Self.RecentMsgs := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxRecentMsgs_R(Self: TIdMailBox; var T: LongInt);
begin T := Self.RecentMsgs; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxMessageList_W(Self: TIdMailBox; const T: TIdMessageCollection);
begin Self.MessageList := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxMessageList_R(Self: TIdMailBox; var T: TIdMessageCollection);
begin T := Self.MessageList; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxName_W(Self: TIdMailBox; const T: String);
begin Self.Name := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxName_R(Self: TIdMailBox; var T: String);
begin T := Self.Name; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxFlags_W(Self: TIdMailBox; const T: TIdMessageFlagsSet);
begin Self.Flags := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxFlags_R(Self: TIdMailBox; var T: TIdMessageFlagsSet);
begin T := Self.Flags; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxFirstUnseenMsg_W(Self: TIdMailBox; const T: LongInt);
begin Self.FirstUnseenMsg := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxFirstUnseenMsg_R(Self: TIdMailBox; var T: LongInt);
begin T := Self.FirstUnseenMsg; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxChangeableFlags_W(Self: TIdMailBox; const T: TIdMessageFlagsSet);
begin Self.ChangeableFlags := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxChangeableFlags_R(Self: TIdMailBox; var T: TIdMessageFlagsSet);
begin T := Self.ChangeableFlags; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxAttributes_W(Self: TIdMailBox; const T: TIdMailBoxAttributes);
begin Self.Attributes := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxAttributes_R(Self: TIdMailBox; var T: TIdMailBoxAttributes);
begin T := Self.Attributes; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxSearchResult_W(Self: TIdMailBox; const T: TLongIntArray);
Begin Self.SearchResult := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxSearchResult_R(Self: TIdMailBox; var T: TLongIntArray);
Begin T := Self.SearchResult; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxDeletedMsgs_W(Self: TIdMailBox; const T: TLongIntArray);
Begin Self.DeletedMsgs := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdMailBoxDeletedMsgs_R(Self: TIdMailBox; var T: TLongIntArray);
Begin T := Self.DeletedMsgs; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TIdMailBox(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TIdMailBox) do
  begin
    RegisterPropertyHelper(@TIdMailBoxDeletedMsgs_R,@TIdMailBoxDeletedMsgs_W,'DeletedMsgs');
    RegisterPropertyHelper(@TIdMailBoxSearchResult_R,@TIdMailBoxSearchResult_W,'SearchResult');
    RegisterPropertyHelper(@TIdMailBoxAttributes_R,@TIdMailBoxAttributes_W,'Attributes');
    RegisterPropertyHelper(@TIdMailBoxChangeableFlags_R,@TIdMailBoxChangeableFlags_W,'ChangeableFlags');
    RegisterPropertyHelper(@TIdMailBoxFirstUnseenMsg_R,@TIdMailBoxFirstUnseenMsg_W,'FirstUnseenMsg');
    RegisterPropertyHelper(@TIdMailBoxFlags_R,@TIdMailBoxFlags_W,'Flags');
    RegisterPropertyHelper(@TIdMailBoxName_R,@TIdMailBoxName_W,'Name');
    RegisterPropertyHelper(@TIdMailBoxMessageList_R,@TIdMailBoxMessageList_W,'MessageList');
    RegisterPropertyHelper(@TIdMailBoxRecentMsgs_R,@TIdMailBoxRecentMsgs_W,'RecentMsgs');
    RegisterPropertyHelper(@TIdMailBoxState_R,@TIdMailBoxState_W,'State');
    RegisterPropertyHelper(@TIdMailBoxTotalMsgs_R,@TIdMailBoxTotalMsgs_W,'TotalMsgs');
    RegisterPropertyHelper(@TIdMailBoxUIDNext_R,@TIdMailBoxUIDNext_W,'UIDNext');
    RegisterPropertyHelper(@TIdMailBoxUIDValidity_R,@TIdMailBoxUIDValidity_W,'UIDValidity');
    RegisterPropertyHelper(@TIdMailBoxUnseenMsgs_R,@TIdMailBoxUnseenMsgs_W,'UnseenMsgs');
    RegisterVirtualMethod(@TIdMailBox.Clear, 'Clear');
    RegisterConstructor(@TIdMailBox.Create, 'Create');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_IdMailBox(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TIdMailBox(CL);
end;

 
 
{ TPSImport_IdMailBox }
(*----------------------------------------------------------------------------*)
procedure TPSImport_IdMailBox.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_IdMailBox(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_IdMailBox.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_IdMailBox(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
