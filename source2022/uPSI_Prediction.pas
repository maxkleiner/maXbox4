unit uPSI_Prediction;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 

 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_Prediction = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TPredictionForm(CL: TPSPascalCompiler);
procedure SIRegister_Prediction(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TPredictionForm(CL: TPSRuntimeClassImporter);
procedure RIRegister_Prediction(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   FileUtil
  ,Forms
  ,Controls
  ,Graphics
  ,Dialogs
  ,ValEdit
  //,SimulationEngine
  ,Prediction
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_Prediction]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TPredictionForm(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TForm', 'TPredictionForm') do
  with CL.AddClassN(CL.FindClass('TForm'),'TPredictionForm') do
  begin
    RegisterProperty('PredictionList', 'TValueListEditor', iptrw);
    RegisterMethod('Procedure DisplayPrediction( theParameters : TPrediction)');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_Prediction(CL: TPSPascalCompiler);
begin
  SIRegister_TPredictionForm(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure TPredictionFormPredictionList_W(Self: TPredictionForm; const T: TValueListEditor);
Begin Self.PredictionList := T; end;

(*----------------------------------------------------------------------------*)
procedure TPredictionFormPredictionList_R(Self: TPredictionForm; var T: TValueListEditor);
Begin T := Self.PredictionList; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TPredictionForm(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TPredictionForm) do
  begin
    RegisterPropertyHelper(@TPredictionFormPredictionList_R,@TPredictionFormPredictionList_W,'PredictionList');
    RegisterMethod(@TPredictionForm.DisplayPrediction, 'DisplayPrediction');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_Prediction(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TPredictionForm(CL);
end;

 
 
{ TPSImport_Prediction }
(*----------------------------------------------------------------------------*)
procedure TPSImport_Prediction.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_Prediction(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_Prediction.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_Prediction(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
