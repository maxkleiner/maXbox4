unit uPSI_JvUnicodeCanvas;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_JvUnicodeCanvas = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TJvUnicodeCanvas(CL: TPSPascalCompiler);
procedure SIRegister_JvUnicodeCanvas(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TJvUnicodeCanvas(CL: TPSRuntimeClassImporter);
procedure RIRegister_JvUnicodeCanvas(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
  // JclUnitVersioning
  //,Windows
  Graphics
  ,JvJCLUtils
  ,JvUnicodeCanvas
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_JvUnicodeCanvas]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TJvUnicodeCanvas(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TCanvas', 'TJvUnicodeCanvas') do
  with CL.AddClassN(CL.FindClass('TCanvas'),'TJvUnicodeCanvas') do begin
    RegisterMethod('Function TextExtentW( const Text : WideString) : TSize');
    RegisterMethod('Function TextWidthW( const Text : WideString) : Integer');
    RegisterMethod('Function TextHeightW( const Text : WideString) : Integer');
    RegisterMethod('Procedure TextOutW( X, Y : Integer; const Text : WideString)');
    RegisterMethod('Procedure TextRectW( Rect : TRect; X, Y : Integer; const Text : WideString)');
    RegisterMethod('Function ExtTextOutW( X, Y : Integer; Options : TJvExtTextOutOptions; Rect : PRect; const Text : WideString; lpDx : Pointer) : Boolean');
    RegisterMethod('Function ExtTextOut( X, Y : Integer; Options : TJvExtTextOutOptions; Rect : PRect; const Text : string; lpDx : Pointer) : Boolean');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_JvUnicodeCanvas(CL: TPSPascalCompiler);
begin
  CL.AddTypeS('TJvExtTextOutOptionsKind', '( etoClipped, etoOpaque )');
  CL.AddTypeS('TJvExtTextOutOptions', 'set of TJvExtTextOutOptionsKind');
  SIRegister_TJvUnicodeCanvas(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_TJvUnicodeCanvas(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TJvUnicodeCanvas) do
  begin
    RegisterMethod(@TJvUnicodeCanvas.TextExtentW, 'TextExtentW');
    RegisterMethod(@TJvUnicodeCanvas.TextWidthW, 'TextWidthW');
    RegisterMethod(@TJvUnicodeCanvas.TextHeightW, 'TextHeightW');
    RegisterMethod(@TJvUnicodeCanvas.TextOutW, 'TextOutW');
    RegisterMethod(@TJvUnicodeCanvas.TextRectW, 'TextRectW');
    RegisterMethod(@TJvUnicodeCanvas.ExtTextOutW, 'ExtTextOutW');
    RegisterMethod(@TJvUnicodeCanvas.ExtTextOut, 'ExtTextOut');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_JvUnicodeCanvas(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TJvUnicodeCanvas(CL);
end;

 
 
{ TPSImport_JvUnicodeCanvas }
(*----------------------------------------------------------------------------*)
procedure TPSImport_JvUnicodeCanvas.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_JvUnicodeCanvas(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_JvUnicodeCanvas.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_JvUnicodeCanvas(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
