unit uPSI_sdpStopwatch;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_sdpStopwatch = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TStopwatch(CL: TPSPascalCompiler);
procedure SIRegister_sdpStopwatch(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TStopwatch(CL: TPSRuntimeClassImporter);
procedure RIRegister_sdpStopwatch(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   sdpStopwatch
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_sdpStopwatch]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TStopwatch(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TOBJECT', 'TStopwatch') do
  with CL.AddClassN(CL.FindClass('TOBJECT'),'TStopwatch') do
  begin
    RegisterMethod('Procedure Start');
    RegisterMethod('Procedure Stop');
    RegisterMethod('Function GetValueStr : String');
    RegisterMethod('Function GetValueMSec : Cardinal');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_sdpStopwatch(CL: TPSPascalCompiler);
begin
  SIRegister_TStopwatch(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_TStopwatch(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TStopwatch) do
  begin
    RegisterMethod(@TStopwatch.Start, 'Start');
    RegisterMethod(@TStopwatch.Stop, 'Stop');
    RegisterMethod(@TStopwatch.GetValueStr, 'GetValueStr');
    RegisterMethod(@TStopwatch.GetValueMSec, 'GetValueMSec');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_sdpStopwatch(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TStopwatch(CL);
end;

 
 
{ TPSImport_sdpStopwatch }
(*----------------------------------------------------------------------------*)
procedure TPSImport_sdpStopwatch.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_sdpStopwatch(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_sdpStopwatch.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_sdpStopwatch(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
