unit uPSI_JvSticker;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_JvSticker = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TJvSticker(CL: TPSPascalCompiler);
procedure SIRegister_TJvStickSizer(CL: TPSPascalCompiler);
procedure SIRegister_JvSticker(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TJvSticker(CL: TPSRuntimeClassImporter);
procedure RIRegister_TJvStickSizer(CL: TPSRuntimeClassImporter);
procedure RIRegister_JvSticker(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
  // JclUnitVersioning
  //,Windows
  //,Messages
  Graphics
  //,Controls
  //,StdCtrls
  //,Forms
  ,JvComponent
  ,JvSticker
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_JvSticker]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TJvSticker(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TJvGraphicControl', 'TJvSticker') do
  with CL.AddClassN(CL.FindClass('TJvGraphicControl'),'TJvSticker') do begin
    RegisterMethod('Constructor Create( AOwner : TComponent)');
    RegisterMethod('Procedure Paint');
    RegisterProperty('StickColor', 'TColor', iptrw);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_TJvStickSizer(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TJvCustomControl', 'TJvStickSizer') do
  with CL.AddClassN(CL.FindClass('TJvCustomControl'),'TJvStickSizer') do begin
    RegisterMethod('Constructor CreateEx( AOwner : TComponent; AControl : TControl)');
    RegisterMethod('Procedure CreateParams( var Params : TCreateParams)');
    RegisterMethod('Procedure CreateHandle');
    RegisterMethod('Procedure Paint');
    RegisterMethod('Procedure SizerControlExit( Sender : TObject)');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_JvSticker(CL: TPSPascalCompiler);
begin
  SIRegister_TJvStickSizer(CL);
  SIRegister_TJvSticker(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure TJvStickerStickColor_W(Self: TJvSticker; const T: TColor);
begin Self.StickColor := T; end;

(*----------------------------------------------------------------------------*)
procedure TJvStickerStickColor_R(Self: TJvSticker; var T: TColor);
begin T := Self.StickColor; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TJvSticker(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TJvSticker) do begin
    RegisterConstructor(@TJvSticker.Create, 'Create');
    RegisterMethod(@TJvSticker.Paint, 'Paint');
    RegisterPropertyHelper(@TJvStickerStickColor_R,@TJvStickerStickColor_W,'StickColor');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TJvStickSizer(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TJvStickSizer) do
  begin
    RegisterConstructor(@TJvStickSizer.CreateEx, 'CreateEx');
    RegisterMethod(@TJvStickSizer.CreateParams, 'CreateParams');
    RegisterMethod(@TJvStickSizer.CreateHandle, 'CreateHandle');
    RegisterMethod(@TJvStickSizer.Paint, 'Paint');
    RegisterMethod(@TJvStickSizer.SizerControlExit, 'SizerControlExit');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_JvSticker(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TJvStickSizer(CL);
  RIRegister_TJvSticker(CL);
end;

 
 
{ TPSImport_JvSticker }
(*----------------------------------------------------------------------------*)
procedure TPSImport_JvSticker.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_JvSticker(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_JvSticker.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_JvSticker(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
