unit uPSI_DBCommonTypes;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_DBCommonTypes = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_DBCommonTypes(CL: TPSPascalCompiler);

{ run-time registration functions }

procedure Register;

implementation


uses
   DBCommonTypes
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_DBCommonTypes]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_DBCommonTypes(CL: TPSPascalCompiler);
begin
  CL.AddTypeS('TLoginEvent', 'Procedure ( Sender : TObject; Username, Password '
   +': string)');
  CL.AddTypeS('FLDVchk', '( fldvNOCHECKS, fldvHASCHECKS, fldvUNKNOWN )');
  CL.AddTypeS('FLDRights', '( fldrREADWRITE, fldrREADONLY, fldrNONE, fldrUNKNOW'
   +'N )');
  //CL.AddTypeS('pCBType', '^CBType // will not work');
  CL.AddTypeS('CBType', '( cbGENERAL, cbRESERVED1, cbRESERVED2, cbINPUTREQ, cbR'
   +'ESERVED4, cbRESERVED5, cbBATCHRESULT, cbRESERVED7, cbRESTRUCTURE, cbRESERV'
   +'ED9, cbRESERVED10, cbRESERVED11, cbRESERVED12, cbRESERVED13, cbRESERVED14,'
   +' cbRESERVED15, cbRESERVED16, cbRESERVED17, cbTABLECHANGED, cbRESERVED19, c'
   +'bCANCELQRY, cbSERVERCALL, cbRESERVED22, cbGENPROGRESS, cbDBASELOGIN, cbDEL'
   +'AYEDUPD, cbFIELDRECALC, cbTRACE, cbDBLOGIN, cbDETACHNOTIFY, cbNBROFCBS )');
  CL.AddTypeS('CBRType', '( cbrUSEDEF, cbrCONTINUE, cbrABORT, cbrCHKINPUT, cbrY'
   +'ES, cbrNO, cbrPARTIALASSIST, cbrSKIP, cbrRETRY )');
  CL.AddTypeS('TKeyIndex', '( kiLookup, kiRangeStart, kiRangeEnd, kiCurRangeSta'
   +'rt, kiCurRangeEnd, kiSave )');
end;

(* === run-time registration functions === *)
 
 
{ TPSImport_DBCommonTypes }
(*----------------------------------------------------------------------------*)
procedure TPSImport_DBCommonTypes.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_DBCommonTypes(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_DBCommonTypes.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  //RIRegister_DBCommonTypes(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
