unit uPSI_IdEMailAddress;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_IdEMailAddress = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TIdEMailAddressList(CL: TPSPascalCompiler);
procedure SIRegister_TIdEMailAddressItem(CL: TPSPascalCompiler);
procedure SIRegister_IdEMailAddress(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TIdEMailAddressList(CL: TPSRuntimeClassImporter);
procedure RIRegister_TIdEMailAddressItem(CL: TPSRuntimeClassImporter);
procedure RIRegister_IdEMailAddress(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   IdException
  ,IdEMailAddress
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_IdEMailAddress]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TIdEMailAddressList(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TOwnedCollection', 'TIdEMailAddressList') do
  with CL.AddClassN(CL.FindClass('TOwnedCollection'),'TIdEMailAddressList') do
  begin
    RegisterMethod('Constructor Create( AOwner : TPersistent)');
    RegisterMethod('Procedure FillTStrings( AStrings : TStrings)');
    RegisterMethod('Function Add : TIdEMailAddressItem');
    RegisterProperty('Items', 'TIdEMailAddressItem Integer', iptrw);
    SetDefaultPropery('Items');
    RegisterProperty('EMailAddresses', 'String', iptrw);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_TIdEMailAddressItem(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TCollectionItem', 'TIdEMailAddressItem') do
  with CL.AddClassN(CL.FindClass('TCollectionItem'),'TIdEMailAddressItem') do
  begin
    RegisterProperty('Address', 'string', iptrw);
    RegisterProperty('Name', 'string', iptrw);
    RegisterProperty('Text', 'String', iptrw);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_IdEMailAddress(CL: TPSPascalCompiler);
begin
  CL.AddClassN(CL.FindClass('TOBJECT'),'EIdEmailParseError');
  SIRegister_TIdEMailAddressItem(CL);
  SIRegister_TIdEMailAddressList(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure TIdEMailAddressListEMailAddresses_W(Self: TIdEMailAddressList; const T: String);
begin Self.EMailAddresses := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdEMailAddressListEMailAddresses_R(Self: TIdEMailAddressList; var T: String);
begin T := Self.EMailAddresses; end;

(*----------------------------------------------------------------------------*)
procedure TIdEMailAddressListItems_W(Self: TIdEMailAddressList; const T: TIdEMailAddressItem; const t1: Integer);
begin Self.Items[t1] := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdEMailAddressListItems_R(Self: TIdEMailAddressList; var T: TIdEMailAddressItem; const t1: Integer);
begin T := Self.Items[t1]; end;

(*----------------------------------------------------------------------------*)
procedure TIdEMailAddressItemText_W(Self: TIdEMailAddressItem; const T: String);
begin Self.Text := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdEMailAddressItemText_R(Self: TIdEMailAddressItem; var T: String);
begin T := Self.Text; end;

(*----------------------------------------------------------------------------*)
procedure TIdEMailAddressItemName_W(Self: TIdEMailAddressItem; const T: string);
begin Self.Name := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdEMailAddressItemName_R(Self: TIdEMailAddressItem; var T: string);
begin T := Self.Name; end;

(*----------------------------------------------------------------------------*)
procedure TIdEMailAddressItemAddress_W(Self: TIdEMailAddressItem; const T: string);
begin Self.Address := T; end;

(*----------------------------------------------------------------------------*)
procedure TIdEMailAddressItemAddress_R(Self: TIdEMailAddressItem; var T: string);
begin T := Self.Address; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TIdEMailAddressList(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TIdEMailAddressList) do
  begin
    RegisterConstructor(@TIdEMailAddressList.Create, 'Create');
    RegisterMethod(@TIdEMailAddressList.FillTStrings, 'FillTStrings');
    RegisterMethod(@TIdEMailAddressList.Add, 'Add');
    RegisterPropertyHelper(@TIdEMailAddressListItems_R,@TIdEMailAddressListItems_W,'Items');
    RegisterPropertyHelper(@TIdEMailAddressListEMailAddresses_R,@TIdEMailAddressListEMailAddresses_W,'EMailAddresses');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TIdEMailAddressItem(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TIdEMailAddressItem) do
  begin
    RegisterPropertyHelper(@TIdEMailAddressItemAddress_R,@TIdEMailAddressItemAddress_W,'Address');
    RegisterPropertyHelper(@TIdEMailAddressItemName_R,@TIdEMailAddressItemName_W,'Name');
    RegisterPropertyHelper(@TIdEMailAddressItemText_R,@TIdEMailAddressItemText_W,'Text');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_IdEMailAddress(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(EIdEmailParseError) do
  RIRegister_TIdEMailAddressItem(CL);
  RIRegister_TIdEMailAddressList(CL);
end;

 
 
{ TPSImport_IdEMailAddress }
(*----------------------------------------------------------------------------*)
procedure TPSImport_IdEMailAddress.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_IdEMailAddress(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_IdEMailAddress.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_IdEMailAddress(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
