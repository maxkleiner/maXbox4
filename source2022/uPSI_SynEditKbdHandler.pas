unit uPSI_SynEditKbdHandler;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_SynEditKbdHandler = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TSynEditKbdHandler(CL: TPSPascalCompiler);
procedure SIRegister_TMethodList(CL: TPSPascalCompiler);
procedure SIRegister_TKeyboardControl(CL: TPSPascalCompiler);
procedure SIRegister_SynEditKbdHandler(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TSynEditKbdHandler(CL: TPSRuntimeClassImporter);
procedure RIRegister_TMethodList(CL: TPSRuntimeClassImporter);
procedure RIRegister_TKeyboardControl(CL: TPSRuntimeClassImporter);
procedure RIRegister_SynEditKbdHandler(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   Types
  {,QGraphics
  ,QControls
  ,QForms
  ,QSynEditTypes
  ,Windows
  ,Messages
  ,Graphics}
  //,Controls
  //,Forms
  ,SynEditTypes
  ,SynEditKbdHandler
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_SynEditKbdHandler]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TSynEditKbdHandler(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TObject', 'TSynEditKbdHandler') do
  with CL.AddClassN(CL.FindClass('TObject'),'TSynEditKbdHandler') do begin
    RegisterMethod('Constructor Create');
     RegisterMethod('Procedure Free');
     RegisterMethod('Procedure ExecuteKeyPress( Sender : TObject; var Key : Char)');
    RegisterMethod('Procedure ExecuteKeyDown( Sender : TObject; var Key : Word; Shift : TShiftState)');
    RegisterMethod('Procedure ExecuteKeyUp( Sender : TObject; var Key : Word; Shift : TShiftState)');
    RegisterMethod('Procedure ExecuteMouseDown( Sender : TObject; Button : TMouseButton; Shift : TShiftState; X, Y : Integer)');
    RegisterMethod('Procedure ExecuteMouseUp( Sender : TObject; Button : TMouseButton; Shift : TShiftState; X, Y : Integer)');
    RegisterMethod('Procedure ExecuteMouseCursor( Sender : TObject; const aLineCharPos : TBufferCoord; var aCursor : TCursor)');
    RegisterMethod('Procedure AddKeyDownHandler( aHandler : TKeyEvent)');
    RegisterMethod('Procedure RemoveKeyDownHandler( aHandler : TKeyEvent)');
    RegisterMethod('Procedure AddKeyUpHandler( aHandler : TKeyEvent)');
    RegisterMethod('Procedure RemoveKeyUpHandler( aHandler : TKeyEvent)');
    RegisterMethod('Procedure AddKeyPressHandler( aHandler : TKeyPressEvent)');
    RegisterMethod('Procedure RemoveKeyPressHandler( aHandler : TKeyPressEvent)');
    RegisterMethod('Procedure AddMouseDownHandler( aHandler : TMouseEvent)');
    RegisterMethod('Procedure RemoveMouseDownHandler( aHandler : TMouseEvent)');
    RegisterMethod('Procedure AddMouseUpHandler( aHandler : TMouseEvent)');
    RegisterMethod('Procedure RemoveMouseUpHandler( aHandler : TMouseEvent)');
    RegisterMethod('Procedure AddMouseCursorHandler( aHandler : TMouseCursorEvent)');
    RegisterMethod('Procedure RemoveMouseCursorHandler( aHandler : TMouseCursorEvent)');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_TMethodList(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TOBJECT', 'TMethodList') do
  with CL.AddClassN(CL.FindClass('TOBJECT'),'TMethodList') do begin
    RegisterMethod('Constructor Create');
    RegisterMethod('Procedure Add( aHandler : TMethod)');
    RegisterMethod('Procedure Remove( aHandler : TMethod)');
    RegisterProperty('Items', 'TMethod integer', iptr);
    //SetDefaultPropery('Items');
    RegisterProperty('Count', 'integer', iptr);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_TKeyboardControl(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TWinControl', 'TKeyboardControl') do
  with CL.AddClassN(CL.FindClass('TWinControl'),'TKeyboardControl') do
  begin
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_SynEditKbdHandler(CL: TPSPascalCompiler);
begin
  SIRegister_TKeyboardControl(CL);
  CL.AddTypeS('TMouseCursorEvent', 'Procedure ( Sender : TObject; const aLineCh'
   +'arPos : TBufferCoord; var aCursor : TCursor)');
  SIRegister_TMethodList(CL);
  SIRegister_TSynEditKbdHandler(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure TMethodListCount_R(Self: TMethodList; var T: integer);
begin T := Self.Count; end;

(*----------------------------------------------------------------------------*)
procedure TMethodListItems_R(Self: TMethodList; var T: TMethod; const t1: integer);
begin T := Self.Items[t1]; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TSynEditKbdHandler(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TSynEditKbdHandler) do begin
    RegisterConstructor(@TSynEditKbdHandler.Create, 'Create');
    RegisterMethod(@TSynEditKbdHandler.ExecuteKeyPress, 'ExecuteKeyPress');
    RegisterMethod(@TSynEditKbdHandler.ExecuteKeyDown, 'ExecuteKeyDown');
    RegisterMethod(@TSynEditKbdHandler.ExecuteKeyUp, 'ExecuteKeyUp');
    RegisterMethod(@TSynEditKbdHandler.ExecuteMouseDown, 'ExecuteMouseDown');
    RegisterMethod(@TSynEditKbdHandler.ExecuteMouseUp, 'ExecuteMouseUp');
    RegisterMethod(@TSynEditKbdHandler.ExecuteMouseCursor, 'ExecuteMouseCursor');
    RegisterMethod(@TSynEditKbdHandler.AddKeyDownHandler, 'AddKeyDownHandler');
    RegisterMethod(@TSynEditKbdHandler.RemoveKeyDownHandler, 'RemoveKeyDownHandler');
    RegisterMethod(@TSynEditKbdHandler.AddKeyUpHandler, 'AddKeyUpHandler');
    RegisterMethod(@TSynEditKbdHandler.RemoveKeyUpHandler, 'RemoveKeyUpHandler');
    RegisterMethod(@TSynEditKbdHandler.AddKeyPressHandler, 'AddKeyPressHandler');
    RegisterMethod(@TSynEditKbdHandler.RemoveKeyPressHandler, 'RemoveKeyPressHandler');
    RegisterMethod(@TSynEditKbdHandler.AddMouseDownHandler, 'AddMouseDownHandler');
    RegisterMethod(@TSynEditKbdHandler.RemoveMouseDownHandler, 'RemoveMouseDownHandler');
    RegisterMethod(@TSynEditKbdHandler.AddMouseUpHandler, 'AddMouseUpHandler');
    RegisterMethod(@TSynEditKbdHandler.RemoveMouseUpHandler, 'RemoveMouseUpHandler');
    RegisterMethod(@TSynEditKbdHandler.AddMouseCursorHandler, 'AddMouseCursorHandler');
    RegisterMethod(@TSynEditKbdHandler.RemoveMouseCursorHandler, 'RemoveMouseCursorHandler');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TMethodList(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TMethodList) do begin
    RegisterConstructor(@TMethodList.Create, 'Create');
    RegisterMethod(@TMethodList.Destroy, 'Free');
    RegisterMethod(@TMethodList.Add, 'Add');
    RegisterMethod(@TMethodList.Remove, 'Remove');
    RegisterPropertyHelper(@TMethodListItems_R,nil,'Items');
    RegisterPropertyHelper(@TMethodListCount_R,nil,'Count');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TKeyboardControl(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TKeyboardControl) do
  begin
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_SynEditKbdHandler(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TKeyboardControl(CL);
  RIRegister_TMethodList(CL);
  RIRegister_TSynEditKbdHandler(CL);
end;

 
 
{ TPSImport_SynEditKbdHandler }
(*----------------------------------------------------------------------------*)
procedure TPSImport_SynEditKbdHandler.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_SynEditKbdHandler(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_SynEditKbdHandler.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_SynEditKbdHandler(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
