unit uPSI_ShLwApi;
{
   { The original file is: shlwapi.h, released 2 March 1999. 	   }
{ The original Pascal code is: ShLwApi.pas, released 1 Dec 1999.   }
{ The initial developer of the Pascal code is Marcel van Brakel    }
{ (brakelm@chello.nl).
}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_ShLwApi = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_ShLwApi(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_ShLwApi_Routines(S: TPSExec);

procedure Register;

implementation


uses
   Windows
  ,ActiveX
  ,ShlObj
  ,ShLwApi
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_ShLwApi]);
end;


(* tagTHREADENTRY32 = record      in ti32help
    dwSize: DWORD;
    cntUsage: DWORD;
    th32ThreadID: DWORD;       // this thread
    th32OwnerProcessID: DWORD; // Process this thread is associated with
    tpBasePri: Longint;
    tpDeltaPri: Longint;
    dwFlags: DWORD;
  end;
{$EXTERNALSYM THREADENTRY32}
  THREADENTRY32 = tagTHREADENTRY32;
{$EXTERNALSYM PTHREADENTRY32}
  PTHREADENTRY32 = ^tagTHREADENTRY32;
{$EXTERNALSYM LPTHREADENTRY32}
  LPTHREADENTRY32 = ^tagTHREADENTRY32;
  TThreadEntry32 = tagTHREADENTRY32; *)


(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_ShLwApi(CL: TPSPascalCompiler);
begin
  CL.AddTypeS('TREFIID', 'TGUID');
 CL.AddDelphiFunction('Function StrChr( lpStart : PChar; wMatch : WORD) : PChar');
 //CL.AddDelphiFunction('Function StrChrA( lpStart : PAnsiChar; wMatch : WORD) : PAnsiChar');
 //CL.AddDelphiFunction('Function StrChrW( lpStart : PWideChar; wMatch : WORD) : PWideChar');
 CL.AddDelphiFunction('Function StrChrI( lpStart : PChar; wMatch : WORD) : PChar');
 //CL.AddDelphiFunction('Function StrChrIA( lpStart : PAnsiChar; wMatch : WORD) : PAnsiChar');
 //CL.AddDelphiFunction('Function StrChrIW( lpStart : PWideChar; wMatch : WORD) : PWideChar');
 CL.AddDelphiFunction('Function StrCmpN( lpStr1, lpStr2 : PChar; nChar : Integer) : Integer');
 //CL.AddDelphiFunction('Function StrCmpNA( lpStr1, lpStr2 : PAnsiChar; nChar : Integer) : Integer');
 //CL.AddDelphiFunction('Function StrCmpNW( lpStr1, lpStr2 : PWideChar; nChar : Integer) : Integer');
 CL.AddDelphiFunction('Function StrCmpNI( lpStr1, lpStr2 : PChar; nChar : Integer) : Integer');
 //CL.AddDelphiFunction('Function StrCmpNIA( lpStr1, lpStr2 : PAnsiChar; nChar : Integer) : Integer');
 //CL.AddDelphiFunction('Function StrCmpNIW( lpStr1, lpStr2 : PWideChar; nChar : Integer) : Integer');
 CL.AddDelphiFunction('Function StrCSpn( lpStr_, lpSet : PChar) : Integer');
 //CL.AddDelphiFunction('Function StrCSpnA( lpStr_, lpSet : PAnsiChar) : Integer');
 //CL.AddDelphiFunction('Function StrCSpnW( lpStr_, lpSet : PWideChar) : Integer');
 CL.AddDelphiFunction('Function StrCSpnI( lpStr1, lpSet : PChar) : Integer');
 //CL.AddDelphiFunction('Function StrCSpnIA( lpStr1, lpSet : PAnsiChar) : Integer');
 //CL.AddDelphiFunction('Function StrCSpnIW( lpStr1, lpSet : PWideChar) : Integer');
 CL.AddDelphiFunction('Function StrDup( lpSrch : PChar) : PChar');
 //CL.AddDelphiFunction('Function StrDupA( lpSrch : PAnsiChar) : PAnsiChar');
 //CL.AddDelphiFunction('Function StrDupW( lpSrch : PWideChar) : PWideChar');
 //CL.AddDelphiFunction('Function StrFormatByteSizeA( dw : DWORD; szBuf : PAnsiChar; uiBufSize : UINT) : PAnsiChar');
 //CL.AddDelphiFunction('Function StrFormatByteSizeW( qdw : LONGLONG; szBuf : PWideChar; uiBufSize : UINT) : PWideChar');
 CL.AddDelphiFunction('Function StrFormatByteSize( dw : DWORD; szBuf : PChar; uiBufSize : UINT) : PChar');
 CL.AddDelphiFunction('Function StrFormatKBSize( qdw : Dword; szBuf : PChar; uiBufSize : UINT) : PChar');
 //CL.AddDelphiFunction('Function StrFormatKBSizeA( qdw : LONGLONG; szBuf : PAnsiChar; uiBufSize : UINT) : PAnsiChar');
 //CL.AddDelphiFunction('Function StrFormatKBSizeW( qdw : LONGLONG; szBuf : PWideChar; uiBufSize : UINT) : PWideChar');
 CL.AddDelphiFunction('Function StrFromTimeInterval( pszOut : PChar; cchMax : UINT; dwTimeMS : DWORD; digits : Integer) : Integer');
 //CL.AddDelphiFunction('Function StrFromTimeIntervalA( pszOut : PAnsiChar; cchMax : UINT; dwTimeMS : DWORD; digits : Integer) : Integer');
 //CL.AddDelphiFunction('Function StrFromTimeIntervalW( pszOut : PWideChar; cchMax : UINT; dwTimeMS : DWORD; digits : Integer) : Integer');
 CL.AddDelphiFunction('Function StrIsIntlEqual( fCaseSens : BOOL; lpString1, lpString2 : PChar; nChar : Integer) : BOOL');
// CL.AddDelphiFunction('Function StrIsIntlEqualA( fCaseSens : BOOL; lpString1, lpString2 : PAnsiChar; nChar : Integer) : BOOL');
 //CL.AddDelphiFunction('Function StrIsIntlEqualW( fCaseSens : BOOL; lpString1, lpString2 : PWideChar; nChar : Integer) : BOOL');
 CL.AddDelphiFunction('Function StrNCat( psz1 : PChar; psz2 : PChar; cchMax : Integer) : PChar');
 //CL.AddDelphiFunction('Function StrNCatA( psz1 : PAnsiChar; psz2 : PAnsiChar; cchMax : Integer) : PAnsiChar');
 //CL.AddDelphiFunction('Function StrNCatW( psz1 : PWideChar; psz2 : PWideChar; cchMax : Integer) : PWideChar');
 CL.AddDelphiFunction('Function StrPBrk( psz, pszSet : PChar) : PChar');
 //CL.AddDelphiFunction('Function StrPBrkA( psz, pszSet : PAnsiChar) : PAnsiChar');
 //CL.AddDelphiFunction('Function StrPBrkW( psz, pszSet : PWideChar) : PWideChar');
 CL.AddDelphiFunction('Function StrRChr( lpStart, lpEnd : PChar; wMatch : WORD) : PChar');
 //CL.AddDelphiFunction('Function StrRChrA( lpStart, lpEnd : PAnsiChar; wMatch : WORD) : PAnsiChar');
 //CL.AddDelphiFunction('Function StrRChrW( lpStart, lpEnd : PWideChar; wMatch : WORD) : PWideChar');
 CL.AddDelphiFunction('Function StrRChrI( lpStart, lpEnd : PChar; wMatch : WORD) : PChar');
 //CL.AddDelphiFunction('Function StrRChrIA( lpStart, lpEnd : PAnsiChar; wMatch : WORD) : PAnsiChar');
 //CL.AddDelphiFunction('Function StrRChrIW( lpStart, lpEnd : PWideChar; wMatch : WORD) : PWideChar');
 CL.AddDelphiFunction('Function StrRStrI( lpSource, lpLast, lpSrch : PChar) : PChar');
 //CL.AddDelphiFunction('Function StrRStrIA( lpSource, lpLast, lpSrch : PAnsiChar) : PAnsiChar');
 //CL.AddDelphiFunction('Function StrRStrIW( lpSource, lpLast, lpSrch : PWideChar) : PWideChar');
 CL.AddDelphiFunction('Function StrSpn( psz, pszSet : PChar) : Integer');
 //CL.AddDelphiFunction('Function StrSpnA( psz, pszSet : PAnsiChar) : Integer');
 //CL.AddDelphiFunction('Function StrSpnW( psz, pszSet : PWideChar) : Integer');
 CL.AddDelphiFunction('Function StrStr( lpFirst, lpSrch : PChar) : PChar');
 //CL.AddDelphiFunction('Function StrStrA( lpFirst, lpSrch : PAnsiChar) : PAnsiChar');
 //CL.AddDelphiFunction('Function StrStrW( lpFirst, lpSrch : PWideChar) : PWideChar');
 CL.AddDelphiFunction('Function StrStrI( lpFirst, lpSrch : PChar) : PChar');
 //CL.AddDelphiFunction('Function StrStrIA( lpFirst, lpSrch : PAnsiChar) : PAnsiChar');
 //CL.AddDelphiFunction('Function StrStrIW( lpFirst, lpSrch : PWideChar) : PWideChar');
 CL.AddDelphiFunction('Function StrToInt( lpSrch : PChar) : Integer');
 //CL.AddDelphiFunction('Function StrToIntA( lpSrch : PAnsiChar) : Integer');
 //CL.AddDelphiFunction('Function StrToIntW( lpSrch : PWideChar) : Integer');
 CL.AddDelphiFunction('Function StrToIntEx( pszString : PChar; dwFlags : DWORD; var piRet : Integer) : BOOL');
 //CL.AddDelphiFunction('Function StrToIntExA( pszString : PAnsiChar; dwFlags : DWORD; var piRet : Integer) : BOOL');
 //CL.AddDelphiFunction('Function StrToIntExW( pszString : PWideChar; dwFlags : DWORD; var piRet : Integer) : BOOL');
 CL.AddDelphiFunction('Function StrTrim( psz : PChar; pszTrimChars : PChar) : BOOL');
 //CL.AddDelphiFunction('Function StrTrimA( psz : PAnsiChar; pszTrimChars : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function StrTrimW( psz : PWideChar; pszTrimChars : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function ChrCmpI( w1, w2 : WORD) : BOOL');
 CL.AddDelphiFunction('Function ChrCmpIA( w1, w2 : WORD) : BOOL');
 CL.AddDelphiFunction('Function ChrCmpIW( w1, w2 : WORD) : BOOL');
 CL.AddDelphiFunction('Function StrIntlEqN( s1, s2 : PChar; nChar : Integer) : BOOL');
 //CL.AddDelphiFunction('Function StrIntlEqNA( s1, s2 : PAnsiChar; nChar : Integer) : BOOL');
 //CL.AddDelphiFunction('Function StrIntlEqNW( s1, s2 : PWideChar; nChar : Integer) : BOOL');
 CL.AddDelphiFunction('Function StrIntlEqNI( s1, s2 : PChar; nChar : Integer) : BOOL');
 //CL.AddDelphiFunction('Function StrIntlEqNIA( s1, s2 : PAnsiChar; nChar : Integer) : BOOL');
 //CL.AddDelphiFunction('Function StrIntlEqNIW( s1, s2 : PWideChar; nChar : Integer) : BOOL');
 CL.AddDelphiFunction('Function StrCatBuff( pszDest, pszSrc : PChar; cchDestBuffSize : Integer) : PChar');
 //CL.AddDelphiFunction('Function StrCatBuffA( pszDest, pszSrc : PAnsiChar; cchDestBuffSize : Integer) : PAnsiChar');
 //CL.AddDelphiFunction('Function StrCatBuffW( pszDest, pszSrc : PWideChar; cchDestBuffSize : Integer) : PWideChar');
 CL.AddDelphiFunction('Function StrCpyNX( psz1 : PChar; psz2 : PChar; cchMax : Integer) : PChar');
 //CL.AddDelphiFunction('Function StrCpyNXA( psz1 : PAnsiChar; psz2 : PAnsiChar; cchMax : Integer) : PAnsiChar');
 //CL.AddDelphiFunction('Function StrCpyNXW( psz1 : PWideChar; psz2 : PWideChar; cchMax : Integer) : PWideChar');
 //CL.AddDelphiFunction('Function StrRetToStr( PChar : PStrRet; const pidl : PItemIdList; out ppsz : PChar) : HRESULT');
 //CL.AddDelphiFunction('Function StrRetToStrA( PAnsiChar : PStrRet; const pidl : PItemIdList; out ppsz : PAnsiChar) : HRESULT');
 //CL.AddDelphiFunction('Function StrRetToStrW( PWideChar : PStrRet; const pidl : PItemIdList; out ppsz : PWideChar) : HRESULT');
 //CL.AddDelphiFunction('Function StrRetToBuf( PChar : PStrRet; const pidl : PItemIdList; pszBuf : PChar; cchBuf : UINT) : HRESULT');
 //CL.AddDelphiFunction('Function StrRetToBufA( PAnsiChar : PStrRet; const pidl : PItemIdList; pszBuf : PAnsiChar; cchBuf : UINT) : HRESULT');
 //CL.AddDelphiFunction('Function StrRetToBufW( PWideChar : PStrRet; const pidl : PItemIdList; pszBuf : PWideChar; cchBuf : UINT) : HRESULT');
 //CL.AddDelphiFunction('Function SHStrDup( psz : PChar; out ppwsz : PWideChar) : HRESULT');
 //CL.AddDelphiFunction('Function SHStrDupA( psz : PAnsiChar; out ppwsz : PWideChar) : HRESULT');
 //CL.AddDelphiFunction('Function SHStrDupW( psz : PWideChar; out ppwsz : PWideChar) : HRESULT');
 CL.AddDelphiFunction('Function IntlStrEqWorker( fCaseSens : BOOL; lpString1, lpString2 : PChar; nChar : Integer) : BOOL');
 //CL.AddDelphiFunction('Function IntlStrEqWorkerA( fCaseSens : BOOL; lpString1, lpString2 : PAnsiChar; nChar : Integer) : BOOL');
 //CL.AddDelphiFunction('Function IntlStrEqWorkerW( fCaseSens : BOOL; lpString1, lpString2 : PWideChar; nChar : Integer) : BOOL');
 CL.AddDelphiFunction('Function IntlStrEqN( s1, s2 : PChar; nChar : Integer) : BOOL');
 //CL.AddDelphiFunction('Function IntlStrEqNA( s1, s2 : PAnsiChar; nChar : Integer) : BOOL');
 //CL.AddDelphiFunction('Function IntlStrEqNW( s1, s2 : PWideChar; nChar : Integer) : BOOL');
 CL.AddConstantN('SZ_CONTENTTYPE_HTMLA','String').SetString( 'text/html');
 CL.AddConstantN('SZ_CONTENTTYPE_HTMLW','String').SetString( 'text/html');
 CL.AddConstantN('SZ_CONTENTTYPE_HTML','string').SetString( SZ_CONTENTTYPE_HTMLA);
 CL.AddConstantN('SZ_CONTENTTYPE_CDFA','String').SetString( 'application/x-cdf');
 CL.AddConstantN('SZ_CONTENTTYPE_CDFW','String').SetString( 'application/x-cdf');
 CL.AddConstantN('SZ_CONTENTTYPE_CDF','string').SetString( SZ_CONTENTTYPE_CDFA);
 CL.AddDelphiFunction('Function PathIsHTMLFile( pszPath : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsHTMLFileA( pszPath : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsHTMLFileW( pszPath : PWideChar) : BOOL');
 CL.AddConstantN('STIF_DEFAULT','LongWord').SetUInt( $00000000);
 CL.AddConstantN('STIF_SUPPORT_HEX','LongWord').SetUInt( $00000001);
 //CL.AddDelphiFunction('Function StrCatA( psz1, psz2 : PAnsiChar) : PAnsiChar');
 //CL.AddDelphiFunction('Function StrCatW( psz1, psz2 : PWideChar) : PWideChar');
 (*CL.AddDelphiFunction('Function StrCat( psz1, psz2 : PAnsiChar) : PAnsiChar');
 CL.AddDelphiFunction('Function StrCmpA( psz1, psz2 : PAnsiChar) : Integer');
 CL.AddDelphiFunction('Function StrCmpW( psz1, psz2 : PWideChar) : Integer');
 CL.AddDelphiFunction('Function StrCmp( psz1, psz2 : PAnsiChar) : Integer');
 CL.AddDelphiFunction('Function StrCmpIA( psz1, psz2 : PAnsiChar) : Integer');
 CL.AddDelphiFunction('Function StrCmpIW( psz1, psz2 : PWideChar) : Integer');
 CL.AddDelphiFunction('Function StrCmpI( psz1, psz2 : PAnsiChar) : Integer');
 CL.AddDelphiFunction('Function StrCpyA( psz1, psz2 : PAnsiChar) : PAnsiChar');
 CL.AddDelphiFunction('Function StrCpyW( psz1, psz2 : PWideChar) : PWideChar');
 CL.AddDelphiFunction('Function StrCpy( psz1, psz2 : PAnsiChar) : PAnsiChar');
 CL.AddDelphiFunction('Function StrCpyNA( psz1, psz2 : PAnsiChar; cchMax : Integer) : PAnsiChar');
 CL.AddDelphiFunction('Function StrCpyNW( psz1, psz2 : PWideChar; cchMax : Integer) : PWideChar');
 CL.AddDelphiFunction('Function StrCpyN( psz1, psz2 : PAnsiChar; cchMax : Integer) : PAnsiChar');
 CL.AddDelphiFunction('Function StrToLong( lpSrch : PChar) : Integer');
 CL.AddDelphiFunction('Function StrToLongA( lpSrch : PAnsiChar) : Integer');
 CL.AddDelphiFunction('Function StrToLongW( lpSrch : PWideChar) : Integer');*)
 CL.AddDelphiFunction('Function StrNCmp( lpStr1, lpStr2 : PChar; nChar : Integer) : Integer');
 //CL.AddDelphiFunction('Function StrNCmpA( lpStr1, lpStr2 : PAnsiChar; nChar : Integer) : Integer');
 //CL.AddDelphiFunction('Function StrNCmpW( lpStr1, lpStr2 : PWideChar; nChar : Integer) : Integer');
 CL.AddDelphiFunction('Function StrNCmpI( lpStr1, lpStr2 : PChar; nChar : Integer) : Integer');
 //CL.AddDelphiFunction('Function StrNCmpIA( lpStr1, lpStr2 : PAnsiChar; nChar : Integer) : Integer');
 //CL.AddDelphiFunction('Function StrNCmpIW( lpStr1, lpStr2 : PWideChar; nChar : Integer) : Integer');
 CL.AddDelphiFunction('Function StrNCpy( psz1, psz2 : PChar; cchMax : Integer) : PChar');
// CL.AddDelphiFunction('Function StrNCpyA( psz1, psz2 : PAnsiChar; cchMax : Integer) : PAnsiChar');
 //CL.AddDelphiFunction('Function StrNCpyW( psz1, psz2 : PWideChar; cchMax : Integer) : PWideChar');
 CL.AddDelphiFunction('Function StrCatN( psz1 : PChar; psz2 : PChar; cchMax : Integer) : PChar');
 //CL.AddDelphiFunction('Function StrCatNA( psz1 : PAnsiChar; psz2 : PAnsiChar; cchMax : Integer) : PAnsiChar');
 //CL.AddDelphiFunction('Function StrCatNW( psz1 : PWideChar; psz2 : PWideChar; cchMax : Integer) : PWideChar');
 CL.AddDelphiFunction('Function PathAddBackslash( pszPath : PChar) : PChar');
 //CL.AddDelphiFunction('Function PathAddBackslashA( pszPath : PAnsiChar) : PAnsiChar');
 //CL.AddDelphiFunction('Function PathAddBackslashW( pszPath : PWideChar) : PWideChar');
 CL.AddDelphiFunction('Function PathAddExtension( pszPath : PChar; pszExt : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathAddExtensionA( pszPath : PAnsiChar; pszExt : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathAddExtensionW( pszPath : PWideChar; pszExt : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function PathAppend( pszPath : PChar; pMore : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathAppendA( pszPath : PAnsiChar; pMore : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathAppendW( pszPath : PWideChar; pMore : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function PathBuildRoot( szRoot : PChar; iDrive : Integer) : PChar');
 //CL.AddDelphiFunction('Function PathBuildRootA( szRoot : PAnsiChar; iDrive : Integer) : PAnsiChar');
 //CL.AddDelphiFunction('Function PathBuildRootW( szRoot : PWideChar; iDrive : Integer) : PWideChar');
 CL.AddDelphiFunction('Function PathCanonicalize( pszBuf : PChar; pszPath : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathCanonicalizeA( pszBuf : PAnsiChar; pszPath : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathCanonicalizeW( pszBuf : PWideChar; pszPath : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function PathCombine( szDest : PChar; lpszDir, lpszFile : PChar) : PChar');
 //CL.AddDelphiFunction('Function PathCombineA( szDest : PAnsiChar; lpszDir, lpszFile : PAnsiChar) : PAnsiChar');
 //CL.AddDelphiFunction('Function PathCombineW( szDest : PWideChar; lpszDir, lpszFile : PWideChar) : PWideChar');
 CL.AddDelphiFunction('Function PathCompactPath( hDC : HDC; pszPath : PChar; dx : UINT) : BOOL');
 //CL.AddDelphiFunction('Function PathCompactPathA( hDC : HDC; pszPath : PAnsiChar; dx : UINT) : BOOL');
 //CL.AddDelphiFunction('Function PathCompactPathW( hDC : HDC; pszPath : PWideChar; dx : UINT) : BOOL');
 CL.AddDelphiFunction('Function PathCompactPathEx( pszOut : PChar; pszSrc : PChar; cchMax : UINT; dwFlags : DWORD) : BOOL');
 //CL.AddDelphiFunction('Function PathCompactPathExA( pszOut : PAnsiChar; pszSrc : PAnsiChar; cchMax : UINT; dwFlags : DWORD) : BOOL');
 //CL.AddDelphiFunction('Function PathCompactPathExW( pszOut : PWideChar; pszSrc : PWideChar; cchMax : UINT; dwFlags : DWORD) : BOOL');
 CL.AddDelphiFunction('Function PathCommonPrefix( pszFile1, pszFile2 : PChar; achPath : PChar) : Integer');
 //CL.AddDelphiFunction('Function PathCommonPrefixA( pszFile1, pszFile2 : PAnsiChar; achPath : PAnsiChar) : Integer');
 //CL.AddDelphiFunction('Function PathCommonPrefixW( pszFile1, pszFile2 : PWideChar; achPath : PWideChar) : Integer');
 CL.AddDelphiFunction('Function PathFileExists( pszPath : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathFileExistsA( pszPath : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathFileExistsW( pszPath : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function PathFindExtension( pszPath : PChar) : PChar');
 //CL.AddDelphiFunction('Function PathFindExtensionA( pszPath : PAnsiChar) : PAnsiChar');
 //CL.AddDelphiFunction('Function PathFindExtensionW( pszPath : PWideChar) : PWideChar');
 CL.AddDelphiFunction('Function PathFindFileName( pszPath : PChar) : PChar');
 //CL.AddDelphiFunction('Function PathFindFileNameA( pszPath : PAnsiChar) : PAnsiChar');
 //CL.AddDelphiFunction('Function PathFindFileNameW( pszPath : PWideChar) : PWideChar');
 CL.AddDelphiFunction('Function PathFindNextComponent( pszPath : PChar) : PChar');
 //CL.AddDelphiFunction('Function PathFindNextComponentA( pszPath : PAnsiChar) : PAnsiChar');
 //CL.AddDelphiFunction('Function PathFindNextComponentW( pszPath : PWideChar) : PWideChar');
 CL.AddDelphiFunction('Function PathFindOnPath( pszPath : PChar; var ppszOtherDirs : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathFindOnPathA( pszPath : PAnsiChar; var ppszOtherDirs : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathFindOnPathW( pszPath : PWideChar; var ppszOtherDirs : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function PathGetArgs( pszPath : PChar) : PChar');
 //CL.AddDelphiFunction('Function PathGetArgsA( pszPath : PAnsiChar) : PAnsiChar');
 //CL.AddDelphiFunction('Function PathGetArgsW( pszPath : PWideChar) : PWideChar');
 CL.AddDelphiFunction('Function PathFindSuffixArray( pszPath : PChar; const apszSuffix : PChar; iArraySize : Integer) : PChar');
 //CL.AddDelphiFunction('Function PathFindSuffixArrayA( pszPath : PAnsiChar; const apszSuffix : PAnsiChar; iArraySize : Integer) : PAnsiChar');
 //CL.AddDelphiFunction('Function PathFindSuffixArrayW( pszPath : PWideChar; const apszSuffix : PWideChar; iArraySize : Integer) : PWideChar');
 CL.AddDelphiFunction('Function PathIsLFNFileSpec( lpName : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsLFNFileSpecA( lpName : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsLFNFileSpecW( lpName : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function PathGetCharType( ch : Char) : UINT');
 //CL.AddDelphiFunction('Function PathGetCharTypeA( ch : AnsiChar) : UINT');
 //CL.AddDelphiFunction('Function PathGetCharTypeW( ch : WideChar) : UINT');
 CL.AddConstantN('GCT_INVALID','LongWord').SetUInt( $0000);
 CL.AddConstantN('GCT_LFNCHAR','LongWord').SetUInt( $0001);
 CL.AddConstantN('GCT_SHORTCHAR','LongWord').SetUInt( $0002);
 CL.AddConstantN('GCT_WILD','LongWord').SetUInt( $0004);
 CL.AddConstantN('GCT_SEPARATOR','LongWord').SetUInt( $0008);
 CL.AddDelphiFunction('Function PathGetDriveNumber( pszPath : PChar) : Integer');
 //CL.AddDelphiFunction('Function PathGetDriveNumberA( pszPath : PAnsiChar) : Integer');
 //CL.AddDelphiFunction('Function PathGetDriveNumberW( pszPath : PWideChar) : Integer');
 CL.AddDelphiFunction('Function PathIsDirectory( pszPath : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsDirectoryA( pszPath : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsDirectoryW( pszPath : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function PathIsDirectoryEmpty( pszPath : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsDirectoryEmptyA( pszPath : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsDirectoryEmptyW( pszPath : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function PathIsFileSpec( pszPath : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsFileSpecA( pszPath : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsFileSpecW( pszPath : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function PathIsPrefix( pszPrefix, pszPath : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsPrefixA( pszPrefix, pszPath : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsPrefixW( pszPrefix, pszPath : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function PathIsRelative( pszPath : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsRelativeA( pszPath : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsRelativeW( pszPath : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function PathIsRoot( pszPath : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsRootA( pszPath : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsRootW( pszPath : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function PathIsSameRoot( pszPath1, pszPath2 : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsSameRootA( pszPath1, pszPath2 : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsSameRootW( pszPath1, pszPath2 : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function PathIsUNC( pszPath : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsUNCA( pszPath : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsUNCW( pszPath : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function PathIsNetworkPath( pszPath : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsNetworkPathA( pszPath : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsNetworkPathW( pszPath : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function PathIsUNCServer( pszPath : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsUNCServerA( pszPath : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsUNCServerW( pszPath : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function PathIsUNCServerShare( pszPath : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsUNCServerShareA( pszPath : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsUNCServerShareW( pszPath : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function PathIsContentType( pszPath, pszContentType : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsContentTypeA( pszPath, pszContentType : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsContentTypeW( pszPath, pszContentType : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function PathIsURL( pszPath : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsURLA( pszPath : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathIsURLW( pszPath : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function PathMakePretty( pszPath : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathMakePrettyA( pszPath : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathMakePrettyW( pszPath : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function PathMatchSpec( pszFile, pszSpec : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathMatchSpecA( pszFile, pszSpec : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathMatchSpecW( pszFile, pszSpec : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function PathParseIconLocation( pszIconFile : PChar) : Integer');
 //CL.AddDelphiFunction('Function PathParseIconLocationA( pszIconFile : PAnsiChar) : Integer');
 //CL.AddDelphiFunction('Function PathParseIconLocationW( pszIconFile : PWideChar) : Integer');
 CL.AddDelphiFunction('Procedure PathQuoteSpaces( lpsz : PChar)');
 //CL.AddDelphiFunction('Procedure PathQuoteSpacesA( lpsz : PAnsiChar)');
 //CL.AddDelphiFunction('Procedure PathQuoteSpacesW( lpsz : PWideChar)');
 CL.AddDelphiFunction('Function PathRelativePathTo( pszPath : PChar; pszFrom : PChar; dwAttrFrom : DWORD; pszTo : PChar; dwAttrTo : DWORD) : BOOL');
 //CL.AddDelphiFunction('Function PathRelativePathToA( pszPath : PAnsiChar; pszFrom : PAnsiChar; dwAttrFrom : DWORD; pszTo : PAnsiChar; dwAttrTo : DWORD) : BOOL');
 //CL.AddDelphiFunction('Function PathRelativePathToW( pszPath : PWideChar; pszFrom : PWideChar; dwAttrFrom : DWORD; pszTo : PWideChar; dwAttrTo : DWORD) : BOOL');
 CL.AddDelphiFunction('Procedure PathRemoveArgs( pszPath : PChar)');
 //CL.AddDelphiFunction('Procedure PathRemoveArgsA( pszPath : PAnsiChar)');
 //CL.AddDelphiFunction('Procedure PathRemoveArgsW( pszPath : PWideChar)');
 CL.AddDelphiFunction('Function PathRemoveBackslash( pszPath : PChar) : PChar');
 //CL.AddDelphiFunction('Function PathRemoveBackslashA( pszPath : PAnsiChar) : PAnsiChar');
 //CL.AddDelphiFunction('Function PathRemoveBackslashW( pszPath : PWideChar) : PWideChar');
 CL.AddDelphiFunction('Procedure PathRemoveBlanks( pszPath : PChar)');
 //CL.AddDelphiFunction('Procedure PathRemoveBlanksA( pszPath : PAnsiChar)');
 //CL.AddDelphiFunction('Procedure PathRemoveBlanksW( pszPath : PWideChar)');
 CL.AddDelphiFunction('Procedure PathRemoveExtension( pszPath : PChar)');
 //CL.AddDelphiFunction('Procedure PathRemoveExtensionA( pszPath : PAnsiChar)');
 //CL.AddDelphiFunction('Procedure PathRemoveExtensionW( pszPath : PWideChar)');
 CL.AddDelphiFunction('Function PathRemoveFileSpec( pszPath : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathRemoveFileSpecA( pszPath : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathRemoveFileSpecW( pszPath : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function PathRenameExtension( pszPath : PChar; pszExt : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathRenameExtensionA( pszPath : PAnsiChar; pszExt : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathRenameExtensionW( pszPath : PWideChar; pszExt : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function PathSearchAndQualify( pszPath : PChar; pszBuf : PChar; cchBuf : UINT) : BOOL');
 //CL.AddDelphiFunction('Function PathSearchAndQualifyA( pszPath : PAnsiChar; pszBuf : PAnsiChar; cchBuf : UINT) : BOOL');
 //CL.AddDelphiFunction('Function PathSearchAndQualifyW( pszPath : PWideChar; pszBuf : PWideChar; cchBuf : UINT) : BOOL');
 CL.AddDelphiFunction('Procedure PathSetDlgItemPath( hDlg : HWND; id : Integer; pszPath : PChar)');
 //CL.AddDelphiFunction('Procedure PathSetDlgItemPathA( hDlg : HWND; id : Integer; pszPath : PAnsiChar)');
 //CL.AddDelphiFunction('Procedure PathSetDlgItemPathW( hDlg : HWND; id : Integer; pszPath : PWideChar)');
 CL.AddDelphiFunction('Function PathSkipRoot( pszPath : PChar) : PChar');
 //CL.AddDelphiFunction('Function PathSkipRootA( pszPath : PAnsiChar) : PAnsiChar');
 //CL.AddDelphiFunction('Function PathSkipRootW( pszPath : PWideChar) : PWideChar');
 CL.AddDelphiFunction('Procedure PathStripPath( pszPath : PChar)');
 //CL.AddDelphiFunction('Procedure PathStripPathA( pszPath : PAnsiChar)');
 //CL.AddDelphiFunction('Procedure PathStripPathW( pszPath : PWideChar)');
 CL.AddDelphiFunction('Function PathStripToRoot( pszPath : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathStripToRootA( pszPath : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathStripToRootW( pszPath : PWideChar) : BOOL');
 CL.AddDelphiFunction('Procedure PathUnquoteSpaces( lpsz : PChar)');
 //CL.AddDelphiFunction('Procedure PathUnquoteSpacesA( lpsz : PAnsiChar)');
 //CL.AddDelphiFunction('Procedure PathUnquoteSpacesW( lpsz : PWideChar)');
 CL.AddDelphiFunction('Function PathMakeSystemFolder( pszPath : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathMakeSystemFolderA( pszPath : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathMakeSystemFolderW( pszPath : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function PathUnmakeSystemFolder( pszPath : PChar) : BOOL');
 //CL.AddDelphiFunction('Function PathUnmakeSystemFolderA( pszPath : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function PathUnmakeSystemFolderW( pszPath : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function PathIsSystemFolder( pszPath : PChar; dwAttrb : DWORD) : BOOL');
 //CL.AddDelphiFunction('Function PathIsSystemFolderA( pszPath : PAnsiChar; dwAttrb : DWORD) : BOOL');
 //CL.AddDelphiFunction('Function PathIsSystemFolderW( pszPath : PWideChar; dwAttrb : DWORD) : BOOL');
 CL.AddDelphiFunction('Procedure PathUndecorate( pszPath : PChar)');
 //CL.AddDelphiFunction('Procedure PathUndecorateA( pszPath : PAnsiChar)');
 //CL.AddDelphiFunction('Procedure PathUndecorateW( pszPath : PWideChar)');
 CL.AddDelphiFunction('Function PathUnExpandEnvStrings( pszPath : PChar; pszBuf : PChar; cchBuf : UINT) : BOOL');
 //CL.AddDelphiFunction('Function PathUnExpandEnvStringsA( pszPath : PAnsiChar; pszBuf : PAnsiChar; cchBuf : UINT) : BOOL');
 //CL.AddDelphiFunction('Function PathUnExpandEnvStringsW( pszPath : PWideChar; pszBuf : PWideChar; cchBuf : UINT) : BOOL');

 CL.AddDelphiFunction('procedure SHChangeNotify(wEventId: Longint; uFlags: UINT;'
  +'dwItem1, dwItem2: ___Pointer)');


 CL.AddConstantN('URL_SCHEME_INVALID','LongInt').SetInt( - 1);
 CL.AddConstantN('URL_SCHEME_UNKNOWN','LongInt').SetInt( 0);
 CL.AddConstantN('URL_SCHEME_FTP','LongInt').SetInt( 1);
 CL.AddConstantN('URL_SCHEME_HTTP','LongInt').SetInt( 2);
 CL.AddConstantN('URL_SCHEME_GOPHER','LongInt').SetInt( 3);
 CL.AddConstantN('URL_SCHEME_MAILTO','LongInt').SetInt( 4);
 CL.AddConstantN('URL_SCHEME_NEWS','LongInt').SetInt( 5);
 CL.AddConstantN('URL_SCHEME_NNTP','LongInt').SetInt( 6);
 CL.AddConstantN('URL_SCHEME_TELNET','LongInt').SetInt( 7);
 CL.AddConstantN('URL_SCHEME_WAIS','LongInt').SetInt( 8);
 CL.AddConstantN('URL_SCHEME_FILE','LongInt').SetInt( 9);
 CL.AddConstantN('URL_SCHEME_MK','LongInt').SetInt( 10);
 CL.AddConstantN('URL_SCHEME_HTTPS','LongInt').SetInt( 11);
 CL.AddConstantN('URL_SCHEME_SHELL','LongInt').SetInt( 12);
 CL.AddConstantN('URL_SCHEME_SNEWS','LongInt').SetInt( 13);
 CL.AddConstantN('URL_SCHEME_LOCAL','LongInt').SetInt( 14);
 CL.AddConstantN('URL_SCHEME_JAVASCRIPT','LongInt').SetInt( 15);
 CL.AddConstantN('URL_SCHEME_VBSCRIPT','LongInt').SetInt( 16);
 CL.AddConstantN('URL_SCHEME_ABOUT','LongInt').SetInt( 17);
 CL.AddConstantN('URL_SCHEME_RES','LongInt').SetInt( 18);
 CL.AddConstantN('URL_SCHEME_MAXVALUE','LongInt').SetInt( 19);
  CL.AddTypeS('URL_SCHEME', 'Integer');
 CL.AddConstantN('URL_PART_NONE','LongInt').SetInt( 0);
 CL.AddConstantN('URL_PART_SCHEME','LongInt').SetInt( 1);
 CL.AddConstantN('URL_PART_HOSTNAME','LongInt').SetInt( 2);
 CL.AddConstantN('URL_PART_USERNAME','LongInt').SetInt( 3);
 CL.AddConstantN('URL_PART_PASSWORD','LongInt').SetInt( 4);
 CL.AddConstantN('URL_PART_PORT','LongInt').SetInt( 5);
 CL.AddConstantN('URL_PART_QUERY','LongInt').SetInt( 6);
  CL.AddTypeS('URL_PART', 'DWORD');
 CL.AddConstantN('URLIS_URL','LongInt').SetInt( 0);
 CL.AddConstantN('URLIS_OPAQUE','LongInt').SetInt( 1);
 CL.AddConstantN('URLIS_NOHISTORY','LongInt').SetInt( 2);
 CL.AddConstantN('URLIS_FILEURL','LongInt').SetInt( 3);
 CL.AddConstantN('URLIS_APPLIABLE','LongInt').SetInt( 4);
 CL.AddConstantN('URLIS_DIRECTORY','LongInt').SetInt( 5);
 CL.AddConstantN('URLIS_HASQUERY','LongInt').SetInt( 6);
  CL.AddTypeS('TUrlIs', 'DWORD');
 CL.AddConstantN('URL_UNESCAPE','LongWord').SetUInt( $10000000);
 CL.AddConstantN('URL_ESCAPE_UNSAFE','LongWord').SetUInt( $20000000);
 CL.AddConstantN('URL_PLUGGABLE_PROTOCOL','LongWord').SetUInt( $40000000);
 CL.AddConstantN('URL_WININET_COMPATIBILITY','LongWord').SetUInt( DWORD ( $80000000 ));
 CL.AddConstantN('URL_DONT_ESCAPE_EXTRA_INFO','LongWord').SetUInt( $02000000);
// CL.AddConstantN('URL_DONT_UNESCAPE_EXTRA_INFO','').SetString( URL_DONT_ESCAPE_EXTRA_INFO);
 //CL.AddConstantN('URL_BROWSER_MODE','').SetString( URL_DONT_ESCAPE_EXTRA_INFO);
 CL.AddConstantN('URL_ESCAPE_SPACES_ONLY','LongWord').SetUInt( $04000000);
 CL.AddConstantN('URL_DONT_SIMPLIFY','LongWord').SetUInt( $08000000);
 CL.AddConstantN('URL_NO_META','longword').SetUInt( URL_DONT_SIMPLIFY);
 CL.AddConstantN('URL_UNESCAPE_INPLACE','LongWord').SetUInt( $00100000);
 CL.AddConstantN('URL_CONVERT_IF_DOSPATH','LongWord').SetUInt( $00200000);
 CL.AddConstantN('URL_UNESCAPE_HIGH_ANSI_ONLY','LongWord').SetUInt( $00400000);
 CL.AddConstantN('URL_INTERNAL_PATH','LongWord').SetUInt( $00800000);
 CL.AddConstantN('URL_FILE_USE_PATHURL','LongWord').SetUInt( $00010000);
 CL.AddConstantN('URL_ESCAPE_PERCENT','LongWord').SetUInt( $00001000);
 CL.AddConstantN('URL_ESCAPE_SEGMENT_ONLY','LongWord').SetUInt( $00002000);
 CL.AddConstantN('URL_PARTFLAG_KEEPSCHEME','LongWord').SetUInt( $00000001);
 CL.AddConstantN('URL_APPLY_DEFAULT','LongWord').SetUInt( $00000001);
 CL.AddConstantN('URL_APPLY_GUESSSCHEME','LongWord').SetUInt( $00000002);
 CL.AddConstantN('URL_APPLY_GUESSFILE','LongWord').SetUInt( $00000004);
 CL.AddConstantN('URL_APPLY_FORCEAPPLY','LongWord').SetUInt( $00000008);
 CL.AddDelphiFunction('Function UrlCompare( psz1, psz2 : PChar; fIgnoreSlash : BOOL) : Integer');
 //CL.AddDelphiFunction('Function UrlCompareA( psz1, psz2 : PAnsiChar; fIgnoreSlash : BOOL) : Integer');
 //CL.AddDelphiFunction('Function UrlCompareW( psz1, psz2 : PWideChar; fIgnoreSlash : BOOL) : Integer');
 CL.AddDelphiFunction('Function UrlCombine( pszBase, pszRelative : PChar; pszCombined : PChar; out pcchCombined : DWORD; dwFlags : DWORD) : HRESULT');
 //CL.AddDelphiFunction('Function UrlCombineA( pszBase, pszRelative : PAnsiChar; pszCombined : PAnsiChar; out pcchCombined : DWORD; dwFlags : DWORD) : HRESULT');
 //CL.AddDelphiFunction('Function UrlCombineW( pszBase, pszRelative : PWideChar; pszCombined : PWideChar; out pcchCombined : DWORD; dwFlags : DWORD) : HRESULT');
 CL.AddDelphiFunction('Function UrlCanonicalize( pszUrl : PChar; pszCanonicalized : PChar; pcchCanonicalized : DWORD; dwFlags : DWORD) : HRESULT');
 //CL.AddDelphiFunction('Function UrlCanonicalizeA( pszUrl : PAnsiChar; pszCanonicalized : PAnsiChar; pcchCanonicalized : LPDWORD; dwFlags : DWORD) : HRESULT');
 //CL.AddDelphiFunction('Function UrlCanonicalizeW( pszUrl : PWideChar; pszCanonicalized : PWideChar; pcchCanonicalized : LPDWORD; dwFlags : DWORD) : HRESULT');
 CL.AddDelphiFunction('Function UrlIsOpaque( pszURL : PChar) : BOOL');
 //CL.AddDelphiFunction('Function UrlIsOpaqueA( pszURL : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function UrlIsOpaqueW( pszURL : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function UrlIsNoHistory( pszURL : PChar) : BOOL');
 //CL.AddDelphiFunction('Function UrlIsNoHistoryA( pszURL : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function UrlIsNoHistoryW( pszURL : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function UrlIsFileUrl( pszURL : PChar) : BOOL');
 //CL.AddDelphiFunction('Function UrlIsFileUrlA( pszURL : PAnsiChar) : BOOL');
 //CL.AddDelphiFunction('Function UrlIsFileUrlW( pszURL : PWideChar) : BOOL');
 CL.AddDelphiFunction('Function UrlIs( pszUrl : PChar; UrlIs : TUrlIs) : BOOL');
 //CL.AddDelphiFunction('Function UrlIsA( pszUrl : PAnsiChar; UrlIs : TUrlIs) : BOOL');
 //CL.AddDelphiFunction('Function UrlIsW( pszUrl : PWideChar; UrlIs : TUrlIs) : BOOL');
 CL.AddDelphiFunction('Function UrlGetLocation( psz1 : PChar) : PChar');
 //CL.AddDelphiFunction('Function UrlGetLocationA( psz1 : PAnsiChar) : PAnsiChar');
 //CL.AddDelphiFunction('Function UrlGetLocationW( psz1 : PWideChar) : PWideChar');
 CL.AddDelphiFunction('Function UrlUnescape( pszUrl, pszUnescaped : PChar; pcchUnescaped : DWORD; dwFlags : DWORD) : HRESULT');
 //CL.AddDelphiFunction('Function UrlUnescapeA( pszUrl, pszUnescaped : PAnsiChar; pcchUnescaped : LPDWORD; dwFlags : DWORD) : HRESULT');
 //CL.AddDelphiFunction('Function UrlUnescapeW( pszUrl, pszUnescaped : PWideChar; pcchUnescaped : LPDWORD; dwFlags : DWORD) : HRESULT');
 CL.AddDelphiFunction('Function UrlEscape( pszUrl : PChar; pszEscaped : PChar; pcchEscaped : DWORD; dwFlags : DWORD) : HRESULT');
 //CL.AddDelphiFunction('Function UrlEscapeA( pszUrl : PAnsiChar; pszEscaped : PAnsiChar; pcchEscaped : LPDWORD; dwFlags : DWORD) : HRESULT');
 //CL.AddDelphiFunction('Function UrlEscapeW( pszUrl : PWideChar; pszEscaped : PWideChar; pcchEscaped : LPDWORD; dwFlags : DWORD) : HRESULT');
 CL.AddDelphiFunction('Function UrlCreateFromPath( pszPath : PChar; pszUrl : PChar; pcchUrl : DWORD; dwFlags : DWORD) : HRESULT');
 //CL.AddDelphiFunction('Function UrlCreateFromPathA( pszPath : PAnsiChar; pszUrl : PAnsiChar; pcchUrl : LPDWORD; dwFlags : DWORD) : HRESULT');
 //CL.AddDelphiFunction('Function UrlCreateFromPathW( pszPath : PWideChar; pszUrl : PWideChar; pcchUrl : LPDWORD; dwFlags : DWORD) : HRESULT');
 CL.AddDelphiFunction('Function PathCreateFromUrl( pszUrl : PChar; pszPath : PChar; pcchPath : DWORD; dwFlags : DWORD) : HRESULT');
 //CL.AddDelphiFunction('Function PathCreateFromUrlA( pszUrl : PAnsiChar; pszPath : PAnsiChar; pcchPath : LPDWORD; dwFlags : DWORD) : HRESULT');
 //CL.AddDelphiFunction('Function PathCreateFromUrlW( pszUrl : PWideChar; pszPath : PWideChar; pcchPath : LPDWORD; dwFlags : DWORD) : HRESULT');
 CL.AddDelphiFunction('Function UrlHash( pszUrl : PChar; pbHash : BYTE; cbHash : DWORD) : HRESULT');
 //CL.AddDelphiFunction('Function UrlHashA( pszUrl : PAnsiChar; pbHash : PBYTE; cbHash : DWORD) : HRESULT');
 //CL.AddDelphiFunction('Function UrlHashW( pszUrl : PWideChar; pbHash : PBYTE; cbHash : DWORD) : HRESULT');
 CL.AddDelphiFunction('Function UrlGetPart( pszIn : PChar; pszOut : PChar; pcchOut : DWORD; dwPart, dwFlags : DWORD) : HRESULT');
 //CL.AddDelphiFunction('Function UrlGetPartA( pszIn : PAnsiChar; pszOut : PAnsiChar; pcchOut : LPDWORD; dwPart, dwFlags : DWORD) : HRESULT');
 //CL.AddDelphiFunction('Function UrlGetPartW( pszIn : PWideChar; pszOut : PWideChar; pcchOut : LPDWORD; dwPart, dwFlags : DWORD) : HRESULT');
 CL.AddDelphiFunction('Function UrlApplyScheme( pszIn : PChar; pszOut : PChar; pcchOut : DWORD; dwFlags : DWORD) : HRESULT');
 //CL.AddDelphiFunction('Function UrlApplySchemeA( pszIn : PAnsiChar; pszOut : PAnsiChar; pcchOut : LPDWORD; dwFlags : DWORD) : HRESULT');
 //CL.AddDelphiFunction('Function UrlApplySchemeW( pszIn : PWideChar; pszOut : PWideChar; pcchOut : LPDWORD; dwFlags : DWORD) : HRESULT');
 CL.AddDelphiFunction('Function HashData( pbData : BYTE; cbData : DWORD; pbHash : BYTE; cbHash : DWORD) : HRESULT');
 CL.AddDelphiFunction('Function UrlEscapeSpaces( pszUrl : PChar; pszEscaped : PChar; pcchEscaped : DWORD) : HRESULT');
 //CL.AddDelphiFunction('Function UrlEscapeSpacesA( pszUrl : PAnsiChar; pszEscaped : PAnsiChar; pcchEscaped : LPDWORD) : HRESULT');
 //CL.AddDelphiFunction('Function UrlEscapeSpacesW( pszUrl : PWideChar; pszEscaped : PWideChar; pcchEscaped : LPDWORD) : HRESULT');
 CL.AddDelphiFunction('Function UrlUnescapeInPlace( pszUrl : PChar; dwFlags : DWORD) : HRESULT');
 //CL.AddDelphiFunction('Function UrlUnescapeInPlaceA( pszUrl : PAnsiChar; dwFlags : DWORD) : HRESULT');
 //CL.AddDelphiFunction('Function UrlUnescapeInPlaceW( pszUrl : PWideChar; dwFlags : DWORD) : HRESULT');
 CL.AddDelphiFunction('Function SHDeleteEmptyKey( hKey : HKEY; pszSubKey : PChar) : DWORD');
 //CL.AddDelphiFunction('Function SHDeleteEmptyKeyA( hKey : HKEY; pszSubKey : PAnsiChar) : DWORD');
 //CL.AddDelphiFunction('Function SHDeleteEmptyKeyW( hKey : HKEY; pszSubKey : PWideChar) : DWORD');
 CL.AddDelphiFunction('Function SHDeleteKey( hKey : HKEY; pszSubKey : PChar) : DWORD');
 //CL.AddDelphiFunction('Function SHDeleteKeyA( hKey : HKEY; pszSubKey : PAnsiChar) : DWORD');
 //CL.AddDelphiFunction('Function SHDeleteKeyW( hKey : HKEY; pszSubKey : PWideChar) : DWORD');
 CL.AddDelphiFunction('Function SHDeleteValue( hKey : HKEY; pszSubKey, pszValue : PChar) : DWORD');
 //CL.AddDelphiFunction('Function SHDeleteValueA( hKey : HKEY; pszSubKey, pszValue : PAnsiChar) : DWORD');
 //CL.AddDelphiFunction('Function SHDeleteValueW( hKey : HKEY; pszSubKey, pszValue : PWideChar) : DWORD');
 //CL.AddDelphiFunction('Function SHGetValue( hKey : HKEY; pszSubKey, pszValue : PChar; pdwType : DWORD; pvData : Pointer; var pcbData : DWORD) : DWORD');
 //CL.AddDelphiFunction('Function SHGetValueA( hKey : HKEY; pszSubKey, pszValue : PAnsiChar; pdwType : LPDWORD; pvData : Pointer; var pcbData : DWORD) : DWORD');
 //CL.AddDelphiFunction('Function SHGetValueW( hKey : HKEY; pszSubKey, pszValue : PWideChar; pdwType : LPDWORD; pvData : Pointer; var pcbData : DWORD) : DWORD');
 //CL.AddDelphiFunction('Function SHSetValue( hKey : HKEY; pszSubKey, pszValue : PChar; dwType : DWORD; pvData : Pointer; cbData : DWORD) : DWORD');
 //CL.AddDelphiFunction('Function SHSetValueA( hKey : HKEY; pszSubKey, pszValue : PAnsiChar; dwType : DWORD; pvData : Pointer; cbData : DWORD) : DWORD');
 //CL.AddDelphiFunction('Function SHSetValueW( hKey : HKEY; pszSubKey, pszValue : PWideChar; dwType : DWORD; pvData : Pointer; cbData : DWORD) : DWORD');
 //CL.AddDelphiFunction('Function SHQueryValueEx( hKey : HKEY; pszValue : PChar; pdwReserved, pdwType : LPDWORD; pvData : Pointer; var pcbData : DWORD) : DWORD');
 //CL.AddDelphiFunction('Function SHQueryValueExA( hKey : HKEY; pszValue : PAnsiChar; pdwReserved, pdwType : LPDWORD; pvData : Pointer; var pcbData : DWORD) : DWORD');
 //CL.AddDelphiFunction('Function SHQueryValueExW( hKey : HKEY; pszValue : PWideChar; pdwReserved, pdwType : LPDWORD; pvData : Pointer; var pcbData : DWORD) : DWORD');
 CL.AddDelphiFunction('Function SHEnumKeyEx( hKey : HKEY; dwIndex : DWORD; pszName : PChar; var pcchName : DWORD) : Longint');
 //CL.AddDelphiFunction('Function SHEnumKeyExA( hKey : HKEY; dwIndex : DWORD; pszName : PAnsiChar; var pcchName : DWORD) : Longint');
 //CL.AddDelphiFunction('Function SHEnumKeyExW( hKey : HKEY; dwIndex : DWORD; pszName : PWideChar; var pcchName : DWORD) : Longint');
 CL.AddDelphiFunction('Function SHEnumValue( hKey : HKEY; dwIndex : DWORD; pszValueName : PChar; var pcchValueName : DWORD; pdwType : DWORD; pvData : ___Pointer; pcbData : DWORD) : Longint');
 //CL.AddDelphiFunction('Function SHEnumValueA( hKey : HKEY; dwIndex : DWORD; pszValueName : PAnsiChar; var pcchValueName : DWORD; pdwType : LPDWORD; pvData : Pointer; pcbData : LPDWORD) : Longint');
 //CL.AddDelphiFunction('Function SHEnumValueW( hKey : HKEY; dwIndex : DWORD; pszValueName : PWideChar; var pcchValueName : DWORD; pdwType : LPDWORD; pvData : Pointer; pcbData : LPDWORD) : Longint');
 CL.AddDelphiFunction('Function SHQueryInfoKey( hKey : HKEY; pcSubKeys, pcchMaxSubKeyLen, pcValues, pcchMaxValueNameLen : DWORD) : Longint');
 //CL.AddDelphiFunction('Function SHQueryInfoKeyA( hKey : HKEY; pcSubKeys, pcchMaxSubKeyLen, pcValues, pcchMaxValueNameLen : LPDWORD) : Longint');
 //CL.AddDelphiFunction('Function SHQueryInfoKeyW( hKey : HKEY; pcSubKeys, pcchMaxSubKeyLen, pcValues, pcchMaxValueNameLen : LPDWORD) : Longint');
 CL.AddDelphiFunction('Function SHCopyKey( hkeySrc : HKEY; szSrcSubKey : PChar; hkeyDest : HKEY; fReserved : DWORD) : DWORD');
 //CL.AddDelphiFunction('Function SHCopyKeyA( hkeySrc : HKEY; szSrcSubKey : PAnsiChar; hkeyDest : HKEY; fReserved : DWORD) : DWORD');
 //CL.AddDelphiFunction('Function SHCopyKeyW( hkeySrc : HKEY; szSrcSubKey : PWideChar; hkeyDest : HKEY; fReserved : DWORD) : DWORD');
 CL.AddDelphiFunction('Function SHRegGetPath( hKey : HKEY; pcszSubKey, pcszValue : PChar; pszPath : PChar; dwFlags : DWORD) : DWORD');
 //CL.AddDelphiFunction('Function SHRegGetPathA( hKey : HKEY; pcszSubKey, pcszValue : PAnsiChar; pszPath : PAnsiChar; dwFlags : DWORD) : DWORD');
 //CL.AddDelphiFunction('Function SHRegGetPathW( hKey : HKEY; pcszSubKey, pcszValue : PWideChar; pszPath : PWideChar; dwFlags : DWORD) : DWORD');
 CL.AddDelphiFunction('Function SHRegSetPath( hKey : HKEY; pcszSubKey, pcszValue, pcszPath : PChar; dwFlags : DWORD) : DWORD');
 //CL.AddDelphiFunction('Function SHRegSetPathA( hKey : HKEY; pcszSubKey, pcszValue, pcszPath : PAnsiChar; dwFlags : DWORD) : DWORD');
 //CL.AddDelphiFunction('Function SHRegSetPathW( hKey : HKEY; pcszSubKey, pcszValue, pcszPath : PWideChar; dwFlags : DWORD) : DWORD');
 CL.AddConstantN('SHREGDEL_DEFAULT','LongWord').SetUInt( $00000000);
 CL.AddConstantN('SHREGDEL_HKCU','LongWord').SetUInt( $00000001);
 CL.AddConstantN('SHREGDEL_HKLM','LongWord').SetUInt( $00000010);
 CL.AddConstantN('SHREGDEL_BOTH','LongWord').SetUInt( $00000011);
 CL.AddConstantN('SHREGENUM_DEFAULT','LongWord').SetUInt( $00000000);
 CL.AddConstantN('SHREGENUM_HKCU','LongWord').SetUInt( $00000001);
 CL.AddConstantN('SHREGENUM_HKLM','LongWord').SetUInt( $00000010);
 CL.AddConstantN('SHREGENUM_BOTH','LongWord').SetUInt( $00000011);
 CL.AddConstantN('SHREGSET_HKCU','LongWord').SetUInt( $00000001);
 CL.AddConstantN('SHREGSET_FORCE_HKCU','LongWord').SetUInt( $00000002);
 CL.AddConstantN('SHREGSET_HKLM','LongWord').SetUInt( $00000004);
 CL.AddConstantN('SHREGSET_FORCE_HKLM','LongWord').SetUInt( $00000008);
  CL.AddTypeS('TSHRegDelFlags', 'DWORD');
  CL.AddTypeS('TSHRegEnumFlags', 'DWORD');
  CL.AddTypeS('HUSKEY', 'THandle');
 // CL.AddTypeS('PHUSKEY', '^HUSKEY // will not work');
 //CL.AddDelphiFunction('Function SHRegCreateUSKey( pszPath : PChar; samDesired : REGSAM; hRelativeUSKey : HUSKEY; phNewUSKey : PHUSKEY; dwFlags : DWORD) : Longint');
 //CL.AddDelphiFunction('Function SHRegCreateUSKeyA( pszPath : PAnsiChar; samDesired : REGSAM; hRelativeUSKey : HUSKEY; phNewUSKey : PHUSKEY; dwFlags : DWORD) : Longint');
 //CL.AddDelphiFunction('Function SHRegCreateUSKeyW( pszPath : PWideChar; samDesired : REGSAM; hRelativeUSKey : HUSKEY; phNewUSKey : PHUSKEY; dwFlags : DWORD) : Longint');
 //CL.AddDelphiFunction('Function SHRegOpenUSKey( pszPath : PChar; samDesired : REGSAM; hRelativeUSKey : HUSKEY; phNewUSKey : PHUSKEY; fIgnoreHKCU : BOOL) : Longint');
 //CL.AddDelphiFunction('Function SHRegOpenUSKeyA( pszPath : PAnsiChar; samDesired : REGSAM; hRelativeUSKey : HUSKEY; phNewUSKey : PHUSKEY; fIgnoreHKCU : BOOL) : Longint');
 //CL.AddDelphiFunction('Function SHRegOpenUSKeyW( pszPath : PWideChar; samDesired : REGSAM; hRelativeUSKey : HUSKEY; phNewUSKey : PHUSKEY; fIgnoreHKCU : BOOL) : Longint');
 //CL.AddDelphiFunction('Function SHRegQueryUSValue( hUSKey : HUSKEY; pszValue : PChar; pdwType : DWORD; pvData : Pointer; pcbData : LPDWORD; fIgnoreHKCU : BOOL; pvDefaultData : Pointer; dwDefaultDataSize : DWORD) : Longint');
 //CL.AddDelphiFunction('Function SHRegQueryUSValueA( hUSKey : HUSKEY; pszValue : PAnsiChar; pdwType : LPDWORD; pvData : Pointer; pcbData : LPDWORD; fIgnoreHKCU : BOOL; pvDefaultData : Pointer; dwDefaultDataSize : DWORD) : Longint');
 //CL.AddDelphiFunction('Function SHRegQueryUSValueW( hUSKey : HUSKEY; pszValue : PWideChar; pdwType : LPDWORD; pvData : Pointer; pcbData : LPDWORD; fIgnoreHKCU : BOOL; pvDefaultData : Pointer; dwDefaultDataSize : DWORD) : Longint');
 //CL.AddDelphiFunction('Function SHRegWriteUSValue( hUSKey : HUSKEY; pszValue : PChar; dwType : DWORD; pvData : Pointer; cbData, dwFlags : DWORD) : Longint');
 //CL.AddDelphiFunction('Function SHRegWriteUSValueA( hUSKey : HUSKEY; pszValue : PAnsiChar; dwType : DWORD; pvData : Pointer; cbData, dwFlags : DWORD) : Longint');
 //CL.AddDelphiFunction('Function SHRegWriteUSValueW( hUSKey : HUSKEY; pszValue : PWideChar; dwType : DWORD; pvData : Pointer; cbData, dwFlags : DWORD) : Longint');
 //CL.AddDelphiFunction('Function SHRegDeleteUSValue( hUSKey : HUSKEY; pszValue : PChar; delRegFlags : TSHRegDelFlags) : Longint');
 //CL.AddDelphiFunction('Function SHRegDeleteUSValueA( hUSKey : HUSKEY; pszValue : PAnsiChar; delRegFlags : TSHRegDelFlags) : Longint');
 //CL.AddDelphiFunction('Function SHRegDeleteUSValueW( hUSKey : HUSKEY; pszValue : PWideChar; delRegFlags : TSHRegDelFlags) : Longint');
 //CL.AddDelphiFunction('Function SHRegDeleteEmptyUSKey( hUSKey : HUSKEY; pwzSubKey : PChar; delRegFlags : TSHRegDelFlags) : Longint');
 //CL.AddDelphiFunction('Function SHRegDeleteEmptyUSKeyA( hUSKey : HUSKEY; pwzSubKey : PAnsiChar; delRegFlags : TSHRegDelFlags) : Longint');
 //CL.AddDelphiFunction('Function SHRegDeleteEmptyUSKeyW( hUSKey : HUSKEY; pwzSubKey : PWideChar; delRegFlags : TSHRegDelFlags) : Longint');
 //CL.AddDelphiFunction('Function SHRegEnumUSKey( hUSKey : HUSKEY; dwIndex : DWORD; pszName : PChar; pcchName : LPDWORD; enumRegFlags : TSHRegEnumFlags) : Longint');
 //CL.AddDelphiFunction('Function SHRegEnumUSKeyA( hUSKey : HUSKEY; dwIndex : DWORD; pszName : PAnsiChar; pcchName : LPDWORD; enumRegFlags : TSHRegEnumFlags) : Longint');
 //CL.AddDelphiFunction('Function SHRegEnumUSKeyW( hUSKey : HUSKEY; dwIndex : DWORD; pszName : PWideChar; pcchName : LPDWORD; enumRegFlags : TSHRegEnumFlags) : Longint');
 (*CL.AddDelphiFunction('Function SHRegEnumUSValue( hUSKey : HUSKEY; dwIndex : DWORD; pszValueName : PChar; pcchValueName, pdwType : LPDWORD; pvData : Pointer; pcbData : LPDWORD; enumRegFlags : TSHRegEnumFlags) : Longint');
 CL.AddDelphiFunction('Function SHRegEnumUSValueA( hUSKey : HUSKEY; dwIndex : DWORD; pszValueName : PAnsiChar; pcchValueName, pdwType : LPDWORD; pvData : Pointer; pcbData : LPDWORD; enumRegFlags : TSHRegEnumFlags) : Longint');
 CL.AddDelphiFunction('Function SHRegEnumUSValueW( hUSKey : HUSKEY; dwIndex : DWORD; pszValueName : PWideChar; pcchValueName, pdwType : LPDWORD; pvData : Pointer; pcbData : LPDWORD; enumRegFlags : TSHRegEnumFlags) : Longint');
 CL.AddDelphiFunction('Function SHRegQueryInfoUSKey( hUSKey : HUSKEY; pcSubKeys, pcchMaxSubKeyLen, pcValues, pcchMaxValueNameLen : LPDWORD; enumRegFlags : TSHRegEnumFlags) : Longint');
 CL.AddDelphiFunction('Function SHRegQueryInfoUSKeyA( hUSKey : HUSKEY; pcSubKeys, pcchMaxSubKeyLen, pcValues, pcchMaxValueNameLen : LPDWORD; enumRegFlags : TSHRegEnumFlags) : Longint');
 CL.AddDelphiFunction('Function SHRegQueryInfoUSKeyW( hUSKey : HUSKEY; pcSubKeys, pcchMaxSubKeyLen, pcValues, pcchMaxValueNameLen : LPDWORD; enumRegFlags : TSHRegEnumFlags) : Longint');
 CL.AddDelphiFunction('Function SHRegCloseUSKey( hUSKey : HUSKEY) : Longint');
 CL.AddDelphiFunction('Function SHRegGetUSValue( pszSubKey, pszValue : PChar; pdwType : LPDWORD; pvData : Pointer; var pcbData : DWORD; fIgnoreHKCU : BOOL; pvDefaultData : Pointer; dwDefaultDataSize : DWORD) : Longint');
 CL.AddDelphiFunction('Function SHRegGetUSValueA( pszSubKey, pszValue : PAnsiChar; pdwType : LPDWORD; pvData : Pointer; var pcbData : DWORD; fIgnoreHKCU : BOOL; pvDefaultData : Pointer; dwDefaultDataSize : DWORD) : Longint');
 CL.AddDelphiFunction('Function SHRegGetUSValueW( pszSubKey, pszValue : PWideChar; pdwType : LPDWORD; pvData : Pointer; var pcbData : DWORD; fIgnoreHKCU : BOOL; pvDefaultData : Pointer; dwDefaultDataSize : DWORD) : Longint');
 CL.AddDelphiFunction('Function SHRegSetUSValue( pszSubKey, pszValue : PChar; dwType : DWORD; pvData : Pointer; cbData, dwFlags : DWORD) : Longint');
 CL.AddDelphiFunction('Function SHRegSetUSValueA( pszSubKey, pszValue : PAnsiChar; dwType : DWORD; pvData : Pointer; cbData, dwFlags : DWORD) : Longint');
 CL.AddDelphiFunction('Function SHRegSetUSValueW( pszSubKey, pszValue : PWideChar; dwType : DWORD; pvData : Pointer; cbData, dwFlags : DWORD) : Longint');
 CL.AddDelphiFunction('Function SHRegGetBoolUSValue( pszSubKey, pszValue : PChar; fIgnoreHKCU, fDefault : BOOL) : BOOL');
 CL.AddDelphiFunction('Function SHRegGetBoolUSValueA( pszSubKey, pszValue : PAnsiChar; fIgnoreHKCU, fDefault : BOOL) : BOOL');
 CL.AddDelphiFunction('Function SHRegGetBoolUSValueW( pszSubKey, pszValue : PWideChar; fIgnoreHKCU, fDefault : BOOL) : BOOL');*)
 //CL.AddDelphiFunction('Function SHRegGetIntW( hk : HKEY; pwzKey : LPCWSTR; iDefault : Integer) : Integer');
 CL.AddConstantN('ASSOCF_INIT_NOREMAPCLSID','LongWord').SetUInt( $00000001);
 CL.AddConstantN('ASSOCF_INIT_BYEXENAME','LongWord').SetUInt( $00000002);
 CL.AddConstantN('ASSOCF_OPEN_BYEXENAME','LongWord').SetUInt( $00000002);
 CL.AddConstantN('ASSOCF_INIT_DEFAULTTOSTAR','LongWord').SetUInt( $00000004);
 CL.AddConstantN('ASSOCF_INIT_DEFAULTTOFOLDER','LongWord').SetUInt( $00000008);
 CL.AddConstantN('ASSOCF_NOUSERSETTINGS','LongWord').SetUInt( $00000010);
 CL.AddConstantN('ASSOCF_NOTRUNCATE','LongWord').SetUInt( $00000020);
 CL.AddConstantN('ASSOCF_VERIFY','LongWord').SetUInt( $00000040);
 CL.AddConstantN('ASSOCF_REMAPRUNDLL','LongWord').SetUInt( $00000080);
 CL.AddConstantN('ASSOCF_NOFIXUPS','LongWord').SetUInt( $00000100);
 CL.AddConstantN('ASSOCF_IGNOREBASECLASS','LongWord').SetUInt( $00000200);
  CL.AddTypeS('ASSOCF', 'DWORD');
 CL.AddConstantN('ASSOCSTR_COMMAND','LongInt').SetInt( 1);
 CL.AddConstantN('ASSOCSTR_EXECUTABLE','LongInt').SetInt( 2);
 CL.AddConstantN('ASSOCSTR_FRIENDLYDOCNAME','LongInt').SetInt( 3);
 CL.AddConstantN('ASSOCSTR_FRIENDLYAPPNAME','LongInt').SetInt( 4);
 CL.AddConstantN('ASSOCSTR_NOOPEN','LongInt').SetInt( 5);
 CL.AddConstantN('ASSOCSTR_SHELLNEWVALUE','LongInt').SetInt( 6);
 CL.AddConstantN('ASSOCSTR_DDECOMMAND','LongInt').SetInt( 7);
 CL.AddConstantN('ASSOCSTR_DDEIFEXEC','LongInt').SetInt( 8);
 CL.AddConstantN('ASSOCSTR_DDEAPPLICATION','LongInt').SetInt( 9);
 CL.AddConstantN('ASSOCSTR_DDETOPIC','LongInt').SetInt( 10);
 CL.AddConstantN('ASSOCSTR_INFOTIP','LongInt').SetInt( 11);
 CL.AddConstantN('ASSOCSTR_MAX','LongInt').SetInt( 12);
  CL.AddTypeS('ASSOCSTR', 'DWORD');
 CL.AddConstantN('ASSOCKEY_SHELLEXECCLASS','LongInt').SetInt( 1);
 CL.AddConstantN('ASSOCKEY_APP','LongInt').SetInt( 2);
 CL.AddConstantN('ASSOCKEY_CLASS','LongInt').SetInt( 3);
 CL.AddConstantN('ASSOCKEY_BASECLASS','LongInt').SetInt( 4);
 CL.AddConstantN('ASSOCKEY_MAX','LongInt').SetInt( 5);
  CL.AddTypeS('ASSOCKEY', 'DWORD');
 CL.AddConstantN('ASSOCDATA_MSIDESCRIPTOR','LongInt').SetInt( 1);
 CL.AddConstantN('ASSOCDATA_NOACTIVATEHANDLER','LongInt').SetInt( 2);
 CL.AddConstantN('ASSOCDATA_QUERYCLASSSTORE','LongInt').SetInt( 3);
 CL.AddConstantN('ASSOCDATA_HASPERUSERASSOC','LongInt').SetInt( 4);
 CL.AddConstantN('ASSOCDATA_MAX','LongInt').SetInt( 5);
  CL.AddTypeS('ASSOCDATA', 'DWORD');
 CL.AddConstantN('ASSOCENUM_NONE','LongInt').SetInt( 0);
  CL.AddTypeS('ASSOCENUM', 'DWORD');
 CL.AddConstantN('SID_IQueryAssociations','String').SetString( '{c46ca590-3c3f-11d2-bee6-0000f805ca57}');
 //CL.AddDelphiFunction('Function AssocCreate( clsid : TCLSID; riid : TREFIID; ppv : Pointer) : HRESULT');
 (*CL.AddDelphiFunction('Function AssocQueryString( flags : ASSOCF; str : ASSOCSTR; pszAssoc, pszExtra : PChar; pszOut : PChar; pcchOut : PDWORD) : HRESULT');
 CL.AddDelphiFunction('Function AssocQueryStringA( flags : ASSOCF; str : ASSOCSTR; pszAssoc, pszExtra : PAnsiChar; pszOut : PAnsiChar; pcchOut : PDWORD) : HRESULT');
 CL.AddDelphiFunction('Function AssocQueryStringW( flags : ASSOCF; str : ASSOCSTR; pszAssoc, pszExtra : PWideChar; pszOut : PWideChar; pcchOut : PDWORD) : HRESULT');
 CL.AddDelphiFunction('Function AssocQueryStringByKey( flags : ASSOCF; str : ASSOCSTR; hkAssoc : HKEY; pszExtra : PChar; pszOut : PChar; pcchOut : PDWORD) : HRESULT');
 CL.AddDelphiFunction('Function AssocQueryStringByKeyA( flags : ASSOCF; str : ASSOCSTR; hkAssoc : HKEY; pszExtra : PAnsiChar; pszOut : PAnsiChar; pcchOut : PDWORD) : HRESULT');
 CL.AddDelphiFunction('Function AssocQueryStringByKeyW( flags : ASSOCF; str : ASSOCSTR; hkAssoc : HKEY; pszExtra : PWideChar; pszOut : PWideChar; pcchOut : PDWORD) : HRESULT');
 CL.AddDelphiFunction('Function AssocQueryKey( flags : ASSOCF; key : ASSOCKEY; pszAssoc, pszExtra : PChar; out phkeyOut : HKEY) : HRESULT');
 CL.AddDelphiFunction('Function AssocQueryKeyA( flags : ASSOCF; key : ASSOCKEY; pszAssoc, pszExtra : PAnsiChar; out phkeyOut : HKEY) : HRESULT');
 CL.AddDelphiFunction('Function AssocQueryKeyW( flags : ASSOCF; key : ASSOCKEY; pszAssoc, pszExtra : PWideChar; out phkeyOut : HKEY) : HRESULT'); *)
 (*CL.AddDelphiFunction('Function SHOpenRegStream( hkey : HKEY; pszSubkey, pszValue : PChar; grfMode : DWORD) : IStream');
 CL.AddDelphiFunction('Function SHOpenRegStreamA( hkey : HKEY; pszSubkey, pszValue : PAnsiChar; grfMode : DWORD) : IStream');
 CL.AddDelphiFunction('Function SHOpenRegStreamW( hkey : HKEY; pszSubkey, pszValue : PWideChar; grfMode : DWORD) : IStream');
 CL.AddDelphiFunction('Function SHOpenRegStream2( hkey : HKEY; pszSubkey, pszValue : PChar; grfMode : DWORD) : IStream');
 CL.AddDelphiFunction('Function SHOpenRegStream2A( hkey : HKEY; pszSubkey, pszValue : PAnsiChar; grfMode : DWORD) : IStream');
 CL.AddDelphiFunction('Function SHOpenRegStream2W( hkey : HKEY; pszSubkey, pszValue : PWideChar; grfMode : DWORD) : IStream');
 CL.AddDelphiFunction('Function SHCreateStreamOnFile( pszFile : PChar; grfMode : DWORD; out ppstm : IStream) : HRESULT');
 CL.AddDelphiFunction('Function SHCreateStreamOnFileA( pszFile : PAnsiChar; grfMode : DWORD; out ppstm : IStream) : HRESULT');
 CL.AddDelphiFunction('Function SHCreateStreamOnFileW( pszFile : PWideChar; grfMode : DWORD; out ppstm : IStream) : HRESULT');*)
 CL.AddConstantN('SHACF_DEFAULT','LongWord').SetUInt( $00000000);
 CL.AddConstantN('SHACF_FILESYSTEM','LongWord').SetUInt( $00000001);
 CL.AddConstantN('SHACF_URLHISTORY','LongWord').SetUInt( $00000002);
 CL.AddConstantN('SHACF_URLMRU','LongWord').SetUInt( $00000004);
 CL.AddConstantN('SHACF_USETAB','LongWord').SetUInt( $00000008);
 CL.AddConstantN('SHACF_FILESYS_ONLY','LongWord').SetUInt( $00000010);
 CL.AddConstantN('SHACF_AUTOSUGGEST_FORCE_ON','LongWord').SetUInt( $10000000);
 CL.AddConstantN('SHACF_AUTOSUGGEST_FORCE_OFF','LongWord').SetUInt( $20000000);
 CL.AddConstantN('SHACF_AUTOAPPEND_FORCE_ON','LongWord').SetUInt( $40000000);
 CL.AddConstantN('SHACF_AUTOAPPEND_FORCE_OFF','LongWord').SetUInt( DWORD ( $80000000 ));
 CL.AddDelphiFunction('Function SHAutoComplete( hwndEdit : HWND; dwFlags : DWORD) : HRESULT');
 CL.AddDelphiFunction('Procedure SHSetThreadRef( punk : IUnknown)');
 CL.AddDelphiFunction('Procedure SHGetThreadRef( out ppunk : IUnknown)');
 //CL.AddDelphiFunction('Function SHSkipJunction( pbc : IBindCtx; const pclsid : TCLSID) : BOOL');
 CL.AddConstantN('CTF_INSIST','LongWord').SetUInt( $00000001);
 CL.AddConstantN('CTF_THREAD_REF','LongWord').SetUInt( $00000002);
 CL.AddConstantN('CTF_PROCESS_REF','LongWord').SetUInt( $00000004);
 CL.AddConstantN('CTF_COINIT','LongWord').SetUInt( $00000008);
 //CL.AddDelphiFunction('Function SHCreateThread( pfnThreadProc : TThreadStartRoutine; pData : Pointer; dwFlags : DWORD; pfnCallback : TThreadStartRoutine) : BOOL');
 CL.AddDelphiFunction('Function SHCreateShellPalette( hdc : HDC) : HPALETTE');
 CL.AddDelphiFunction('Procedure ColorRGBToHLS( clrRGB : TColorRef; out pwHue, pwLuminance, pwSaturation : WORD)');
 CL.AddDelphiFunction('Function ColorHLSToRGB( wHue, wLuminance, wSaturation : WORD) : TColorRef');
 CL.AddDelphiFunction('Function ColorAdjustLuma( clrRGB : TColorRef; n : Integer; fScale : Boolean) : TColorRef');
 CL.AddConstantN('DLLVER_PLATFORM_WINDOWS','LongWord').SetUInt( $00000001);
 CL.AddConstantN('DLLVER_PLATFORM_NT','LongWord').SetUInt( $00000002);
 CL.AddConstantN('DLLVER_MAJOR_MASK','LongWord').SetUInt( Int64 ( $FFFF000000000000 ));
 CL.AddConstantN('DLLVER_MINOR_MASK','LongWord').SetUInt( Int64 ( $0000FFFF00000000 ));
 CL.AddConstantN('DLLVER_BUILD_MASK','LongWord').SetUInt( Int64 ( $00000000FFFF0000 ));
 CL.AddConstantN('DLLVER_QFE_MASK','LongWord').SetUInt( Int64 ( $000000000000FFFF ));
 CL.AddDelphiFunction('Function MAKEDLLVERULL( Major, Minor, Build, Qfe : Word) : Int64');
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_ShLwApi_Routines(S: TPSExec);
begin
 S.RegisterDelphiFunction(@StrChr, 'StrChr', CdStdCall);
 //S.RegisterDelphiFunction(@StrChrA, 'StrChrA', CdStdCall);
 //S.RegisterDelphiFunction(@StrChrW, 'StrChrW', CdStdCall);
 S.RegisterDelphiFunction(@StrChrI, 'StrChrI', CdStdCall);
 //S.RegisterDelphiFunction(@StrChrIA, 'StrChrIA', CdStdCall);
 //S.RegisterDelphiFunction(@StrChrIW, 'StrChrIW', CdStdCall);
 S.RegisterDelphiFunction(@StrCmpN, 'StrCmpN', CdStdCall);
 //S.RegisterDelphiFunction(@StrCmpNA, 'StrCmpNA', CdStdCall);
 //S.RegisterDelphiFunction(@StrCmpNW, 'StrCmpNW', CdStdCall);
 S.RegisterDelphiFunction(@StrCmpNI, 'StrCmpNI', CdStdCall);
 //S.RegisterDelphiFunction(@StrCmpNIA, 'StrCmpNIA', CdStdCall);
 //S.RegisterDelphiFunction(@StrCmpNIW, 'StrCmpNIW', CdStdCall);
 S.RegisterDelphiFunction(@StrCSpn, 'StrCSpn', CdStdCall);
 //S.RegisterDelphiFunction(@StrCSpnA, 'StrCSpnA', CdStdCall);
 //S.RegisterDelphiFunction(@StrCSpnW, 'StrCSpnW', CdStdCall);
 S.RegisterDelphiFunction(@StrCSpnI, 'StrCSpnI', CdStdCall);
 //S.RegisterDelphiFunction(@StrCSpnIA, 'StrCSpnIA', CdStdCall);
 //S.RegisterDelphiFunction(@StrCSpnIW, 'StrCSpnIW', CdStdCall);
 S.RegisterDelphiFunction(@StrDup, 'StrDup', CdStdCall);
 //S.RegisterDelphiFunction(@StrDupA, 'StrDupA', CdStdCall);
 //S.RegisterDelphiFunction(@StrDupW, 'StrDupW', CdStdCall);
 S.RegisterDelphiFunction(@StrFormatByteSizeA, 'StrFormatByteSizeA', CdStdCall);
 //S.RegisterDelphiFunction(@StrFormatByteSizeW, 'StrFormatByteSizeW', CdStdCall);
 //S.RegisterDelphiFunction(@StrFormatByteSize, 'StrFormatByteSize', CdStdCall);
 S.RegisterDelphiFunction(@StrFormatKBSize, 'StrFormatKBSize', CdStdCall);
 //S.RegisterDelphiFunction(@StrFormatKBSizeA, 'StrFormatKBSizeA', CdStdCall);
 //S.RegisterDelphiFunction(@StrFormatKBSizeW, 'StrFormatKBSizeW', CdStdCall);
 S.RegisterDelphiFunction(@StrFromTimeInterval, 'StrFromTimeInterval', CdStdCall);
 //S.RegisterDelphiFunction(@StrFromTimeIntervalA, 'StrFromTimeIntervalA', CdStdCall);
 //S.RegisterDelphiFunction(@StrFromTimeIntervalW, 'StrFromTimeIntervalW', CdStdCall);
 S.RegisterDelphiFunction(@StrIsIntlEqual, 'StrIsIntlEqual', CdStdCall);
 //S.RegisterDelphiFunction(@StrIsIntlEqualA, 'StrIsIntlEqualA', CdStdCall);
 //S.RegisterDelphiFunction(@StrIsIntlEqualW, 'StrIsIntlEqualW', CdStdCall);
 S.RegisterDelphiFunction(@StrNCat, 'StrNCat', CdStdCall);
 //S.RegisterDelphiFunction(@StrNCatA, 'StrNCatA', CdStdCall);
 //S.RegisterDelphiFunction(@StrNCatW, 'StrNCatW', CdStdCall);
 S.RegisterDelphiFunction(@StrPBrk, 'StrPBrk', CdStdCall);
 //S.RegisterDelphiFunction(@StrPBrkA, 'StrPBrkA', CdStdCall);
 //S.RegisterDelphiFunction(@StrPBrkW, 'StrPBrkW', CdStdCall);
 S.RegisterDelphiFunction(@StrRChr, 'StrRChr', CdStdCall);
 //S.RegisterDelphiFunction(@StrRChrA, 'StrRChrA', CdStdCall);
 //S.RegisterDelphiFunction(@StrRChrW, 'StrRChrW', CdStdCall);
 S.RegisterDelphiFunction(@StrRChrI, 'StrRChrI', CdStdCall);
 //S.RegisterDelphiFunction(@StrRChrIA, 'StrRChrIA', CdStdCall);
 //S.RegisterDelphiFunction(@StrRChrIW, 'StrRChrIW', CdStdCall);
 S.RegisterDelphiFunction(@StrRStrI, 'StrRStrI', CdStdCall);
 //S.RegisterDelphiFunction(@StrRStrIA, 'StrRStrIA', CdStdCall);
 //S.RegisterDelphiFunction(@StrRStrIW, 'StrRStrIW', CdStdCall);
 S.RegisterDelphiFunction(@StrSpn, 'StrSpn', CdStdCall);
 //S.RegisterDelphiFunction(@StrSpnA, 'StrSpnA', CdStdCall);
 //S.RegisterDelphiFunction(@StrSpnW, 'StrSpnW', CdStdCall);
 S.RegisterDelphiFunction(@StrStr, 'StrStr', CdStdCall);
 //S.RegisterDelphiFunction(@StrStrA, 'StrStrA', CdStdCall);
 //S.RegisterDelphiFunction(@StrStrW, 'StrStrW', CdStdCall);
 S.RegisterDelphiFunction(@StrStrI, 'StrStrI', CdStdCall);
 //S.RegisterDelphiFunction(@StrStrIA, 'StrStrIA', CdStdCall);
 //S.RegisterDelphiFunction(@StrStrIW, 'StrStrIW', CdStdCall);
 S.RegisterDelphiFunction(@StrToInt, 'StrToInt', CdStdCall);
 //S.RegisterDelphiFunction(@StrToIntA, 'StrToIntA', CdStdCall);
 //S.RegisterDelphiFunction(@StrToIntW, 'StrToIntW', CdStdCall);
 S.RegisterDelphiFunction(@StrToIntEx, 'StrToIntEx', CdStdCall);
 //S.RegisterDelphiFunction(@StrToIntExA, 'StrToIntExA', CdStdCall);
 //S.RegisterDelphiFunction(@StrToIntExW, 'StrToIntExW', CdStdCall);
 S.RegisterDelphiFunction(@StrTrim, 'StrTrim', CdStdCall);
 //S.RegisterDelphiFunction(@StrTrimA, 'StrTrimA', CdStdCall);
 //S.RegisterDelphiFunction(@StrTrimW, 'StrTrimW', CdStdCall);
 //S.RegisterDelphiFunction(@ChrCmpI, 'ChrCmpI', CdStdCall);
 //S.RegisterDelphiFunction(@ChrCmpIA, 'ChrCmpIA', CdStdCall);
 //S.RegisterDelphiFunction(@ChrCmpIW, 'ChrCmpIW', CdStdCall);
 //S.RegisterDelphiFunction(@StrIntlEqN, 'StrIntlEqN', cdRegister);
 //S.RegisterDelphiFunction(@StrIntlEqNA, 'StrIntlEqNA', cdRegister);
 //S.RegisterDelphiFunction(@StrIntlEqNW, 'StrIntlEqNW', cdRegister);
 //S.RegisterDelphiFunction(@StrIntlEqNI, 'StrIntlEqNI', cdRegister);
 //S.RegisterDelphiFunction(@StrIntlEqNIA, 'StrIntlEqNIA', cdRegister);
 //S.RegisterDelphiFunction(@StrIntlEqNIW, 'StrIntlEqNIW', cdRegister);
 S.RegisterDelphiFunction(@StrCatBuff, 'StrCatBuff', CdStdCall);
 //S.RegisterDelphiFunction(@StrCatBuffA, 'StrCatBuffA', CdStdCall);
 //S.RegisterDelphiFunction(@StrCatBuffW, 'StrCatBuffW', CdStdCall);
 //S.RegisterDelphiFunction(@StrCpyNX, 'StrCpyNX', CdStdCall);
 //S.RegisterDelphiFunction(@StrCpyNXA, 'StrCpyNXA', CdStdCall);
 //S.RegisterDelphiFunction(@StrCpyNXW, 'StrCpyNXW', CdStdCall);
 S.RegisterDelphiFunction(@StrRetToStr, 'StrRetToStr', CdStdCall);
 //S.RegisterDelphiFunction(@StrRetToStrA, 'StrRetToStrA', CdStdCall);
 //S.RegisterDelphiFunction(@StrRetToStrW, 'StrRetToStrW', CdStdCall);
 S.RegisterDelphiFunction(@StrRetToBuf, 'StrRetToBuf', CdStdCall);
 //S.RegisterDelphiFunction(@StrRetToBufA, 'StrRetToBufA', CdStdCall);
 //S.RegisterDelphiFunction(@StrRetToBufW, 'StrRetToBufW', CdStdCall);
 S.RegisterDelphiFunction(@SHStrDup, 'SHStrDup', CdStdCall);
 //S.RegisterDelphiFunction(@SHStrDupA, 'SHStrDupA', CdStdCall);
 //S.RegisterDelphiFunction(@SHStrDupW, 'SHStrDupW', CdStdCall);
 S.RegisterDelphiFunction(@IntlStrEqWorker, 'IntlStrEqWorker', CdStdCall);
 //S.RegisterDelphiFunction(@IntlStrEqWorkerA, 'IntlStrEqWorkerA', CdStdCall);
 //S.RegisterDelphiFunction(@IntlStrEqWorkerW, 'IntlStrEqWorkerW', CdStdCall);
 S.RegisterDelphiFunction(@IntlStrEqN, 'IntlStrEqN', cdRegister);
 //S.RegisterDelphiFunction(@IntlStrEqNA, 'IntlStrEqNA', cdRegister);
 //S.RegisterDelphiFunction(@IntlStrEqNW, 'IntlStrEqNW', cdRegister);
 S.RegisterDelphiFunction(@PathIsHTMLFile, 'PathIsHTMLFile', cdRegister);
 //S.RegisterDelphiFunction(@PathIsHTMLFileA, 'PathIsHTMLFileA', cdRegister);
 //S.RegisterDelphiFunction(@PathIsHTMLFileW, 'PathIsHTMLFileW', cdRegister);
 //S.RegisterDelphiFunction(@StrCatA, 'StrCatA', cdRegister);
 //S.RegisterDelphiFunction(@StrCatW, 'StrCatW', CdStdCall);
 S.RegisterDelphiFunction(@StrCat, 'StrCat', cdRegister);
 //S.RegisterDelphiFunction(@StrCmpA, 'StrCmpA', cdRegister);
 //S.RegisterDelphiFunction(@StrCmpW, 'StrCmpW', CdStdCall);
 S.RegisterDelphiFunction(@StrCmp, 'StrCmp', cdRegister);
 //S.RegisterDelphiFunction(@StrCmpIA, 'StrCmpIA', cdRegister);
 //S.RegisterDelphiFunction(@StrCmpIW, 'StrCmpIW', cdRegister);
 S.RegisterDelphiFunction(@StrCmpI, 'StrCmpI', cdRegister);
 //S.RegisterDelphiFunction(@StrCpyA, 'StrCpyA', cdRegister);
 //S.RegisterDelphiFunction(@StrCpyW, 'StrCpyW', cdRegister);
 S.RegisterDelphiFunction(@StrCpy, 'StrCpy', cdRegister);
 //S.RegisterDelphiFunction(@StrCpyNA, 'StrCpyNA', cdRegister);
 //S.RegisterDelphiFunction(@StrCpyNW, 'StrCpyNW', cdRegister);
 S.RegisterDelphiFunction(@StrCpyN, 'StrCpyN', cdRegister);
 S.RegisterDelphiFunction(@StrToLong, 'StrToLong', cdRegister);
 //S.RegisterDelphiFunction(@StrToLongA, 'StrToLongA', cdRegister);
 //S.RegisterDelphiFunction(@StrToLongW, 'StrToLongW', cdRegister);
 S.RegisterDelphiFunction(@StrNCmp, 'StrNCmp', cdRegister);
 //S.RegisterDelphiFunction(@StrNCmpA, 'StrNCmpA', cdRegister);
 //S.RegisterDelphiFunction(@StrNCmpW, 'StrNCmpW', cdRegister);
 S.RegisterDelphiFunction(@StrNCmpI, 'StrNCmpI', cdRegister);
 //S.RegisterDelphiFunction(@StrNCmpIA, 'StrNCmpIA', cdRegister);
 //S.RegisterDelphiFunction(@StrNCmpIW, 'StrNCmpIW', cdRegister);
 S.RegisterDelphiFunction(@StrNCpy, 'StrNCpy', cdRegister);
 //S.RegisterDelphiFunction(@StrNCpyA, 'StrNCpyA', cdRegister);
 //S.RegisterDelphiFunction(@StrNCpyW, 'StrNCpyW', cdRegister);
 S.RegisterDelphiFunction(@StrCatN, 'StrCatN', cdRegister);
 //S.RegisterDelphiFunction(@StrCatNA, 'StrCatNA', cdRegister);
 //S.RegisterDelphiFunction(@StrCatNW, 'StrCatNW', cdRegister);
 S.RegisterDelphiFunction(@PathAddBackslash, 'PathAddBackslash', CdStdCall);
 //S.RegisterDelphiFunction(@PathAddBackslashA, 'PathAddBackslashA', CdStdCall);
 //S.RegisterDelphiFunction(@PathAddBackslashW, 'PathAddBackslashW', CdStdCall);
 S.RegisterDelphiFunction(@PathAddExtension, 'PathAddExtension', CdStdCall);
 //S.RegisterDelphiFunction(@PathAddExtensionA, 'PathAddExtensionA', CdStdCall);
 //S.RegisterDelphiFunction(@PathAddExtensionW, 'PathAddExtensionW', CdStdCall);
 S.RegisterDelphiFunction(@PathAppend, 'PathAppend', CdStdCall);
 S.RegisterDelphiFunction(@SHChangeNotify, 'SHChangeNotify', CdStdCall);

  //S.RegisterDelphiFunction(@PathAppendA, 'PathAppendA', CdStdCall);
 //S.RegisterDelphiFunction(@PathAppendW, 'PathAppendW', CdStdCall);
 S.RegisterDelphiFunction(@PathBuildRoot, 'PathBuildRoot', CdStdCall);
 //S.RegisterDelphiFunction(@PathBuildRootA, 'PathBuildRootA', CdStdCall);
 //S.RegisterDelphiFunction(@PathBuildRootW, 'PathBuildRootW', CdStdCall);
 S.RegisterDelphiFunction(@PathCanonicalize, 'PathCanonicalize', CdStdCall);
 //S.RegisterDelphiFunction(@PathCanonicalizeA, 'PathCanonicalizeA', CdStdCall);
 //S.RegisterDelphiFunction(@PathCanonicalizeW, 'PathCanonicalizeW', CdStdCall);
 S.RegisterDelphiFunction(@PathCombine, 'PathCombine', CdStdCall);
 //S.RegisterDelphiFunction(@PathCombineA, 'PathCombineA', CdStdCall);
 //S.RegisterDelphiFunction(@PathCombineW, 'PathCombineW', CdStdCall);
 S.RegisterDelphiFunction(@PathCompactPath, 'PathCompactPath', CdStdCall);
 //S.RegisterDelphiFunction(@PathCompactPathA, 'PathCompactPathA', CdStdCall);
 //S.RegisterDelphiFunction(@PathCompactPathW, 'PathCompactPathW', CdStdCall);
 S.RegisterDelphiFunction(@PathCompactPathEx, 'PathCompactPathEx', CdStdCall);
 //S.RegisterDelphiFunction(@PathCompactPathExA, 'PathCompactPathExA', CdStdCall);
 //S.RegisterDelphiFunction(@PathCompactPathExW, 'PathCompactPathExW', CdStdCall);
 S.RegisterDelphiFunction(@PathCommonPrefix, 'PathCommonPrefix', CdStdCall);
 //S.RegisterDelphiFunction(@PathCommonPrefixA, 'PathCommonPrefixA', CdStdCall);
 //S.RegisterDelphiFunction(@PathCommonPrefixW, 'PathCommonPrefixW', CdStdCall);
 S.RegisterDelphiFunction(@PathFileExists, 'PathFileExists', CdStdCall);
 //S.RegisterDelphiFunction(@PathFileExistsA, 'PathFileExistsA', CdStdCall);
 //S.RegisterDelphiFunction(@PathFileExistsW, 'PathFileExistsW', CdStdCall);
 S.RegisterDelphiFunction(@PathFindExtension, 'PathFindExtension', CdStdCall);
 //S.RegisterDelphiFunction(@PathFindExtensionA, 'PathFindExtensionA', CdStdCall);
 //S.RegisterDelphiFunction(@PathFindExtensionW, 'PathFindExtensionW', CdStdCall);
 S.RegisterDelphiFunction(@PathFindFileName, 'PathFindFileName', CdStdCall);
 //S.RegisterDelphiFunction(@PathFindFileNameA, 'PathFindFileNameA', CdStdCall);
 //S.RegisterDelphiFunction(@PathFindFileNameW, 'PathFindFileNameW', CdStdCall);
 S.RegisterDelphiFunction(@PathFindNextComponent, 'PathFindNextComponent', CdStdCall);
 //S.RegisterDelphiFunction(@PathFindNextComponentA, 'PathFindNextComponentA', CdStdCall);
 //S.RegisterDelphiFunction(@PathFindNextComponentW, 'PathFindNextComponentW', CdStdCall);
 S.RegisterDelphiFunction(@PathFindOnPath, 'PathFindOnPath', CdStdCall);
 //S.RegisterDelphiFunction(@PathFindOnPathA, 'PathFindOnPathA', CdStdCall);
 //S.RegisterDelphiFunction(@PathFindOnPathW, 'PathFindOnPathW', CdStdCall);
 S.RegisterDelphiFunction(@PathGetArgs, 'PathGetArgs', CdStdCall);
 //S.RegisterDelphiFunction(@PathGetArgsA, 'PathGetArgsA', CdStdCall);
 //S.RegisterDelphiFunction(@PathGetArgsW, 'PathGetArgsW', CdStdCall);
 S.RegisterDelphiFunction(@PathFindSuffixArray, 'PathFindSuffixArray', CdStdCall);
 //S.RegisterDelphiFunction(@PathFindSuffixArrayA, 'PathFindSuffixArrayA', CdStdCall);
 //S.RegisterDelphiFunction(@PathFindSuffixArrayW, 'PathFindSuffixArrayW', CdStdCall);
 S.RegisterDelphiFunction(@PathIsLFNFileSpec, 'PathIsLFNFileSpec', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsLFNFileSpecA, 'PathIsLFNFileSpecA', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsLFNFileSpecW, 'PathIsLFNFileSpecW', CdStdCall);
 S.RegisterDelphiFunction(@PathGetCharType, 'PathGetCharType', CdStdCall);
 //S.RegisterDelphiFunction(@PathGetCharTypeA, 'PathGetCharTypeA', CdStdCall);
 //S.RegisterDelphiFunction(@PathGetCharTypeW, 'PathGetCharTypeW', CdStdCall);
 S.RegisterDelphiFunction(@PathGetDriveNumber, 'PathGetDriveNumber', CdStdCall);
 //S.RegisterDelphiFunction(@PathGetDriveNumberA, 'PathGetDriveNumberA', CdStdCall);
 //S.RegisterDelphiFunction(@PathGetDriveNumberW, 'PathGetDriveNumberW', CdStdCall);
 S.RegisterDelphiFunction(@PathIsDirectory, 'PathIsDirectory', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsDirectoryA, 'PathIsDirectoryA', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsDirectoryW, 'PathIsDirectoryW', CdStdCall);
 S.RegisterDelphiFunction(@PathIsDirectoryEmpty, 'PathIsDirectoryEmpty', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsDirectoryEmptyA, 'PathIsDirectoryEmptyA', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsDirectoryEmptyW, 'PathIsDirectoryEmptyW', CdStdCall);
 S.RegisterDelphiFunction(@PathIsFileSpec, 'PathIsFileSpec', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsFileSpecA, 'PathIsFileSpecA', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsFileSpecW, 'PathIsFileSpecW', CdStdCall);
 S.RegisterDelphiFunction(@PathIsPrefix, 'PathIsPrefix', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsPrefixA, 'PathIsPrefixA', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsPrefixW, 'PathIsPrefixW', CdStdCall);
 S.RegisterDelphiFunction(@PathIsRelative, 'PathIsRelative', CdStdCall);
 //7S.RegisterDelphiFunction(@PathIsRelativeA, 'PathIsRelativeA', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsRelativeW, 'PathIsRelativeW', CdStdCall);
 S.RegisterDelphiFunction(@PathIsRoot, 'PathIsRoot', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsRootA, 'PathIsRootA', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsRootW, 'PathIsRootW', CdStdCall);
 S.RegisterDelphiFunction(@PathIsSameRoot, 'PathIsSameRoot', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsSameRootA, 'PathIsSameRootA', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsSameRootW, 'PathIsSameRootW', CdStdCall);
 S.RegisterDelphiFunction(@PathIsUNC, 'PathIsUNC', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsUNCA, 'PathIsUNCA', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsUNCW, 'PathIsUNCW', CdStdCall);
 S.RegisterDelphiFunction(@PathIsNetworkPath, 'PathIsNetworkPath', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsNetworkPathA, 'PathIsNetworkPathA', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsNetworkPathW, 'PathIsNetworkPathW', CdStdCall);
 S.RegisterDelphiFunction(@PathIsUNCServer, 'PathIsUNCServer', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsUNCServerA, 'PathIsUNCServerA', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsUNCServerW, 'PathIsUNCServerW', CdStdCall);
 S.RegisterDelphiFunction(@PathIsUNCServerShare, 'PathIsUNCServerShare', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsUNCServerShareA, 'PathIsUNCServerShareA', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsUNCServerShareW, 'PathIsUNCServerShareW', CdStdCall);
 S.RegisterDelphiFunction(@PathIsContentType, 'PathIsContentType', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsContentTypeA, 'PathIsContentTypeA', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsContentTypeW, 'PathIsContentTypeW', CdStdCall);
 S.RegisterDelphiFunction(@PathIsURL, 'PathIsURL', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsURLA, 'PathIsURLA', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsURLW, 'PathIsURLW', CdStdCall);
 S.RegisterDelphiFunction(@PathMakePretty, 'PathMakePretty', CdStdCall);
 //S.RegisterDelphiFunction(@PathMakePrettyA, 'PathMakePrettyA', CdStdCall);
 //S.RegisterDelphiFunction(@PathMakePrettyW, 'PathMakePrettyW', CdStdCall);
 S.RegisterDelphiFunction(@PathMatchSpec, 'PathMatchSpec', CdStdCall);
 //S.RegisterDelphiFunction(@PathMatchSpecA, 'PathMatchSpecA', CdStdCall);
 //S.RegisterDelphiFunction(@PathMatchSpecW, 'PathMatchSpecW', CdStdCall);
 S.RegisterDelphiFunction(@PathParseIconLocation, 'PathParseIconLocation', CdStdCall);
 //S.RegisterDelphiFunction(@PathParseIconLocationA, 'PathParseIconLocationA', CdStdCall);
 //S.RegisterDelphiFunction(@PathParseIconLocationW, 'PathParseIconLocationW', CdStdCall);
 S.RegisterDelphiFunction(@PathQuoteSpaces, 'PathQuoteSpaces', CdStdCall);
 //S.RegisterDelphiFunction(@PathQuoteSpacesA, 'PathQuoteSpacesA', CdStdCall);
 //S.RegisterDelphiFunction(@PathQuoteSpacesW, 'PathQuoteSpacesW', CdStdCall);
 S.RegisterDelphiFunction(@PathRelativePathTo, 'PathRelativePathTo', CdStdCall);
 //S.RegisterDelphiFunction(@PathRelativePathToA, 'PathRelativePathToA', CdStdCall);
 //S.RegisterDelphiFunction(@PathRelativePathToW, 'PathRelativePathToW', CdStdCall);
 S.RegisterDelphiFunction(@PathRemoveArgs, 'PathRemoveArgs', CdStdCall);
 //S.RegisterDelphiFunction(@PathRemoveArgsA, 'PathRemoveArgsA', CdStdCall);
 //S.RegisterDelphiFunction(@PathRemoveArgsW, 'PathRemoveArgsW', CdStdCall);
 S.RegisterDelphiFunction(@PathRemoveBackslash, 'PathRemoveBackslash', CdStdCall);
 //S.RegisterDelphiFunction(@PathRemoveBackslashA, 'PathRemoveBackslashA', CdStdCall);
 //S.RegisterDelphiFunction(@PathRemoveBackslashW, 'PathRemoveBackslashW', CdStdCall);
 S.RegisterDelphiFunction(@PathRemoveBlanks, 'PathRemoveBlanks', CdStdCall);
 //S.RegisterDelphiFunction(@PathRemoveBlanksA, 'PathRemoveBlanksA', CdStdCall);
 //S.RegisterDelphiFunction(@PathRemoveBlanksW, 'PathRemoveBlanksW', CdStdCall);
 S.RegisterDelphiFunction(@PathRemoveExtension, 'PathRemoveExtension', CdStdCall);
 //S.RegisterDelphiFunction(@PathRemoveExtensionA, 'PathRemoveExtensionA', CdStdCall);
 //S.RegisterDelphiFunction(@PathRemoveExtensionW, 'PathRemoveExtensionW', CdStdCall);
 S.RegisterDelphiFunction(@PathRemoveFileSpec, 'PathRemoveFileSpec', CdStdCall);
 //7S.RegisterDelphiFunction(@PathRemoveFileSpecA, 'PathRemoveFileSpecA', CdStdCall);
 //S.RegisterDelphiFunction(@PathRemoveFileSpecW, 'PathRemoveFileSpecW', CdStdCall);
 S.RegisterDelphiFunction(@PathRenameExtension, 'PathRenameExtension', CdStdCall);
 //S.RegisterDelphiFunction(@PathRenameExtensionA, 'PathRenameExtensionA', CdStdCall);
 //S.RegisterDelphiFunction(@PathRenameExtensionW, 'PathRenameExtensionW', CdStdCall);
 S.RegisterDelphiFunction(@PathSearchAndQualify, 'PathSearchAndQualify', CdStdCall);
 //S.RegisterDelphiFunction(@PathSearchAndQualifyA, 'PathSearchAndQualifyA', CdStdCall);
 //S.RegisterDelphiFunction(@PathSearchAndQualifyW, 'PathSearchAndQualifyW', CdStdCall);
 S.RegisterDelphiFunction(@PathSetDlgItemPath, 'PathSetDlgItemPath', CdStdCall);
 //S.RegisterDelphiFunction(@PathSetDlgItemPathA, 'PathSetDlgItemPathA', CdStdCall);
 //S.RegisterDelphiFunction(@PathSetDlgItemPathW, 'PathSetDlgItemPathW', CdStdCall);
 S.RegisterDelphiFunction(@PathSkipRoot, 'PathSkipRoot', CdStdCall);
 //S.RegisterDelphiFunction(@PathSkipRootA, 'PathSkipRootA', CdStdCall);
 //S.RegisterDelphiFunction(@PathSkipRootW, 'PathSkipRootW', CdStdCall);
 S.RegisterDelphiFunction(@PathStripPath, 'PathStripPath', CdStdCall);
 //S.RegisterDelphiFunction(@PathStripPathA, 'PathStripPathA', CdStdCall);
 //S.RegisterDelphiFunction(@PathStripPathW, 'PathStripPathW', CdStdCall);
 S.RegisterDelphiFunction(@PathStripToRoot, 'PathStripToRoot', CdStdCall);
 //S.RegisterDelphiFunction(@PathStripToRootA, 'PathStripToRootA', CdStdCall);
 //S.RegisterDelphiFunction(@PathStripToRootW, 'PathStripToRootW', CdStdCall);
 S.RegisterDelphiFunction(@PathUnquoteSpaces, 'PathUnquoteSpaces', CdStdCall);
 //S.RegisterDelphiFunction(@PathUnquoteSpacesA, 'PathUnquoteSpacesA', CdStdCall);
 //S.RegisterDelphiFunction(@PathUnquoteSpacesW, 'PathUnquoteSpacesW', CdStdCall);
 S.RegisterDelphiFunction(@PathMakeSystemFolder, 'PathMakeSystemFolder', CdStdCall);
 //S.RegisterDelphiFunction(@PathMakeSystemFolderA, 'PathMakeSystemFolderA', CdStdCall);
 //S.RegisterDelphiFunction(@PathMakeSystemFolderW, 'PathMakeSystemFolderW', CdStdCall);
 S.RegisterDelphiFunction(@PathUnmakeSystemFolder, 'PathUnmakeSystemFolder', CdStdCall);
 //S.RegisterDelphiFunction(@PathUnmakeSystemFolderA, 'PathUnmakeSystemFolderA', CdStdCall);
 //S.RegisterDelphiFunction(@PathUnmakeSystemFolderW, 'PathUnmakeSystemFolderW', CdStdCall);
 S.RegisterDelphiFunction(@PathIsSystemFolder, 'PathIsSystemFolder', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsSystemFolderA, 'PathIsSystemFolderA', CdStdCall);
 //S.RegisterDelphiFunction(@PathIsSystemFolderW, 'PathIsSystemFolderW', CdStdCall);
 S.RegisterDelphiFunction(@PathUndecorate, 'PathUndecorate', CdStdCall);
 //S.RegisterDelphiFunction(@PathUndecorateA, 'PathUndecorateA', CdStdCall);
 //S.RegisterDelphiFunction(@PathUndecorateW, 'PathUndecorateW', CdStdCall);
 S.RegisterDelphiFunction(@PathUnExpandEnvStrings, 'PathUnExpandEnvStrings', CdStdCall);
 //S.RegisterDelphiFunction(@PathUnExpandEnvStringsA, 'PathUnExpandEnvStringsA', CdStdCall);
 //S.RegisterDelphiFunction(@PathUnExpandEnvStringsW, 'PathUnExpandEnvStringsW', CdStdCall);
 S.RegisterDelphiFunction(@UrlCompare, 'UrlCompare', CdStdCall);
 //S.RegisterDelphiFunction(@UrlCompareA, 'UrlCompareA', CdStdCall);
 //S.RegisterDelphiFunction(@UrlCompareW, 'UrlCompareW', CdStdCall);
 S.RegisterDelphiFunction(@UrlCombine, 'UrlCombine', CdStdCall);
 //S.RegisterDelphiFunction(@UrlCombineA, 'UrlCombineA', CdStdCall);
 //S.RegisterDelphiFunction(@UrlCombineW, 'UrlCombineW', CdStdCall);
 S.RegisterDelphiFunction(@UrlCanonicalize, 'UrlCanonicalize', CdStdCall);
 //S.RegisterDelphiFunction(@UrlCanonicalizeA, 'UrlCanonicalizeA', CdStdCall);
 //S.RegisterDelphiFunction(@UrlCanonicalizeW, 'UrlCanonicalizeW', CdStdCall);
 S.RegisterDelphiFunction(@UrlIsOpaque, 'UrlIsOpaque', CdStdCall);
 //S.RegisterDelphiFunction(@UrlIsOpaqueA, 'UrlIsOpaqueA', CdStdCall);
 //S.RegisterDelphiFunction(@UrlIsOpaqueW, 'UrlIsOpaqueW', CdStdCall);
 S.RegisterDelphiFunction(@UrlIsNoHistory, 'UrlIsNoHistory', CdStdCall);
 //S.RegisterDelphiFunction(@UrlIsNoHistoryA, 'UrlIsNoHistoryA', CdStdCall);
 //S.RegisterDelphiFunction(@UrlIsNoHistoryW, 'UrlIsNoHistoryW', CdStdCall);
 S.RegisterDelphiFunction(@UrlIsFileUrl, 'UrlIsFileUrl', cdRegister);
 //S.RegisterDelphiFunction(@UrlIsFileUrlA, 'UrlIsFileUrlA', cdRegister);
 //S.RegisterDelphiFunction(@UrlIsFileUrlW, 'UrlIsFileUrlW', cdRegister);
 S.RegisterDelphiFunction(@UrlIs, 'UrlIs', CdStdCall);
 //S.RegisterDelphiFunction(@UrlIsA, 'UrlIsA', CdStdCall);
 //S.RegisterDelphiFunction(@UrlIsW, 'UrlIsW', CdStdCall);
 S.RegisterDelphiFunction(@UrlGetLocation, 'UrlGetLocation', CdStdCall);
 //S.RegisterDelphiFunction(@UrlGetLocationA, 'UrlGetLocationA', CdStdCall);
 //S.RegisterDelphiFunction(@UrlGetLocationW, 'UrlGetLocationW', CdStdCall);
 S.RegisterDelphiFunction(@UrlUnescape, 'UrlUnescape', CdStdCall);
 //S.RegisterDelphiFunction(@UrlUnescapeA, 'UrlUnescapeA', CdStdCall);
 //S.RegisterDelphiFunction(@UrlUnescapeW, 'UrlUnescapeW', CdStdCall);
 S.RegisterDelphiFunction(@UrlEscape, 'UrlEscape', CdStdCall);
 //S.RegisterDelphiFunction(@UrlEscapeA, 'UrlEscapeA', CdStdCall);
 //S.RegisterDelphiFunction(@UrlEscapeW, 'UrlEscapeW', CdStdCall);
 S.RegisterDelphiFunction(@UrlCreateFromPath, 'UrlCreateFromPath', CdStdCall);
 //S.RegisterDelphiFunction(@UrlCreateFromPathA, 'UrlCreateFromPathA', CdStdCall);
 //S.RegisterDelphiFunction(@UrlCreateFromPathW, 'UrlCreateFromPathW', CdStdCall);
 S.RegisterDelphiFunction(@PathCreateFromUrl, 'PathCreateFromUrl', CdStdCall);
 //S.RegisterDelphiFunction(@PathCreateFromUrlA, 'PathCreateFromUrlA', CdStdCall);
 //S.RegisterDelphiFunction(@PathCreateFromUrlW, 'PathCreateFromUrlW', CdStdCall);
 S.RegisterDelphiFunction(@UrlHash, 'UrlHash', CdStdCall);
 //S.RegisterDelphiFunction(@UrlHashA, 'UrlHashA', CdStdCall);
 //S.RegisterDelphiFunction(@UrlHashW, 'UrlHashW', CdStdCall);
 S.RegisterDelphiFunction(@UrlGetPart, 'UrlGetPart', CdStdCall);
 //S.RegisterDelphiFunction(@UrlGetPartA, 'UrlGetPartA', CdStdCall);
 //S.RegisterDelphiFunction(@UrlGetPartW, 'UrlGetPartW', CdStdCall);
 S.RegisterDelphiFunction(@UrlApplyScheme, 'UrlApplyScheme', CdStdCall);
 //S.RegisterDelphiFunction(@UrlApplySchemeA, 'UrlApplySchemeA', CdStdCall);
 //S.RegisterDelphiFunction(@UrlApplySchemeW, 'UrlApplySchemeW', CdStdCall);
 S.RegisterDelphiFunction(@HashData, 'HashData', CdStdCall);
 S.RegisterDelphiFunction(@UrlEscapeSpaces, 'UrlEscapeSpaces', CdStdCall);
 //S.RegisterDelphiFunction(@UrlEscapeSpacesA, 'UrlEscapeSpacesA', CdStdCall);
 //S.RegisterDelphiFunction(@UrlEscapeSpacesW, 'UrlEscapeSpacesW', CdStdCall);
 S.RegisterDelphiFunction(@UrlUnescapeInPlace, 'UrlUnescapeInPlace', cdRegister);
 //S.RegisterDelphiFunction(@UrlUnescapeInPlaceA, 'UrlUnescapeInPlaceA', cdRegister);
 //S.RegisterDelphiFunction(@UrlUnescapeInPlaceW, 'UrlUnescapeInPlaceW', cdRegister);
 //S.RegisterDelphiFunction(@SHDeleteEmptyKey, 'SHDeleteEmptyKey', CdStdCall);
 //S.RegisterDelphiFunction(@SHDeleteEmptyKeyA, 'SHDeleteEmptyKeyA', CdStdCall);
 //S.RegisterDelphiFunction(@SHDeleteEmptyKeyW, 'SHDeleteEmptyKeyW', CdStdCall);
 S.RegisterDelphiFunction(@SHDeleteKey, 'SHDeleteKey', CdStdCall);
 //S.RegisterDelphiFunction(@SHDeleteKeyA, 'SHDeleteKeyA', CdStdCall);
 //S.RegisterDelphiFunction(@SHDeleteKeyW, 'SHDeleteKeyW', CdStdCall);
 S.RegisterDelphiFunction(@SHDeleteValue, 'SHDeleteValue', CdStdCall);
 //S.RegisterDelphiFunction(@SHDeleteValueA, 'SHDeleteValueA', CdStdCall);
 //S.RegisterDelphiFunction(@SHDeleteValueW, 'SHDeleteValueW', CdStdCall);
 S.RegisterDelphiFunction(@SHGetValue, 'SHGetValue', CdStdCall);
 //S.RegisterDelphiFunction(@SHGetValueA, 'SHGetValueA', CdStdCall);
 //S.RegisterDelphiFunction(@SHGetValueW, 'SHGetValueW', CdStdCall);
 S.RegisterDelphiFunction(@SHSetValue, 'SHSetValue', CdStdCall);
 //S.RegisterDelphiFunction(@SHSetValueA, 'SHSetValueA', CdStdCall);
 //S.RegisterDelphiFunction(@SHSetValueW, 'SHSetValueW', CdStdCall);
 S.RegisterDelphiFunction(@SHQueryValueEx, 'SHQueryValueEx', CdStdCall);
 //S.RegisterDelphiFunction(@SHQueryValueExA, 'SHQueryValueExA', CdStdCall);
 //S.RegisterDelphiFunction(@SHQueryValueExW, 'SHQueryValueExW', CdStdCall);
 S.RegisterDelphiFunction(@SHEnumKeyEx, 'SHEnumKeyEx', CdStdCall);
 //S.RegisterDelphiFunction(@SHEnumKeyExA, 'SHEnumKeyExA', CdStdCall);
 //S.RegisterDelphiFunction(@SHEnumKeyExW, 'SHEnumKeyExW', CdStdCall);
 S.RegisterDelphiFunction(@SHEnumValue, 'SHEnumValue', CdStdCall);
 //S.RegisterDelphiFunction(@SHEnumValueA, 'SHEnumValueA', CdStdCall);
 //S.RegisterDelphiFunction(@SHEnumValueW, 'SHEnumValueW', CdStdCall);
 S.RegisterDelphiFunction(@SHQueryInfoKey, 'SHQueryInfoKey', CdStdCall);
 //S.RegisterDelphiFunction(@SHQueryInfoKeyA, 'SHQueryInfoKeyA', CdStdCall);
 //S.RegisterDelphiFunction(@SHQueryInfoKeyW, 'SHQueryInfoKeyW', CdStdCall);
 S.RegisterDelphiFunction(@SHCopyKey, 'SHCopyKey', CdStdCall);
 //S.RegisterDelphiFunction(@SHCopyKeyA, 'SHCopyKeyA', CdStdCall);
 //S.RegisterDelphiFunction(@SHCopyKeyW, 'SHCopyKeyW', CdStdCall);
 S.RegisterDelphiFunction(@SHRegGetPath, 'SHRegGetPath', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegGetPathA, 'SHRegGetPathA', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegGetPathW, 'SHRegGetPathW', CdStdCall);
 S.RegisterDelphiFunction(@SHRegSetPath, 'SHRegSetPath', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegSetPathA, 'SHRegSetPathA', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegSetPathW, 'SHRegSetPathW', CdStdCall);
 S.RegisterDelphiFunction(@SHRegCreateUSKey, 'SHRegCreateUSKey', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegCreateUSKeyA, 'SHRegCreateUSKeyA', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegCreateUSKeyW, 'SHRegCreateUSKeyW', CdStdCall);
 S.RegisterDelphiFunction(@SHRegOpenUSKey, 'SHRegOpenUSKey', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegOpenUSKeyA, 'SHRegOpenUSKeyA', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegOpenUSKeyW, 'SHRegOpenUSKeyW', CdStdCall);
 S.RegisterDelphiFunction(@SHRegQueryUSValue, 'SHRegQueryUSValue', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegQueryUSValueA, 'SHRegQueryUSValueA', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegQueryUSValueW, 'SHRegQueryUSValueW', CdStdCall);
 S.RegisterDelphiFunction(@SHRegWriteUSValue, 'SHRegWriteUSValue', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegWriteUSValueA, 'SHRegWriteUSValueA', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegWriteUSValueW, 'SHRegWriteUSValueW', CdStdCall);
 S.RegisterDelphiFunction(@SHRegDeleteUSValue, 'SHRegDeleteUSValue', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegDeleteUSValueA, 'SHRegDeleteUSValueA', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegDeleteUSValueW, 'SHRegDeleteUSValueW', CdStdCall);
 S.RegisterDelphiFunction(@SHRegDeleteEmptyUSKey, 'SHRegDeleteEmptyUSKey', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegDeleteEmptyUSKeyA, 'SHRegDeleteEmptyUSKeyA', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegDeleteEmptyUSKeyW, 'SHRegDeleteEmptyUSKeyW', CdStdCall);
 S.RegisterDelphiFunction(@SHRegEnumUSKey, 'SHRegEnumUSKey', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegEnumUSKeyA, 'SHRegEnumUSKeyA', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegEnumUSKeyW, 'SHRegEnumUSKeyW', CdStdCall);
 S.RegisterDelphiFunction(@SHRegEnumUSValue, 'SHRegEnumUSValue', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegEnumUSValueA, 'SHRegEnumUSValueA', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegEnumUSValueW, 'SHRegEnumUSValueW', CdStdCall);
 S.RegisterDelphiFunction(@SHRegQueryInfoUSKey, 'SHRegQueryInfoUSKey', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegQueryInfoUSKeyA, 'SHRegQueryInfoUSKeyA', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegQueryInfoUSKeyW, 'SHRegQueryInfoUSKeyW', CdStdCall);
 S.RegisterDelphiFunction(@SHRegCloseUSKey, 'SHRegCloseUSKey', CdStdCall);
 S.RegisterDelphiFunction(@SHRegGetUSValue, 'SHRegGetUSValue', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegGetUSValueA, 'SHRegGetUSValueA', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegGetUSValueW, 'SHRegGetUSValueW', CdStdCall);
 S.RegisterDelphiFunction(@SHRegSetUSValue, 'SHRegSetUSValue', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegSetUSValueA, 'SHRegSetUSValueA', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegSetUSValueW, 'SHRegSetUSValueW', CdStdCall);
 S.RegisterDelphiFunction(@SHRegGetBoolUSValue, 'SHRegGetBoolUSValue', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegGetBoolUSValueA, 'SHRegGetBoolUSValueA', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegGetBoolUSValueW, 'SHRegGetBoolUSValueW', CdStdCall);
 //S.RegisterDelphiFunction(@SHRegGetIntW, 'SHRegGetIntW', CdStdCall);
 S.RegisterDelphiFunction(@AssocCreate, 'AssocCreate', CdStdCall);
 S.RegisterDelphiFunction(@AssocQueryString, 'AssocQueryString', CdStdCall);
 //S.RegisterDelphiFunction(@AssocQueryStringA, 'AssocQueryStringA', CdStdCall);
 //S.RegisterDelphiFunction(@AssocQueryStringW, 'AssocQueryStringW', CdStdCall);
 S.RegisterDelphiFunction(@AssocQueryStringByKey, 'AssocQueryStringByKey', CdStdCall);
 //S.RegisterDelphiFunction(@AssocQueryStringByKeyA, 'AssocQueryStringByKeyA', CdStdCall);
 //S.RegisterDelphiFunction(@AssocQueryStringByKeyW, 'AssocQueryStringByKeyW', CdStdCall);
 S.RegisterDelphiFunction(@AssocQueryKey, 'AssocQueryKey', CdStdCall);
 //S.RegisterDelphiFunction(@AssocQueryKeyA, 'AssocQueryKeyA', CdStdCall);
 //S.RegisterDelphiFunction(@AssocQueryKeyW, 'AssocQueryKeyW', CdStdCall);
 S.RegisterDelphiFunction(@SHOpenRegStream, 'SHOpenRegStream', CdStdCall);
 //S.RegisterDelphiFunction(@SHOpenRegStreamA, 'SHOpenRegStreamA', CdStdCall);
 //S.RegisterDelphiFunction(@SHOpenRegStreamW, 'SHOpenRegStreamW', CdStdCall);
 S.RegisterDelphiFunction(@SHOpenRegStream2, 'SHOpenRegStream2', CdStdCall);
 //S.RegisterDelphiFunction(@SHOpenRegStream2A, 'SHOpenRegStream2A', CdStdCall);
 //S.RegisterDelphiFunction(@SHOpenRegStream2W, 'SHOpenRegStream2W', CdStdCall);
 S.RegisterDelphiFunction(@SHCreateStreamOnFile, 'SHCreateStreamOnFile', CdStdCall);
 //S.RegisterDelphiFunction(@SHCreateStreamOnFileA, 'SHCreateStreamOnFileA', CdStdCall);
 //S.RegisterDelphiFunction(@SHCreateStreamOnFileW, 'SHCreateStreamOnFileW', CdStdCall);
 S.RegisterDelphiFunction(@SHAutoComplete, 'SHAutoComplete', CdStdCall);
 S.RegisterDelphiFunction(@SHSetThreadRef, 'SHSetThreadRef', CdStdCall);
 S.RegisterDelphiFunction(@SHGetThreadRef, 'SHGetThreadRef', CdStdCall);
 S.RegisterDelphiFunction(@SHSkipJunction, 'SHSkipJunction', CdStdCall);
 S.RegisterDelphiFunction(@SHCreateThread, 'SHCreateThread', CdStdCall);
 S.RegisterDelphiFunction(@SHCreateShellPalette, 'SHCreateShellPalette', CdStdCall);
 S.RegisterDelphiFunction(@ColorRGBToHLS, 'ColorRGBToHLS', CdStdCall);
 S.RegisterDelphiFunction(@ColorHLSToRGB, 'ColorHLSToRGB', CdStdCall);
 S.RegisterDelphiFunction(@ColorAdjustLuma, 'ColorAdjustLuma', CdStdCall);
 S.RegisterDelphiFunction(@MAKEDLLVERULL, 'MAKEDLLVERULL', cdRegister);
end;



{ TPSImport_ShLwApi }
(*----------------------------------------------------------------------------*)
procedure TPSImport_ShLwApi.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_ShLwApi(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_ShLwApi.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  //RIRegister_ShLwApi(ri);
  RIRegister_ShLwApi_Routines(CompExec.Exec); // comment it if no routines
end;
(*----------------------------------------------------------------------------*)
 
 
end.
