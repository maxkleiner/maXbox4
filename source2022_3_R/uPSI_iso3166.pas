unit uPSI_iso3166;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 

 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_iso3166 = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_iso3166(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_iso3166_Routines(S: TPSExec);

procedure Register;

implementation


uses
   dpautils
  ,vpautils
  ,fpautils
  ,gpautils
  ,tpautils
  ,utils
  ,iso3166
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_iso3166]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_iso3166(CL: TPSPascalCompiler);
begin
 CL.AddConstantN('BOM_UTF8','String').SetString( #$EF#$BB#$BF);
 CL.AddConstantN('BOM_UTF32_BE','String').SetString( #00#00#$FE#$FF);
 CL.AddConstantN('BOM_UTF32_LE','String').SetString( #$FF#$FE#00#00);
 CL.AddConstantN('BOM_UTF16_BE','String').SetString( #$FE#$FF);
 CL.AddConstantN('BOM_UTF16_LE','String').SetString( #$FF#$FE);
 CL.AddDelphiFunction('Function isvalidcountrycode( s : shortstring) : boolean');
 CL.AddDelphiFunction('Function getcountryname_fr( s : shortstring) : shortstring');
 CL.AddDelphiFunction('Function getcountryname_en( s : shortstring) : shortstring');
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_iso3166_Routines(S: TPSExec);
begin
 S.RegisterDelphiFunction(@isvalidcountrycode, 'isvalidcountrycode', cdRegister);
 S.RegisterDelphiFunction(@getcountryname_fr, 'getcountryname_fr', cdRegister);
 S.RegisterDelphiFunction(@getcountryname_en, 'getcountryname_en', cdRegister);
end;

 
 
{ TPSImport_iso3166 }
(*----------------------------------------------------------------------------*)
procedure TPSImport_iso3166.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_iso3166(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_iso3166.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_iso3166_Routines(CompExec.Exec); // comment it if no routines
end;
(*----------------------------------------------------------------------------*)
 
 
end.
