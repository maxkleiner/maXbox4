unit uPSI_unicode;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 

 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_unicode = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_unicode(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_unicode_Routines(S: TPSExec);

procedure Register;

implementation


uses
   tpautils
  ,vpautils
  ,dpautils
  ,gpautils
  ,fpautils
  ,utils
  ,unicode
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_unicode]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_unicode(CL: TPSPascalCompiler);
begin
 CL.AddConstantN('MAX_STRING_LENGTH','LongInt').SetInt( 2048);
  CL.AddTypeS('utf8char', 'char');
  CL.AddTypeS('putf8char', 'pchar');
  CL.AddTypeS('utf16char', 'word');
  CL.AddTypeS('ucs4char', 'longword');
  CL.AddTypeS('pucs4char', '^ucs4char // will not work');
  CL.AddTypeS('ucs2char', 'word');
  CL.AddTypeS('pucs2char', '^ucs2char // will not work');
  CL.AddTypeS('utf8string', 'string');
  CL.AddTypeS('putf8shortstring', '^shortstring // will not work');
 CL.AddConstantN('UNICODE_ERR_OK','LongInt').SetInt( 0);
 CL.AddConstantN('UNICODE_ERR_SOURCEILLEGAL','LongInt').SetInt( - 1);
 CL.AddConstantN('UNICODE_ERR_LENGTH_EXCEED','LongInt').SetInt( - 2);
 CL.AddConstantN('UNICODE_ERR_INCOMPLETE_CONVERSION','LongInt').SetInt( - 3);
 CL.AddConstantN('UNICODE_ERR_NOTFOUND','LongInt').SetInt( - 4);
 CL.AddConstantN('BOM_UTF8','String').SetString( #$EF#$BB#$BF);
 CL.AddConstantN('BOM_UTF32_BE','String').SetString( #00#00#$FE#$FF);
 CL.AddConstantN('BOM_UTF32_LE','String').SetString( #$FF#$FE#00#00);
 CL.AddConstantN('BOM_UTF16_BE','String').SetString( #$FE#$FF);
 CL.AddConstantN('BOM_UTF16_LE','String').SetString( #$FF#$FE);
  CL.AddTypeS('pucs4strarray', '^ucs4strarray // will not work');
  CL.AddTypeS('pucs2strarray', '^ucs2strarray // will not work');
 CL.AddDelphiFunction('Function ucs4_length( const s : array of ucs4char) : integer');
 CL.AddDelphiFunction('Procedure ucs4_setlength( var s : array of ucs4char; l : integer)');
 CL.AddDelphiFunction('Function ucs4_iswhitespace( c : ucs4char) : boolean');
 CL.AddDelphiFunction('Function ucs4_ishexdigit( c : ucs4char) : boolean');
 CL.AddDelphiFunction('Function ucs4_isdigit( c : ucs4char) : boolean');
 CL.AddDelphiFunction('Function ucs4_isterminal( c : ucs4char) : boolean');
 CL.AddDelphiFunction('Function ucs4_upcase( c : ucs4char) : ucs4char');
 CL.AddDelphiFunction('Function ucs4_lowcase( c : ucs4char) : ucs4char');
 CL.AddDelphiFunction('Procedure ucs4_trimleft( var s : ucs4string)');
 CL.AddDelphiFunction('Procedure ucs4_trimright( var s : ucs4string)');
 CL.AddDelphiFunction('Procedure ucs4_trim( var s : ucs4string)');
 CL.AddDelphiFunction('Procedure ucs4_copy( var resultstr : ucs4string; const s : ucs4string; index : integer; count : integer)');
 CL.AddDelphiFunction('Procedure ucs4_delete( var s : ucs4string; index : integer; count : integer)');
 CL.AddDelphiFunction('Procedure ucs4_concat( var resultstr : ucs4string; const s1 : ucs4string; const s2 : array of ucs4char)');
 CL.AddDelphiFunction('Procedure ucs4_removeaccents( var resultstr : ucs4string; s2 : ucs4string)');
 CL.AddDelphiFunction('Function ucs4_getbasechar( c : ucs4char) : ucs4char');
 CL.AddDelphiFunction('Procedure ucs4_concatascii( var resultstr : ucs4string; const s1 : ucs4string; const s2 : string)');
 CL.AddDelphiFunction('Function ucs4_posascii( const substr : string; const s : ucs4string) : integer');
 CL.AddDelphiFunction('Function ucs4_equalascii( const s1 : array of ucs4char; s2 : string) : boolean');
 CL.AddDelphiFunction('Function ucs4_pos( const substr : ucs4string; const s : ucs4string) : integer');
 CL.AddDelphiFunction('Function ucs4_equal( const s1, s2 : ucs4string) : boolean');
 CL.AddDelphiFunction('Function ucs4_getNumericValue( c : ucs4char) : longint');
 CL.AddDelphiFunction('Function ucs4_isvalid( c : ucs4char) : boolean');
 CL.AddDelphiFunction('Function ucs4_issupported( s : string) : boolean');
 CL.AddDelphiFunction('Function ucs4_converttoiso8859_1( const s : ucs4string) : string');
 CL.AddDelphiFunction('Function ucs4_converttoutf8( const src : ucs4string) : utf8string');
 CL.AddDelphiFunction('Function ucs4strlen( str : pucs4char) : integer');
 CL.AddDelphiFunction('Procedure ucs4strpas( str : pucs4char; var res : ucs4string)');
 CL.AddDelphiFunction('Function ucs4strpastoISO8859_1( str : pucs4char) : string');
 CL.AddDelphiFunction('Function ucs4strpastoASCII( str : pucs4char) : string');
 CL.AddDelphiFunction('Function ucs4strpastoUTF8( str : pucs4char) : utf8string');
 CL.AddDelphiFunction('Function ucs4strpcopy( dest : pucs4char; source : ucs4string) : pucs4char');
 CL.AddDelphiFunction('Function ucs4strnewstr( str : string; srctype : string) : pucs4char');
 CL.AddDelphiFunction('Function ucs4strnew( str : pchar; srctype : string) : pucs4char');
 CL.AddDelphiFunction('Function ucs4strnewucs4( src : pucs4char) : pucs4char');
 CL.AddDelphiFunction('Function ucs4strnewucs2( str : pucs2char) : pucs4char');
 CL.AddDelphiFunction('Function ucs4strdispose( str : pucs4char) : pucs4char');
 CL.AddDelphiFunction('Function ucs4strposISO8859_1( S : pucs4char; Str2 : PChar) : pucs4char');
 CL.AddDelphiFunction('Function ucs4strtrim( const p : pucs4char) : pucs4char');
 CL.AddDelphiFunction('Function ucs4strfill( var p : pucs4char; count : integer; value : ucs4char) : pucs4char');
 CL.AddDelphiFunction('Procedure ucs4strcheck( p : pucs4char; maxcount : integer; value : ucs4char)');
 CL.AddDelphiFunction('Function ucs2_length( const s : array of ucs2char) : integer');
 CL.AddDelphiFunction('Procedure ucs2_setlength( var s : array of ucs2char; l : integer)');
 CL.AddDelphiFunction('Function ucs2_isvalid( ch : ucs2char) : boolean');
 CL.AddDelphiFunction('Function ucs2_upcase( c : ucs2char) : ucs2char');
 CL.AddDelphiFunction('Function ucs2strlcopyucs4( src : pucs2char; dst : pucs4char; maxlen : integer) : pucs4char');
 CL.AddDelphiFunction('Function ucs2strlen( str : pucs2char) : integer');
 CL.AddDelphiFunction('Function ucs2strnew( src : pucs4char) : pucs2char');
 CL.AddDelphiFunction('Function ucs2strdispose( str : pucs2char) : pucs2char');
 CL.AddDelphiFunction('Function utf8strnew( src : pucs4char) : pchar');
 CL.AddDelphiFunction('Function utf8strlen( s : putf8char) : integer');
 CL.AddDelphiFunction('Function utf8strnewutf8( src : pchar) : pchar');
 CL.AddDelphiFunction('Function utf8strdispose( p : pchar) : pchar');
 CL.AddDelphiFunction('Function utf8islegal( p : pchar) : boolean');
 CL.AddDelphiFunction('Function utf8strlcopyucs4( src : pchar; dst : pucs4char; maxlen : integer) : pucs4char');
 CL.AddDelphiFunction('Function utf8strpastoISO8859_1( src : pchar) : string');
 CL.AddDelphiFunction('Function utf8strpastoASCII( src : pchar) : string');
 CL.AddDelphiFunction('Function utf8strpastostring( src : pchar; desttype : string) : string');
 CL.AddDelphiFunction('Function utf8strpas( src : pchar) : string');
 CL.AddDelphiFunction('Function utf8strnewstr( str : utf8string) : putf8char');
 CL.AddDelphiFunction('Procedure utf8stringdispose( var p : putf8shortstring)');
 CL.AddDelphiFunction('Function utf8stringdup( const s : string) : putf8shortstring');
 CL.AddDelphiFunction('Function utf8_sizeencoding( c : utf8char) : integer');
 CL.AddDelphiFunction('Function utf16_length( const s : array of utf16char) : integer');
 CL.AddDelphiFunction('Function utf8_length( const s : utf8string) : integer');
 CL.AddDelphiFunction('Function utf8_islegal( const s : utf8string) : boolean');
 CL.AddDelphiFunction('Procedure utf8_setlength( var s : utf8string; l : integer)');
 CL.AddDelphiFunction('Function asciistrpas( src : pchar) : string');
 CL.AddDelphiFunction('Function asciistrnew( src : pchar) : pchar');
 CL.AddDelphiFunction('Function asciistrnewstr( const str : string) : pchar');
 CL.AddDelphiFunction('Function ansistrpas( src : pchar) : string');
 CL.AddDelphiFunction('Function ansistrnew( src : pchar) : pchar');
 CL.AddDelphiFunction('Function ansistrnewstr( const str : string) : pchar');
 CL.AddDelphiFunction('Function ansistrdispose( p : pchar) : pchar');
 CL.AddDelphiFunction('Function utf16_sizeencoding( c : utf16char) : integer');
 CL.AddDelphiFunction('Procedure utf16_setlength( var s : array of utf16char; l : integer)');
 CL.AddDelphiFunction('Function convertUCS4toUTF8( s : array of ucs4char; var outstr : utf8string) : integer');
 CL.AddDelphiFunction('Function ConvertFromUCS4( const source : ucs4string; var dest : string; desttype : string) : integer');
 CL.AddDelphiFunction('Function ConvertToUCS4( source : string; var dest : ucs4string; srctype : string) : integer');
 CL.AddDelphiFunction('Function ConvertUTF16ToUCS4( src : utf16string; var dst : ucs4string) : integer');
 CL.AddDelphiFunction('Function ConvertUCS4toUTF16( src : array of ucs4char; var dest : utf16string) : integer');
 CL.AddDelphiFunction('Function ConvertUTF8ToUCS4( src : utf8string; var dst : ucs4string) : integer');
 CL.AddDelphiFunction('Function ConvertUCS4ToUCS2( src : array of ucs4char; var dst : ucs2string) : integer');
 CL.AddDelphiFunction('Function ConvertUCS2ToUCS4( src : array of ucs2char; var dst : ucs4string) : integer');
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_unicode_Routines(S: TPSExec);
begin
 S.RegisterDelphiFunction(@ucs4_length, 'ucs4_length', cdRegister);
 S.RegisterDelphiFunction(@ucs4_setlength, 'ucs4_setlength', cdRegister);
 S.RegisterDelphiFunction(@ucs4_iswhitespace, 'ucs4_iswhitespace', cdRegister);
 S.RegisterDelphiFunction(@ucs4_ishexdigit, 'ucs4_ishexdigit', cdRegister);
 S.RegisterDelphiFunction(@ucs4_isdigit, 'ucs4_isdigit', cdRegister);
 S.RegisterDelphiFunction(@ucs4_isterminal, 'ucs4_isterminal', cdRegister);
 S.RegisterDelphiFunction(@ucs4_upcase, 'ucs4_upcase', cdRegister);
 S.RegisterDelphiFunction(@ucs4_lowcase, 'ucs4_lowcase', cdRegister);
 S.RegisterDelphiFunction(@ucs4_trimleft, 'ucs4_trimleft', cdRegister);
 S.RegisterDelphiFunction(@ucs4_trimright, 'ucs4_trimright', cdRegister);
 S.RegisterDelphiFunction(@ucs4_trim, 'ucs4_trim', cdRegister);
 S.RegisterDelphiFunction(@ucs4_copy, 'ucs4_copy', cdRegister);
 S.RegisterDelphiFunction(@ucs4_delete, 'ucs4_delete', cdRegister);
 S.RegisterDelphiFunction(@ucs4_concat, 'ucs4_concat', cdRegister);
 S.RegisterDelphiFunction(@ucs4_removeaccents, 'ucs4_removeaccents', cdRegister);
 S.RegisterDelphiFunction(@ucs4_getbasechar, 'ucs4_getbasechar', cdRegister);
 S.RegisterDelphiFunction(@ucs4_concatascii, 'ucs4_concatascii', cdRegister);
 S.RegisterDelphiFunction(@ucs4_posascii, 'ucs4_posascii', cdRegister);
 S.RegisterDelphiFunction(@ucs4_equalascii, 'ucs4_equalascii', cdRegister);
 S.RegisterDelphiFunction(@ucs4_pos, 'ucs4_pos', cdRegister);
 S.RegisterDelphiFunction(@ucs4_equal, 'ucs4_equal', cdRegister);
 S.RegisterDelphiFunction(@ucs4_getNumericValue, 'ucs4_getNumericValue', cdRegister);
 S.RegisterDelphiFunction(@ucs4_isvalid, 'ucs4_isvalid', cdRegister);
 S.RegisterDelphiFunction(@ucs4_issupported, 'ucs4_issupported', cdRegister);
 S.RegisterDelphiFunction(@ucs4_converttoiso8859_1, 'ucs4_converttoiso8859_1', cdRegister);
 S.RegisterDelphiFunction(@ucs4_converttoutf8, 'ucs4_converttoutf8', cdRegister);
 S.RegisterDelphiFunction(@ucs4strlen, 'ucs4strlen', cdRegister);
 S.RegisterDelphiFunction(@ucs4strpas, 'ucs4strpas', cdRegister);
 S.RegisterDelphiFunction(@ucs4strpastoISO8859_1, 'ucs4strpastoISO8859_1', cdRegister);
 S.RegisterDelphiFunction(@ucs4strpastoASCII, 'ucs4strpastoASCII', cdRegister);
 S.RegisterDelphiFunction(@ucs4strpastoUTF8, 'ucs4strpastoUTF8', cdRegister);
 S.RegisterDelphiFunction(@ucs4strpcopy, 'ucs4strpcopy', cdRegister);
 S.RegisterDelphiFunction(@ucs4strnewstr, 'ucs4strnewstr', cdRegister);
 S.RegisterDelphiFunction(@ucs4strnew, 'ucs4strnew', cdRegister);
 S.RegisterDelphiFunction(@ucs4strnewucs4, 'ucs4strnewucs4', cdRegister);
 S.RegisterDelphiFunction(@ucs4strnewucs2, 'ucs4strnewucs2', cdRegister);
 S.RegisterDelphiFunction(@ucs4strdispose, 'ucs4strdispose', cdRegister);
 S.RegisterDelphiFunction(@ucs4strposISO8859_1, 'ucs4strposISO8859_1', cdRegister);
 S.RegisterDelphiFunction(@ucs4strtrim, 'ucs4strtrim', cdRegister);
 S.RegisterDelphiFunction(@ucs4strfill, 'ucs4strfill', cdRegister);
 S.RegisterDelphiFunction(@ucs4strcheck, 'ucs4strcheck', cdRegister);
 S.RegisterDelphiFunction(@ucs2_length, 'ucs2_length', cdRegister);
 S.RegisterDelphiFunction(@ucs2_setlength, 'ucs2_setlength', cdRegister);
 S.RegisterDelphiFunction(@ucs2_isvalid, 'ucs2_isvalid', cdRegister);
 S.RegisterDelphiFunction(@ucs2_upcase, 'ucs2_upcase', cdRegister);
 S.RegisterDelphiFunction(@ucs2strlcopyucs4, 'ucs2strlcopyucs4', cdRegister);
 S.RegisterDelphiFunction(@ucs2strlen, 'ucs2strlen', cdRegister);
 S.RegisterDelphiFunction(@ucs2strnew, 'ucs2strnew', cdRegister);
 S.RegisterDelphiFunction(@ucs2strdispose, 'ucs2strdispose', cdRegister);
 S.RegisterDelphiFunction(@utf8strnew, 'utf8strnew', cdRegister);
 S.RegisterDelphiFunction(@utf8strlen, 'utf8strlen', cdRegister);
 S.RegisterDelphiFunction(@utf8strnewutf8, 'utf8strnewutf8', cdRegister);
 S.RegisterDelphiFunction(@utf8strdispose, 'utf8strdispose', cdRegister);
 S.RegisterDelphiFunction(@utf8islegal, 'utf8islegal', cdRegister);
 S.RegisterDelphiFunction(@utf8strlcopyucs4, 'utf8strlcopyucs4', cdRegister);
 S.RegisterDelphiFunction(@utf8strpastoISO8859_1, 'utf8strpastoISO8859_1', cdRegister);
 S.RegisterDelphiFunction(@utf8strpastoASCII, 'utf8strpastoASCII', cdRegister);
 S.RegisterDelphiFunction(@utf8strpastostring, 'utf8strpastostring', cdRegister);
 S.RegisterDelphiFunction(@utf8strpas, 'utf8strpas', cdRegister);
 S.RegisterDelphiFunction(@utf8strnewstr, 'utf8strnewstr', cdRegister);
 S.RegisterDelphiFunction(@utf8stringdispose, 'utf8stringdispose', cdRegister);
 S.RegisterDelphiFunction(@utf8stringdup, 'utf8stringdup', cdRegister);
 S.RegisterDelphiFunction(@utf8_sizeencoding, 'utf8_sizeencoding', cdRegister);
 S.RegisterDelphiFunction(@utf16_length, 'utf16_length', cdRegister);
 S.RegisterDelphiFunction(@utf8_length, 'utf8_length', cdRegister);
 S.RegisterDelphiFunction(@utf8_islegal, 'utf8_islegal', cdRegister);
 S.RegisterDelphiFunction(@utf8_setlength, 'utf8_setlength', cdRegister);
 S.RegisterDelphiFunction(@asciistrpas, 'asciistrpas', cdRegister);
 S.RegisterDelphiFunction(@asciistrnew, 'asciistrnew', cdRegister);
 S.RegisterDelphiFunction(@asciistrnewstr, 'asciistrnewstr', cdRegister);
 S.RegisterDelphiFunction(@ansistrpas, 'ansistrpas', cdRegister);
 S.RegisterDelphiFunction(@ansistrnew, 'ansistrnew', cdRegister);
 S.RegisterDelphiFunction(@ansistrnewstr, 'ansistrnewstr', cdRegister);
 S.RegisterDelphiFunction(@ansistrdispose, 'ansistrdispose', cdRegister);
 S.RegisterDelphiFunction(@utf16_sizeencoding, 'utf16_sizeencoding', cdRegister);
 S.RegisterDelphiFunction(@utf16_setlength, 'utf16_setlength', cdRegister);
 S.RegisterDelphiFunction(@convertUCS4toUTF8, 'convertUCS4toUTF8', cdRegister);
 S.RegisterDelphiFunction(@ConvertFromUCS4, 'ConvertFromUCS4', cdRegister);
 S.RegisterDelphiFunction(@ConvertToUCS4, 'ConvertToUCS4', cdRegister);
 S.RegisterDelphiFunction(@ConvertUTF16ToUCS4, 'ConvertUTF16ToUCS4', cdRegister);
 S.RegisterDelphiFunction(@ConvertUCS4toUTF16, 'ConvertUCS4toUTF16', cdRegister);
 S.RegisterDelphiFunction(@ConvertUTF8ToUCS4, 'ConvertUTF8ToUCS4', cdRegister);
 S.RegisterDelphiFunction(@ConvertUCS4ToUCS2, 'ConvertUCS4ToUCS2', cdRegister);
 S.RegisterDelphiFunction(@ConvertUCS2ToUCS4, 'ConvertUCS2ToUCS4', cdRegister);
end;

 
 
{ TPSImport_unicode }
(*----------------------------------------------------------------------------*)
procedure TPSImport_unicode.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_unicode(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_unicode.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_unicode_Routines(CompExec.Exec); // comment it if no routines
end;
(*----------------------------------------------------------------------------*)
 
 
end.
