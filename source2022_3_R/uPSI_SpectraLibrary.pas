unit uPSI_SpectraLibrary;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 

 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_SpectraLibrary = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_SpectraLibrary(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_SpectraLibrary_Routines(S: TPSExec);

procedure Register;

implementation


uses
   SpectraLibrary
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_SpectraLibrary]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_SpectraLibrary(CL: TPSPascalCompiler);
begin
  CL.AddTypeS('Nanometers', 'Double');
 CL.AddConstantN('WavelengthMinimum','LongInt').SetInt( 380);
 CL.AddConstantN('WavelengthMaximum','LongInt').SetInt( 780);
 CL.AddDelphiFunction('Procedure WavelengthToRGB( const Wavelength : Nanometers; var R, G, B : BYTE)');
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_SpectraLibrary_Routines(S: TPSExec);
begin
 S.RegisterDelphiFunction(@WavelengthToRGB, 'WavelengthToRGB', cdRegister);
end;

 
 
{ TPSImport_SpectraLibrary }
(*----------------------------------------------------------------------------*)
procedure TPSImport_SpectraLibrary.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_SpectraLibrary(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_SpectraLibrary.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_SpectraLibrary_Routines(CompExec.Exec); // comment it if no routines
end;
(*----------------------------------------------------------------------------*)
 
 
end.
