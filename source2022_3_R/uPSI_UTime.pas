unit uPSI_UTime;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 

 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_UTime = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_UTime(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_UTime_Routines(S: TPSExec);

procedure Register;

implementation


uses
   Windows
  ,UTime
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_UTime]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_UTime(CL: TPSPascalCompiler);
begin
 //CL.AddDelphiFunction('Function TzSpecificLocalTimeToSystemTime( lpTimeZoneInformation : PTimeZoneInformation; var lpLocalTime, lpUniversalTime : TSystemTime) : BOOL');
 //CL.AddDelphiFunction('Function SystemTimeToTzSpecificLocalTime( lpTimeZoneInformation : PTimeZoneInformation; var lpUniversalTime, lpLocalTime : TSystemTime) : BOOL');
 CL.AddDelphiFunction('Function DateTime2UnivDateTime( d : TDateTime) : TDateTime');
 CL.AddDelphiFunction('Function UnivDateTime2LocalDateTime( d : TDateTime) : TDateTime');
 CL.AddDelphiFunction('Function UnivDateTimeToUnix( dtDate : TDateTime) : Longint');
 CL.AddDelphiFunction('Function UnixToUnivDateTime( USec : Longint) : TDateTime');
 CL.AddDelphiFunction('Function UnixTimeToLocalElapsedTime( USec : Longint) : AnsiString');
 CL.AddDelphiFunction('Function DateTimeElapsedTime( dtDate : TDateTime) : AnsiString');
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_UTime_Routines(S: TPSExec);
begin
 //S.RegisterDelphiFunction(@TzSpecificLocalTimeToSystemTime, 'TzSpecificLocalTimeToSystemTime', CdStdCall);
 //S.RegisterDelphiFunction(@SystemTimeToTzSpecificLocalTime, 'SystemTimeToTzSpecificLocalTime', CdStdCall);
 S.RegisterDelphiFunction(@DateTime2UnivDateTime, 'DateTime2UnivDateTime', cdRegister);
 S.RegisterDelphiFunction(@UnivDateTime2LocalDateTime, 'UnivDateTime2LocalDateTime', cdRegister);
 S.RegisterDelphiFunction(@UnivDateTimeToUnix, 'UnivDateTimeToUnix', cdRegister);
 S.RegisterDelphiFunction(@UnixToUnivDateTime, 'UnixToUnivDateTime', cdRegister);
 S.RegisterDelphiFunction(@UnixTimeToLocalElapsedTime, 'UnixTimeToLocalElapsedTime', cdRegister);
 S.RegisterDelphiFunction(@DateTimeElapsedTime, 'DateTimeElapsedTime', cdRegister);
end;

 
 
{ TPSImport_UTime }
(*----------------------------------------------------------------------------*)
procedure TPSImport_UTime.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_UTime(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_UTime.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_UTime_Routines(CompExec.Exec); // comment it if no routines
end;
(*----------------------------------------------------------------------------*)
 
 
end.
