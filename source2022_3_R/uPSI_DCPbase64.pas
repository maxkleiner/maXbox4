unit uPSI_DCPbase64;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 

 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_DCPbase64 = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_DCPbase64(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_DCPbase64_Routines(S: TPSExec);

procedure Register;

implementation


uses
   DCPbase64
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_DCPbase64]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_DCPbase64(CL: TPSPascalCompiler);
begin
 CL.AddDelphiFunction('Function Base64EncodeStr( const Value : AnsiString) : AnsiString');
 CL.AddDelphiFunction('Function Base64DecodeStr( const Value : AnsiString) : AnsiString');
 CL.AddDelphiFunction('Function Base64Encode( pInput : string; pOutput : string; Size : longint) : longint');
 CL.AddDelphiFunction('Function Base64Decode( pInput : string; pOutput : string; Size : longint) : longint');
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_DCPbase64_Routines(S: TPSExec);
begin
 S.RegisterDelphiFunction(@Base64EncodeStr, 'Base64EncodeStr', cdRegister);
 S.RegisterDelphiFunction(@Base64DecodeStr, 'Base64DecodeStr', cdRegister);
 S.RegisterDelphiFunction(@Base64Encode, 'Base64Encode', cdRegister);
 S.RegisterDelphiFunction(@Base64Decode, 'Base64Decode', cdRegister);
end;

 
 
{ TPSImport_DCPbase64 }
(*----------------------------------------------------------------------------*)
procedure TPSImport_DCPbase64.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_DCPbase64(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_DCPbase64.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_DCPbase64_Routines(CompExec.Exec); // comment it if no routines
end;
(*----------------------------------------------------------------------------*)
 
 
end.
