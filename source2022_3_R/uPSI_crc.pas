unit uPSI_crc;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 

 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_crc = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_crc(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_crc_Routines(S: TPSExec);

procedure Register;

implementation


uses
   utils
  ,tpautils
  ,vpautils
  ,fpautils
  ,dpautils
  ,gpautils
  ,crc
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_crc]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_crc(CL: TPSPascalCompiler);
begin
 CL.AddDelphiFunction('Function UpdateCrc32( InitCrc : longword; b : byte) : longword');
 CL.AddDelphiFunction('Function UpdateCrc16( InitCrc : word; b : byte) : word');
 CL.AddDelphiFunction('Function UpdateAdler32( InitAdler : longword; b : byte) : longword');
 CL.AddDelphiFunction('Function UpdateFletcher8( InitFletcher : word; b : byte) : word');
 CL.AddDelphiFunction('Function UpdateCRC( InitCrc : word; b : byte) : word');
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_crc_Routines(S: TPSExec);
begin
 S.RegisterDelphiFunction(@UpdateCrc32, 'UpdateCrc32', cdRegister);
 S.RegisterDelphiFunction(@UpdateCrc16, 'UpdateCrc16', cdRegister);
 S.RegisterDelphiFunction(@UpdateAdler32, 'UpdateAdler32', cdRegister);
 S.RegisterDelphiFunction(@UpdateFletcher8, 'UpdateFletcher8', cdRegister);
 S.RegisterDelphiFunction(@UpdateCRC, 'UpdateCRC', cdRegister);
end;

 
 
{ TPSImport_crc }
(*----------------------------------------------------------------------------*)
procedure TPSImport_crc.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_crc(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_crc.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_crc_Routines(CompExec.Exec); // comment it if no routines
end;
(*----------------------------------------------------------------------------*)
 
 
end.
